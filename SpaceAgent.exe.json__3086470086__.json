{
  "pe_name": "SpaceAgent.exe",
  "pe_type": 523,
  "pe_size": 165376,
  "pe_subsystem": 2,
  "pe_subsystem_caption": "The Windows graphical user interface (GUI) subsystem",
  "pe_path": "c:\\Windows\\System32\\SpaceAgent.exe",
  "pe_timedate_stamp": 4155436447,
  "pe_timedate_human": "2101-09-06T07:54:07.000Z",
  "ImageDLLImports": [
    {
      "name": "advapi32.dll",
      "imports": 16,
      "functions": [
        "AddAccessAllowedAce",
        "AdjustTokenPrivileges",
        "AllocateAndInitializeSid",
        "EventRegister",
        "EventUnregister",
        "EventWriteTransfer",
        "FreeSid",
        "GetLengthSid",
        "InitializeAcl",
        "InitializeSecurityDescriptor",
        "LookupPrivilegeValueW",
        "OpenProcessToken",
        "OpenThreadToken",
        "SetSecurityDescriptorDacl",
        "SetSecurityDescriptorGroup",
        "SetSecurityDescriptorOwner"
      ]
    },
    {
      "name": "kernel32.dll",
      "imports": 102,
      "functions": [
        "AcquireSRWLockExclusive",
        "AcquireSRWLockShared",
        "CancelIo",
        "CloseHandle",
        "CloseThreadpool",
        "CloseThreadpoolTimer",
        "CloseThreadpoolWork",
        "CreateEventExW",
        "CreateEventW",
        "CreateFileW",
        "CreateMutexExW",
        "CreateSemaphoreExW",
        "CreateThread",
        "CreateThreadpool",
        "CreateThreadpoolTimer",
        "CreateThreadpoolWork",
        "DebugBreak",
        "DefineDosDeviceW",
        "DeleteCriticalSection",
        "DeleteVolumeMountPointW",
        "DeviceIoControl",
        "DuplicateHandle",
        "EnterCriticalSection",
        "FindFirstVolumeMountPointW",
        "FindFirstVolumeW",
        "FindNextVolumeMountPointW",
        "FindNextVolumeW",
        "FindVolumeClose",
        "FindVolumeMountPointClose",
        "FormatMessageW",
        "FreeLibrary",
        "GetCommandLineW",
        "GetCurrentProcess",
        "GetCurrentProcessId",
        "GetCurrentThread",
        "GetCurrentThreadId",
        "GetExitCodeProcess",
        "GetExitCodeThread",
        "GetLastError",
        "GetModuleFileNameA",
        "GetModuleHandleExW",
        "GetModuleHandleW",
        "GetOverlappedResult",
        "GetProcAddress",
        "GetProcessHeap",
        "GetProcessId",
        "GetProcessIdOfThread",
        "GetStartupInfoW",
        "GetSystemTimeAsFileTime",
        "GetTickCount",
        "GetVolumeInformationW",
        "GetVolumePathNamesForVolumeNameW",
        "HeapAlloc",
        "HeapFree",
        "HeapReAlloc",
        "InitializeCriticalSection",
        "InitializeCriticalSectionAndSpinCount",
        "InitializeCriticalSectionEx",
        "IsDebuggerPresent",
        "LeaveCriticalSection",
        "LoadLibraryExW",
        "LocalAlloc",
        "LocalFree",
        "LocalSize",
        "OpenProcess",
        "OpenSemaphoreW",
        "OutputDebugStringW",
        "PeekNamedPipe",
        "QueryPerformanceCounter",
        "ReadFile",
        "ReleaseMutex",
        "ReleaseSRWLockExclusive",
        "ReleaseSRWLockShared",
        "ReleaseSemaphore",
        "ResetEvent",
        "SetEvent",
        "SetFilePointerEx",
        "SetLastError",
        "SetPriorityClass",
        "SetProcessMitigationPolicy",
        "SetThreadpoolThreadMaximum",
        "SetThreadpoolThreadMinimum",
        "SetThreadpoolTimer",
        "SetUnhandledExceptionFilter",
        "SetVolumeLabelW",
        "SetVolumeMountPointW",
        "Sleep",
        "SleepConditionVariableSRW",
        "SleepEx",
        "SubmitThreadpoolWork",
        "TerminateProcess",
        "UnhandledExceptionFilter",
        "VerSetConditionMask",
        "VerifyVersionInfoW",
        "WaitForMultipleObjects",
        "WaitForMultipleObjectsEx",
        "WaitForSingleObject",
        "WaitForSingleObjectEx",
        "WaitForThreadpoolTimerCallbacks",
        "WaitForThreadpoolWorkCallbacks",
        "WakeAllConditionVariable",
        "WriteFile"
      ]
    },
    {
      "name": "user32.dll",
      "imports": 13,
      "functions": [
        "CreateWindowExW",
        "DefWindowProcW",
        "DestroyWindow",
        "DispatchMessageW",
        "GetMessageW",
        "GetWindowLongPtrW",
        "PeekMessageW",
        "PostThreadMessageW",
        "RegisterClassExW",
        "RegisterDeviceNotificationW",
        "SetWindowLongPtrW",
        "UnregisterClassW",
        "UnregisterDeviceNotification"
      ]
    },
    {
      "name": "msvcrt.dll",
      "imports": 30,
      "functions": [
        "??1type_info@@UEAA@XZ",
        "?terminate@@YAXXZ",
        "_CxxThrowException",
        "_XcptFilter",
        "__C_specific_handler",
        "__dllonexit",
        "__set_app_type",
        "__setusermatherr",
        "__wgetmainargs",
        "_amsg_exit",
        "_callnewh",
        "_cexit",
        "_commode",
        "_exit",
        "_fmode",
        "_initterm",
        "_lock",
        "_onexit",
        "_purecall",
        "_unlock",
        "_vsnwprintf",
        "_wcmdln",
        "exit",
        "free",
        "malloc",
        "memcmp",
        "memcpy",
        "memcpy_s",
        "memmove_s",
        "memset"
      ]
    },
    {
      "name": "ntdll.dll",
      "imports": 11,
      "functions": [
        "NtQueryInformationProcess",
        "NtQueryObject",
        "RtlCaptureContext",
        "RtlDeleteElementGenericTableAvlEx",
        "RtlEnumerateGenericTableWithoutSplayingAvl",
        "RtlEqualUnicodeString",
        "RtlInitializeGenericTableAvl",
        "RtlInsertElementGenericTableAvl",
        "RtlLookupFunctionEntry",
        "RtlNtStatusToDosError",
        "RtlVirtualUnwind"
      ]
    },
    {
      "name": "bcrypt.dll",
      "imports": 1,
      "functions": [
        "BCryptGenRandom"
      ]
    },
    {
      "name": "rpcrt4.dll",
      "imports": 1,
      "functions": [
        "UuidCreate"
      ]
    },
    {
      "name": "ole32.dll",
      "imports": 5,
      "functions": [
        "CoCreateInstance",
        "CoInitializeEx",
        "CoInitializeSecurity",
        "CoUninitialize",
        "StringFromGUID2"
      ]
    },
    {
      "name": "oleaut32.dll",
      "imports": 0,
      "functions": []
    },
    {
      "name": "shlwapi.dll",
      "imports": 2,
      "functions": [
        "StrCmpNIW",
        "StrToIntExW"
      ]
    },
    {
      "name": "shell32.dll",
      "imports": 1,
      "functions": [
        "CommandLineToArgvW"
      ]
    },
    {
      "name": "setupapi.dll",
      "imports": 14,
      "functions": [
        "SetupDiCallClassInstaller",
        "SetupDiCreateDeviceInfoListExA",
        "SetupDiCreateDeviceInfoListExW",
        "SetupDiDeleteDeviceInfo",
        "SetupDiDeleteDeviceInterfaceData",
        "SetupDiDestroyDeviceInfoList",
        "SetupDiEnumDeviceInterfaces",
        "SetupDiGetClassDevsExA",
        "SetupDiGetClassPropertyW",
        "SetupDiGetDeviceInstanceIdW",
        "SetupDiGetDeviceInterfaceDetailW",
        "SetupDiGetDevicePropertyW",
        "SetupDiOpenDeviceInfoW",
        "SetupDiOpenDeviceInterfaceW"
      ]
    },
    {
      "name": "api-ms-win-devices-query-l1-1-0.dll",
      "imports": 2,
      "functions": [
        "DevFreeObjectProperties",
        "DevGetObjectProperties"
      ]
    },
    {
      "name": "netapi32.dll",
      "imports": 3,
      "functions": [
        "NetApiBufferFree",
        "NetShareDelEx",
        "NetShareEnum"
      ]
    }
  ],
  "ImageDLLExports": {
    "exports": 0,
    "functions": []
  },
  "ImageHashSignatures": {
    "sha2": "0793cd515f80fb8025924418c7e289047bbc15019acea868914ea0015fcb6ada"
  },
  "scan": {
    "intentions": 4,
    "uniq_apis_matched": 7,
    "results": [
      {
        "intent": "Implement Features To Communicate via NamedPipes",
        "tag": "Expert Input:IBO.0004 - Implement Named Pipes",
        "component": "Processes",
        "inputs": 12,
        "matches": 1,
        "apis": [
          "PeekNamedPipe"
        ]
      },
      {
        "intent": "Implements Features For User CLI Experience",
        "tag": "Expert Input:IBO.0001 - Accepts CommandLine Arguments",
        "component": "Processes",
        "inputs": 3,
        "matches": 2,
        "apis": [
          "CommandLineToArgvW",
          "__wgetmainargs"
        ]
      },
      {
        "intent": "Enumerate Available Network Shares",
        "tag": "Discovery:T1135 - Network Share Discovery",
        "component": "Networking",
        "inputs": 2,
        "matches": 1,
        "apis": [
          "NetShareEnum"
        ]
      },
      {
        "intent": "Manipulate Windows Tokens",
        "tag": "Defense Evasion:T1134 - Access Token Manipulation",
        "component": "Privileges",
        "inputs": 10,
        "matches": 3,
        "apis": [
          "AdjustTokenPrivileges",
          "OpenProcessToken",
          "OpenThreadToken"
        ]
      }
    ]
  }
}