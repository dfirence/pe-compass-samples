{
  "pe_name": "pcwutl.dll",
  "pe_type": 523,
  "pe_size": 138240,
  "pe_subsystem": 3,
  "pe_subsystem_caption": "The Windows character (Cosole UI) subsystem",
  "pe_path": "c:\\Windows\\WinSxS\\amd64_microsoft-windows-pcwdiagnostic_31bf3856ad364e35_10.0.19041.1266_none_69f1a169b4d96a7c\\pcwutl.dll",
  "pe_timedate_stamp": 870031840,
  "pe_timedate_human": "1997-07-27T19:30:40.000Z",
  "ImageDLLImports": [
    {
      "name": "msvcrt.dll",
      "imports": 43,
      "functions": [
        "??0exception@@QEAA@AEBQEBDH@Z",
        "??0exception@@QEAA@AEBV0@@Z",
        "??1exception@@UEAA@XZ",
        "??1type_info@@UEAA@XZ",
        "?what@exception@@UEBAPEBDXZ",
        "_CxxThrowException",
        "_XcptFilter",
        "__C_specific_handler",
        "__CxxFrameHandler3",
        "__dllonexit",
        "_amsg_exit",
        "_callnewh",
        "_initterm",
        "_itow_s",
        "_lock",
        "_onexit",
        "_unlock",
        "_vsnprintf",
        "_vsnwprintf",
        "_wcsdup",
        "_wcsicmp",
        "_wcslwr",
        "_wcsnicmp",
        "_wtof",
        "_wtoi",
        "free",
        "malloc",
        "memcmp",
        "memcpy",
        "memmove",
        "memset",
        "sprintf_s",
        "sscanf_s",
        "strchr",
        "strcpy_s",
        "strncmp",
        "wcscat_s",
        "wcschr",
        "wcscmp",
        "wcscpy_s",
        "wcsncmp",
        "wcsrchr",
        "wcsstr"
      ]
    },
    {
      "name": "aepic.dll",
      "imports": 2,
      "functions": [
        "PicFreeFileInfo",
        "PicRetrieveFileInfo"
      ]
    },
    {
      "name": "apphelp.dll",
      "imports": 1,
      "functions": [
        "SdbGrabMatchingInfoEx"
      ]
    },
    {
      "name": "advapi32.dll",
      "imports": 15,
      "functions": [
        "CredReadW",
        "EventRegister",
        "EventUnregister",
        "EventWriteTransfer",
        "ImpersonateLoggedOnUser",
        "RegCloseKey",
        "RegCreateKeyExW",
        "RegDeleteTreeW",
        "RegEnumKeyExW",
        "RegEnumValueW",
        "RegGetValueW",
        "RegOpenKeyExW",
        "RegQueryInfoKeyW",
        "RegSetValueExW",
        "RevertToSelf"
      ]
    },
    {
      "name": "kernel32.dll",
      "imports": 60,
      "functions": [
        "CloseHandle",
        "CreateActCtxW",
        "CreateDirectoryW",
        "CreateFileMappingW",
        "CreateFileW",
        "CreateMutexW",
        "DebugBreak",
        "ExitProcess",
        "FileTimeToSystemTime",
        "FormatMessageW",
        "FreeLibrary",
        "GetCurrentProcess",
        "GetCurrentProcessId",
        "GetCurrentThreadId",
        "GetDriveTypeW",
        "GetFileTime",
        "GetLastError",
        "GetLocalTime",
        "GetModuleFileNameW",
        "GetModuleHandleExW",
        "GetModuleHandleW",
        "GetProcAddress",
        "GetProcessHeap",
        "GetSystemDirectoryW",
        "GetSystemTimeAsFileTime",
        "GetTempFileNameW",
        "GetTempPathW",
        "GetTickCount",
        "GetTickCount64",
        "GetVersionExW",
        "GlobalFree",
        "HeapAlloc",
        "HeapFree",
        "HeapReAlloc",
        "IsDebuggerPresent",
        "LoadLibraryExW",
        "LoadLibraryW",
        "MapViewOfFile",
        "MultiByteToWideChar",
        "OutputDebugStringA",
        "OutputDebugStringW",
        "QueryActCtxW",
        "QueryPerformanceCounter",
        "ReleaseActCtx",
        "ReleaseMutex",
        "RtlCaptureContext",
        "RtlLookupFunctionEntry",
        "RtlVirtualUnwind",
        "SetLastError",
        "SetUnhandledExceptionFilter",
        "Sleep",
        "SystemTimeToFileTime",
        "TerminateProcess",
        "UnhandledExceptionFilter",
        "UnmapViewOfFile",
        "VerSetConditionMask",
        "VerifyVersionInfoW",
        "WTSGetActiveConsoleSessionId",
        "WaitForSingleObject",
        "WriteFile"
      ]
    },
    {
      "name": "ntdll.dll",
      "imports": 45,
      "functions": [
        "EtwEventRegister",
        "EtwEventUnregister",
        "EtwEventWrite",
        "EtwEventWriteNoRegistration",
        "LdrResSearchResource",
        "NtClose",
        "NtCreateSection",
        "NtQueryLicenseValue",
        "NtQuerySection",
        "RtlAllocateHeap",
        "RtlAnsiStringToUnicodeString",
        "RtlAppendUnicodeStringToString",
        "RtlAppendUnicodeToString",
        "RtlDeleteCriticalSection",
        "RtlDosPathNameToNtPathName_U_WithStatus",
        "RtlEnterCriticalSection",
        "RtlEqualString",
        "RtlFreeHeap",
        "RtlFreeUnicodeString",
        "RtlGetNativeSystemInformation",
        "RtlImageDirectoryEntryToData",
        "RtlImageRvaToVa",
        "RtlInitAnsiString",
        "RtlInitString",
        "RtlInitUnicodeString",
        "RtlInitUnicodeStringEx",
        "RtlInitializeCriticalSection",
        "RtlLeaveCriticalSection",
        "RtlMultiByteToUnicodeN",
        "RtlNtStatusToDosError",
        "RtlStringFromGUID",
        "RtlUpcaseUnicodeChar",
        "RtlVerifyVersionInfo",
        "RtlxAnsiStringToUnicodeSize",
        "WinSqmIsOptedInEx",
        "ZwClose",
        "ZwCreateFile",
        "ZwCreateSection",
        "ZwEnumerateKey",
        "ZwMapViewOfSection",
        "ZwOpenKey",
        "ZwQueryInformationFile",
        "ZwQuerySystemInformation",
        "ZwQueryValueKey",
        "ZwUnmapViewOfSection"
      ]
    },
    {
      "name": "shell32.dll",
      "imports": 1,
      "functions": [
        "ShellExecuteExW"
      ]
    },
    {
      "name": "shlwapi.dll",
      "imports": 7,
      "functions": [
        "PathFileExistsW",
        "PathFindFileNameW",
        "PathGetDriveNumberW",
        "PathIsRootW",
        "PathRemoveExtensionW",
        "PathRemoveFileSpecW",
        "PathUnquoteSpacesW"
      ]
    },
    {
      "name": "user32.dll",
      "imports": 1,
      "functions": [
        "LoadStringW"
      ]
    },
    {
      "name": "version.dll",
      "imports": 3,
      "functions": [
        "GetFileVersionInfoSizeW",
        "GetFileVersionInfoW",
        "VerQueryValueW"
      ]
    },
    {
      "name": "winhttp.dll",
      "imports": 15,
      "functions": [
        "WinHttpCloseHandle",
        "WinHttpConnect",
        "WinHttpGetDefaultProxyConfiguration",
        "WinHttpGetIEProxyConfigForCurrentUser",
        "WinHttpGetProxyForUrl",
        "WinHttpOpen",
        "WinHttpOpenRequest",
        "WinHttpQueryAuthSchemes",
        "WinHttpQueryDataAvailable",
        "WinHttpQueryHeaders",
        "WinHttpReadData",
        "WinHttpReceiveResponse",
        "WinHttpSendRequest",
        "WinHttpSetCredentials",
        "WinHttpSetOption"
      ]
    },
    {
      "name": "ext-ms-win-session-wtsapi32-l1-1-0.dll",
      "imports": 3,
      "functions": [
        "WTSEnumerateSessionsW",
        "WTSFreeMemory",
        "WTSQueryUserToken"
      ]
    },
    {
      "name": "api-ms-win-core-com-l1-1-0.dll",
      "imports": 1,
      "functions": [
        "CoCreateGuid"
      ]
    },
    {
      "name": "wer.dll",
      "imports": 5,
      "functions": [
        "WerReportAddFile",
        "WerReportCloseHandle",
        "WerReportCreate",
        "WerReportSetParameter",
        "WerReportSubmit"
      ]
    }
  ],
  "ImageDLLExports": {
    "exports": 10,
    "functions": [
      "LaunchApplicationW",
      "SanitizeFullPath",
      "GetAppInformationFromCloud",
      "GetLayerFromGenome",
      "GetMatchingInfo",
      "GetTempFile",
      "LogAeEvent",
      "LogPCWDebugEvent",
      "RetrieveFileAndProgramId",
      "SendPcwWerReport"
    ]
  },
  "ImageHashSignatures": {
    "sha2": "6dfbc59c5f26b16b93502cccb8389afa94d764b2d96131f77f5839b8d1476428"
  },
  "scan": {
    "intentions": 7,
    "uniq_apis_matched": 15,
    "results": [
      {
        "intent": "Query And Discover Windows Registry Configuration Settings",
        "tag": "Discovery:T1012 - Query Registry",
        "component": "Registry",
        "inputs": 11,
        "matches": 2,
        "apis": [
          "RegGetValueW",
          "RegQueryInfoKeyW"
        ]
      },
      {
        "intent": "Implements Features To Create/Manipulate The Windows Registry",
        "tag": "Expert Input:IBO.0008 - Create/Manipulate The Windows Registry",
        "component": "Registry",
        "inputs": 33,
        "matches": 3,
        "apis": [
          "RegCreateKeyExW",
          "RegOpenKeyExW",
          "RegSetValueExW"
        ]
      },
      {
        "intent": "Implements Features To Execute or Spawn New Processes On The Target System",
        "tag": "Expert Input:IBO.0002 - Spawn New Process",
        "component": "Processes",
        "inputs": 7,
        "matches": 1,
        "apis": [
          "ShellExecuteExW"
        ]
      },
      {
        "intent": "Implements Features To Discover Network Proxy Configuration",
        "tag": "Expert Input:IBO.00015 - Network Layer-7 HTTP",
        "component": "Networking",
        "inputs": 2,
        "matches": 2,
        "apis": [
          "WinHttpGetDefaultProxyConfiguration",
          "WinHttpGetIEProxyConfigForCurrentUser"
        ]
      },
      {
        "intent": "Initiate Network Connections Over HTTP, HTTPS To Download Content On The Target System",
        "tag": "Command And Control:T1105 - Ingress Tool Transfer",
        "component": "Networking",
        "inputs": 21,
        "matches": 4,
        "apis": [
          "WinHttpConnect",
          "WinHttpGetProxyForUrl",
          "WinHttpOpenRequest",
          "WinHttpSendRequest"
        ]
      },
      {
        "intent": "Implements Features To Enumerate The Windows Registry",
        "tag": "Expert Input:IBO.0009 - Enumerate The Windows Registry",
        "component": "Registry",
        "inputs": 6,
        "matches": 2,
        "apis": [
          "RegEnumKeyExW",
          "RegEnumValueW"
        ]
      },
      {
        "intent": "Stealing Tokens To Impersonate Windows Identities",
        "tag": "Privilege Escalation:T1134.001 - Token Impersonation/Theft",
        "component": "Privileges",
        "inputs": 4,
        "matches": 1,
        "apis": [
          "ImpersonateLoggedOnUser"
        ]
      }
    ]
  }
}