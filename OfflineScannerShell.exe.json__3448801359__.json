{
  "pe_name": "OfflineScannerShell.exe",
  "pe_type": 523,
  "pe_size": 487752,
  "pe_subsystem": 2,
  "pe_subsystem_caption": "The Windows graphical user interface (GUI) subsystem",
  "pe_path": "c:\\Windows\\WinSxS\\amd64_windows-defender-offline-amcore_31bf3856ad364e35_10.0.19041.1503_none_b945a868fe2c8021\\OfflineScannerShell.exe",
  "pe_timedate_stamp": 4293633893,
  "pe_timedate_human": "2106-01-22T20:04:53.000Z",
  "ImageDLLImports": [
    {
      "name": "kernel32.dll",
      "imports": 97,
      "functions": [
        "AllocConsole",
        "CloseHandle",
        "CopyFileW",
        "CreateDirectoryW",
        "CreateEventW",
        "CreateFileW",
        "CreateMutexW",
        "CreateProcessW",
        "CreateThread",
        "CreateToolhelp32Snapshot",
        "DebugBreak",
        "DeleteFileW",
        "EnterCriticalSection",
        "ExpandEnvironmentStringsW",
        "FindClose",
        "FindFirstFileW",
        "FindNextFileW",
        "FindResourceExW",
        "FindResourceW",
        "FormatMessageW",
        "FreeConsole",
        "FreeLibrary",
        "FreeResource",
        "GetCommandLineW",
        "GetConsoleCursorInfo",
        "GetCurrentThreadId",
        "GetDiskFreeSpaceExW",
        "GetDriveTypeW",
        "GetExitCodeProcess",
        "GetExitCodeThread",
        "GetFileAttributesW",
        "GetFileSize",
        "GetFileSizeEx",
        "GetLocalTime",
        "GetLocaleInfoW",
        "GetLogicalDrives",
        "GetLongPathNameW",
        "GetModuleFileNameW",
        "GetNativeSystemInfo",
        "GetPrivateProfileIntW",
        "GetPrivateProfileStringW",
        "GetStdHandle",
        "GetSystemDefaultUILanguage",
        "GetSystemDirectoryW",
        "GetTempFileNameW",
        "GetTempPathW",
        "GetTimeFormatW",
        "GetUserDefaultUILanguage",
        "GetVersionExW",
        "GetWindowsDirectoryW",
        "GlobalFindAtomW",
        "HeapSetInformation",
        "InitializeCriticalSectionAndSpinCount",
        "IsWow64Process",
        "K32GetModuleFileNameExW",
        "LeaveCriticalSection",
        "LoadLibraryExW",
        "LoadLibraryW",
        "LoadResource",
        "LocalFree",
        "LockResource",
        "MoveFileExW",
        "MoveFileW",
        "MulDiv",
        "OpenProcess",
        "OutputDebugStringW",
        "Process32FirstW",
        "Process32NextW",
        "ProcessIdToSessionId",
        "RaiseException",
        "ReadFile",
        "ReleaseMutex",
        "RemoveDirectoryW",
        "ResetEvent",
        "SetConsoleCtrlHandler",
        "SetConsoleCursorInfo",
        "SetConsoleCursorPosition",
        "SetConsoleTextAttribute",
        "SetConsoleTitleW",
        "SetEndOfFile",
        "SetEnvironmentVariableW",
        "SetErrorMode",
        "SetEvent",
        "SetFileAttributesW",
        "SetFilePointer",
        "SetLastError",
        "SizeofResource",
        "SwitchToThread",
        "SystemTimeToFileTime",
        "TryEnterCriticalSection",
        "VerifyVersionInfoW",
        "VirtualLock",
        "WaitForMultipleObjects",
        "WaitForSingleObject",
        "WriteConsoleW",
        "WriteFile",
        "WritePrivateProfileStringW"
      ]
    },
    {
      "name": "user32.dll",
      "imports": 60,
      "functions": [
        "AdjustWindowRectEx",
        "BeginPaint",
        "CallWindowProcW",
        "CreateDialogParamW",
        "CreateWindowExW",
        "DefWindowProcW",
        "DestroyIcon",
        "DestroyWindow",
        "DialogBoxIndirectParamW",
        "DispatchMessageW",
        "EnableWindow",
        "EndDialog",
        "EndPaint",
        "FindWindowExW",
        "FindWindowW",
        "GetClassInfoExW",
        "GetClientRect",
        "GetDC",
        "GetDesktopWindow",
        "GetDlgItem",
        "GetLastActivePopup",
        "GetMessageW",
        "GetParent",
        "GetSysColor",
        "GetSystemMetrics",
        "GetWindow",
        "GetWindowLongPtrW",
        "GetWindowLongW",
        "GetWindowRect",
        "GetWindowTextLengthW",
        "GetWindowTextW",
        "GetWindowThreadProcessId",
        "IsDialogMessageW",
        "IsRectEmpty",
        "IsWindow",
        "KillTimer",
        "LoadCursorW",
        "LoadIconW",
        "LoadImageW",
        "LoadStringW",
        "MapWindowPoints",
        "MessageBoxW",
        "MoveWindow",
        "PostMessageW",
        "PostQuitMessage",
        "PostThreadMessageW",
        "RegisterClassExW",
        "ReleaseDC",
        "SendMessageW",
        "SetFocus",
        "SetForegroundWindow",
        "SetTimer",
        "SetWindowLongPtrW",
        "SetWindowPos",
        "SetWindowTextW",
        "ShowWindow",
        "SystemParametersInfoW",
        "TranslateMessage",
        "UnregisterClassA",
        "UpdateWindow"
      ]
    },
    {
      "name": "msvcrt.dll",
      "imports": 67,
      "functions": [
        "??0exception@@QEAA@AEBQEBD@Z",
        "??0exception@@QEAA@AEBQEBDH@Z",
        "??0exception@@QEAA@AEBV0@@Z",
        "??0exception@@QEAA@XZ",
        "??1exception@@UEAA@XZ",
        "??1type_info@@UEAA@XZ",
        "?terminate@@YAXXZ",
        "?what@exception@@UEBAPEBDXZ",
        "_CxxThrowException",
        "_XcptFilter",
        "__C_specific_handler",
        "__CxxFrameHandler3",
        "__dllonexit",
        "__set_app_type",
        "__setusermatherr",
        "__wgetmainargs",
        "_amsg_exit",
        "_beginthreadex",
        "_cexit",
        "_commode",
        "_errno",
        "_exit",
        "_fmode",
        "_initterm",
        "_lock",
        "_onexit",
        "_purecall",
        "_unlock",
        "_vscwprintf",
        "_vsnprintf",
        "_vsnwprintf",
        "_wchmod",
        "_wcsicmp",
        "_wcsnicmp",
        "_wfopen",
        "_wfsopen",
        "exit",
        "fclose",
        "feof",
        "ferror",
        "fgets",
        "fgetwc",
        "fgetws",
        "free",
        "fseek",
        "iswalpha",
        "iswspace",
        "malloc",
        "memcmp",
        "memcpy",
        "memcpy_s",
        "memmove",
        "memmove_s",
        "memset",
        "realloc",
        "swprintf_s",
        "swscanf_s",
        "towlower",
        "towupper",
        "vswprintf_s",
        "wcschr",
        "wcscmp",
        "wcscpy_s",
        "wcsncmp",
        "wcsrchr",
        "wcsstr",
        "wcstoul"
      ]
    },
    {
      "name": "oleaut32.dll",
      "imports": 0,
      "functions": []
    },
    {
      "name": "ole32.dll",
      "imports": 5,
      "functions": [
        "CoCreateGuid",
        "CoCreateInstance",
        "CoInitializeEx",
        "CoUninitialize",
        "StringFromGUID2"
      ]
    },
    {
      "name": "api-ms-win-core-synch-l1-1-0.dll",
      "imports": 5,
      "functions": [
        "AcquireSRWLockExclusive",
        "DeleteCriticalSection",
        "InitializeCriticalSection",
        "InitializeCriticalSectionEx",
        "ReleaseSRWLockExclusive"
      ]
    },
    {
      "name": "api-ms-win-core-string-l1-1-0.dll",
      "imports": 1,
      "functions": [
        "MultiByteToWideChar"
      ]
    },
    {
      "name": "api-ms-win-core-processenvironment-l1-1-0.dll",
      "imports": 1,
      "functions": [
        "GetEnvironmentVariableW"
      ]
    },
    {
      "name": "api-ms-win-core-errorhandling-l1-1-0.dll",
      "imports": 3,
      "functions": [
        "GetLastError",
        "SetUnhandledExceptionFilter",
        "UnhandledExceptionFilter"
      ]
    },
    {
      "name": "api-ms-win-core-heap-l1-1-0.dll",
      "imports": 6,
      "functions": [
        "GetProcessHeap",
        "HeapAlloc",
        "HeapDestroy",
        "HeapFree",
        "HeapReAlloc",
        "HeapSize"
      ]
    },
    {
      "name": "api-ms-win-core-memory-l1-1-0.dll",
      "imports": 2,
      "functions": [
        "VirtualAlloc",
        "VirtualFree"
      ]
    },
    {
      "name": "api-ms-win-core-processthreads-l1-1-0.dll",
      "imports": 3,
      "functions": [
        "GetCurrentProcess",
        "GetCurrentProcessId",
        "TerminateProcess"
      ]
    },
    {
      "name": "api-ms-win-core-libraryloader-l1-2-0.dll",
      "imports": 3,
      "functions": [
        "GetModuleHandleW",
        "GetProcAddress",
        "LoadLibraryExA"
      ]
    },
    {
      "name": "api-ms-win-core-util-l1-1-0.dll",
      "imports": 2,
      "functions": [
        "DecodePointer",
        "EncodePointer"
      ]
    },
    {
      "name": "api-ms-win-core-processthreads-l1-1-1.dll",
      "imports": 1,
      "functions": [
        "FlushInstructionCache"
      ]
    },
    {
      "name": "api-ms-win-core-interlocked-l1-1-0.dll",
      "imports": 2,
      "functions": [
        "InterlockedPopEntrySList",
        "InterlockedPushEntrySList"
      ]
    },
    {
      "name": "api-ms-win-core-synch-l1-2-0.dll",
      "imports": 3,
      "functions": [
        "Sleep",
        "SleepConditionVariableSRW",
        "WakeAllConditionVariable"
      ]
    },
    {
      "name": "api-ms-win-core-profile-l1-1-0.dll",
      "imports": 1,
      "functions": [
        "QueryPerformanceCounter"
      ]
    },
    {
      "name": "api-ms-win-core-sysinfo-l1-1-0.dll",
      "imports": 2,
      "functions": [
        "GetSystemTimeAsFileTime",
        "GetTickCount"
      ]
    },
    {
      "name": "api-ms-win-core-rtlsupport-l1-1-0.dll",
      "imports": 3,
      "functions": [
        "RtlCaptureContext",
        "RtlLookupFunctionEntry",
        "RtlVirtualUnwind"
      ]
    },
    {
      "name": "api-ms-win-core-debug-l1-1-0.dll",
      "imports": 1,
      "functions": [
        "OutputDebugStringA"
      ]
    },
    {
      "name": "gdiplus.dll",
      "imports": 16,
      "functions": [
        "GdipCreateFontFromDC",
        "GdipCreateFontFromLogfontA",
        "GdipCreateFromHDC",
        "GdipCreateLineBrushFromRectI",
        "GdipCreateSolidFill",
        "GdipCreateStringFormat",
        "GdipDeleteBrush",
        "GdipDeleteFont",
        "GdipDeleteGraphics",
        "GdipDeleteStringFormat",
        "GdipDrawString",
        "GdipFillRectangleI",
        "GdipMeasureString",
        "GdipSetTextRenderingHint",
        "GdiplusShutdown",
        "GdiplusStartup"
      ]
    },
    {
      "name": "mpclient.dll",
      "imports": 15,
      "functions": [
        "MpCleanOpen",
        "MpCleanStart",
        "MpClientUtilExportFunctions",
        "MpFreeMemory",
        "MpHandleClose",
        "MpManagerEnable",
        "MpManagerOpen",
        "MpManagerVersionQuery",
        "MpNotificationRegister",
        "MpRemapCallistoDetections",
        "MpScanResult",
        "MpScanStart",
        "MpThreatEnumerate",
        "MpThreatOpen",
        "MpUpdateStartEx"
      ]
    },
    {
      "name": "advapi32.dll",
      "imports": 36,
      "functions": [
        "AdjustTokenPrivileges",
        "AllocateAndInitializeSid",
        "ChangeServiceConfig2W",
        "ChangeServiceConfigW",
        "CheckTokenMembership",
        "CloseServiceHandle",
        "ControlService",
        "ConvertStringSecurityDescriptorToSecurityDescriptorW",
        "CreateProcessAsUserW",
        "CreateServiceW",
        "DeleteService",
        "DuplicateTokenEx",
        "FreeSid",
        "GetNamedSecurityInfoW",
        "GetSidSubAuthority",
        "GetSidSubAuthorityCount",
        "GetTokenInformation",
        "InitiateSystemShutdownExW",
        "LookupPrivilegeNameW",
        "LookupPrivilegeValueW",
        "OpenProcessToken",
        "OpenSCManagerW",
        "OpenServiceW",
        "PrivilegeCheck",
        "QueryServiceStatus",
        "RegCloseKey",
        "RegCreateKeyExW",
        "RegDeleteKeyW",
        "RegDeleteValueW",
        "RegEnumValueW",
        "RegOpenKeyExW",
        "RegQueryValueExW",
        "RegSetValueExW",
        "SetEntriesInAclW",
        "SetNamedSecurityInfoW",
        "TraceMessage"
      ]
    },
    {
      "name": "gdi32.dll",
      "imports": 13,
      "functions": [
        "CreateFontIndirectW",
        "DPtoLP",
        "DeleteObject",
        "GetDeviceCaps",
        "GetLayout",
        "GetObjectA",
        "ModifyWorldTransform",
        "RestoreDC",
        "SaveDC",
        "SetGraphicsMode",
        "SetLayout",
        "SetViewportOrgEx",
        "SetWindowOrgEx"
      ]
    },
    {
      "name": "wtsapi32.dll",
      "imports": 4,
      "functions": [
        "WTSEnumerateSessionsW",
        "WTSFreeMemory",
        "WTSQuerySessionInformationW",
        "WTSQueryUserToken"
      ]
    },
    {
      "name": "userenv.dll",
      "imports": 2,
      "functions": [
        "CreateEnvironmentBlock",
        "DestroyEnvironmentBlock"
      ]
    },
    {
      "name": "api-ms-win-core-version-l1-1-0.dll",
      "imports": 1,
      "functions": [
        "VerQueryValueW"
      ]
    },
    {
      "name": "api-ms-win-core-version-l1-1-1.dll",
      "imports": 2,
      "functions": [
        "GetFileVersionInfoSizeW",
        "GetFileVersionInfoW"
      ]
    },
    {
      "name": "crypt32.dll",
      "imports": 1,
      "functions": [
        "CertVerifyCertificateChainPolicy"
      ]
    },
    {
      "name": "shell32.dll",
      "imports": 3,
      "functions": [
        "SHGetFolderPathW",
        "SHGetPathFromIDListW",
        "SHGetSpecialFolderLocation"
      ]
    },
    {
      "name": "shlwapi.dll",
      "imports": 8,
      "functions": [
        "PathAppendW",
        "PathCombineW",
        "PathFileExistsW",
        "PathFindFileNameW",
        "PathIsDirectoryW",
        "PathIsRelativeW",
        "PathMatchSpecW",
        "PathRemoveFileSpecW"
      ]
    },
    {
      "name": "wintrust.dll",
      "imports": 9,
      "functions": [
        "CryptCATAdminAcquireContext",
        "CryptCATAdminCalcHashFromFileHandle",
        "CryptCATAdminEnumCatalogFromHash",
        "CryptCATAdminReleaseCatalogContext",
        "CryptCATAdminReleaseContext",
        "CryptCATCatalogInfoFromContext",
        "WTHelperGetProvSignerFromChain",
        "WTHelperProvDataFromStateData",
        "WinVerifyTrust"
      ]
    },
    {
      "name": "ntdll.dll",
      "imports": 2,
      "functions": [
        "RtlGetVersion",
        "RtlNtStatusToDosError"
      ]
    }
  ],
  "ImageDLLExports": {
    "exports": 0,
    "functions": []
  },
  "ImageHashSignatures": {
    "sha2": "548b89c81c3fad644832ee2b8694da8a2c9bd3269ce3025627e3076ccf234a13"
  },
  "scan": {
    "intentions": 15,
    "uniq_apis_matched": 27,
    "results": [
      {
        "intent": "Enumerate Files or Directories on the Target System",
        "tag": "Discovery:T1083 - File and Directory Discovery",
        "component": "Filesystem",
        "inputs": 5,
        "matches": 1,
        "apis": [
          "FindFirstFileW"
        ]
      },
      {
        "intent": "Delete Files From Disk Potentially Erasing Important Evidence To Cover Attack Activity",
        "tag": "Defense Evasion:T1070.004 - File Deletion",
        "component": "Filesystem",
        "inputs": 2,
        "matches": 1,
        "apis": [
          "DeleteFileW"
        ]
      },
      {
        "intent": "Implements Features To Execute or Spawn New Processes On The Target System As Another User Identity",
        "tag": "Expert Input:IBO.0003 - Spawn New Process As Different User",
        "component": "Processes",
        "inputs": 2,
        "matches": 1,
        "apis": [
          "CreateProcessAsUserW"
        ]
      },
      {
        "intent": "Conduct System Reboots Resulting In Loss of Attack Evidence Present in System Memory",
        "tag": "Impact:T1529 - System Shutdown/Reboot",
        "component": "---",
        "inputs": 6,
        "matches": 1,
        "apis": [
          "InitiateSystemShutdownExW"
        ]
      },
      {
        "intent": "Query And Discover Windows Registry Configuration Settings",
        "tag": "Discovery:T1012 - Query Registry",
        "component": "Registry",
        "inputs": 11,
        "matches": 1,
        "apis": [
          "RegQueryValueExW"
        ]
      },
      {
        "intent": "Manipulate Windows Tokens",
        "tag": "Defense Evasion:T1134 - Access Token Manipulation",
        "component": "Privileges",
        "inputs": 10,
        "matches": 3,
        "apis": [
          "AdjustTokenPrivileges",
          "CheckTokenMembership",
          "OpenProcessToken"
        ]
      },
      {
        "intent": "Implements Features For User CLI Experience",
        "tag": "Expert Input:IBO.0001 - Accepts CommandLine Arguments",
        "component": "Processes",
        "inputs": 3,
        "matches": 1,
        "apis": [
          "__wgetmainargs"
        ]
      },
      {
        "intent": "Implements Features To Enumerate The Windows Registry",
        "tag": "Expert Input:IBO.0009 - Enumerate The Windows Registry",
        "component": "Registry",
        "inputs": 6,
        "matches": 1,
        "apis": [
          "RegEnumValueW"
        ]
      },
      {
        "intent": "Enumerate Running Processes/Applications",
        "tag": "Discovery:T1057 - Process Discovery",
        "component": "Processes",
        "inputs": 4,
        "matches": 1,
        "apis": [
          "CreateToolHelp32Snapshot"
        ]
      },
      {
        "intent": "Implements Features To Execute or Spawn New Processes On The Target System",
        "tag": "Expert Input:IBO.0002 - Spawn New Process",
        "component": "Processes",
        "inputs": 7,
        "matches": 1,
        "apis": [
          "CreateProcessw"
        ]
      },
      {
        "intent": "Implements Features To Create/Manipulate The Windows Registry",
        "tag": "Expert Input:IBO.0008 - Create/Manipulate The Windows Registry",
        "component": "Registry",
        "inputs": 33,
        "matches": 5,
        "apis": [
          "RegCreateKeyExW",
          "RegDeleteKeyW",
          "RegDeleteValueW",
          "RegOpenKeyExW",
          "RegSetValueExW"
        ]
      },
      {
        "intent": "Implements Features To Enumerate/Discover System Services And Their Configuration Data",
        "tag": "Expert Input:IBO.0006 - Enumerate System Services",
        "component": "Services",
        "inputs": 28,
        "matches": 3,
        "apis": [
          "OpenSCManagerW",
          "OpenServiceW",
          "QueryServiceStatus"
        ]
      },
      {
        "intent": "Inject DLLs into Processes to evade defenses",
        "tag": "Defense Evasion:T1055 - Dynamic-Link Library Injection",
        "component": "Processes",
        "inputs": 4,
        "matches": 1,
        "apis": [
          "VirtualAlloc"
        ]
      },
      {
        "intent": "Query and Discovery General Attributes From The Target System",
        "tag": "Discovery:T1082 - System Information Discovery",
        "component": "---",
        "inputs": 3,
        "matches": 2,
        "apis": [
          "GetNativeSystemInfo",
          "RtlGetVersion"
        ]
      },
      {
        "intent": "Implements Features To Create/Manipulate System Services",
        "tag": "Expert Input:IBO.0007 - Create/Manipulate System Services",
        "component": "Services",
        "inputs": 19,
        "matches": 4,
        "apis": [
          "CloseServiceHandle",
          "ControlService",
          "CreateServiceW",
          "DeleteService"
        ]
      }
    ]
  }
}