{
  "pe_name": "invagent.dll",
  "pe_type": 523,
  "pe_size": 581968,
  "pe_subsystem": 3,
  "pe_subsystem_caption": "The Windows character (Cosole UI) subsystem",
  "pe_path": "c:\\Windows\\System32\\invagent.dll",
  "pe_timedate_stamp": 2911292500,
  "pe_timedate_human": "2062-04-03T12:21:40.000Z",
  "ImageDLLImports": [
    {
      "name": "msvcrt.dll",
      "imports": 80,
      "functions": [
        "??0bad_cast@@QEAA@AEBV0@@Z",
        "??0bad_cast@@QEAA@PEBD@Z",
        "??0exception@@QEAA@AEBQEBD@Z",
        "??0exception@@QEAA@AEBQEBDH@Z",
        "??0exception@@QEAA@AEBV0@@Z",
        "??0exception@@QEAA@XZ",
        "??1bad_cast@@UEAA@XZ",
        "??1exception@@UEAA@XZ",
        "??1type_info@@UEAA@XZ",
        "?terminate@@YAXXZ",
        "?what@exception@@UEBAPEBDXZ",
        "_CxxThrowException",
        "_XcptFilter",
        "__C_specific_handler",
        "__CxxFrameHandler3",
        "___lc_codepage_func",
        "___lc_collate_cp_func",
        "___lc_handle_func",
        "___mb_cur_max_func",
        "__crtCompareStringW",
        "__crtLCMapStringW",
        "__dllonexit",
        "__pctype_func",
        "__uncaught_exception",
        "_amsg_exit",
        "_errno",
        "_initterm",
        "_ismbblead",
        "_lock",
        "_mktime64",
        "_onexit",
        "_purecall",
        "_snwscanf_s",
        "_unlock",
        "_vscwprintf",
        "_vsnprintf",
        "_vsnprintf_s",
        "_vsnwprintf",
        "_vsnwprintf_s",
        "_wcsdup",
        "_wcsicmp",
        "_wcslwr",
        "_wcsnicmp",
        "_wctime64",
        "_wmkdir",
        "_wsetlocale",
        "_wsplitpath_s",
        "_wtoi",
        "_wtoi64",
        "abort",
        "calloc",
        "free",
        "iswalpha",
        "malloc",
        "memcmp",
        "memcpy",
        "memcpy_s",
        "memmove",
        "memmove_s",
        "memset",
        "realloc",
        "setlocale",
        "sprintf_s",
        "strchr",
        "strcmp",
        "strcpy_s",
        "strncmp",
        "strnlen",
        "tolower",
        "towlower",
        "wcscat_s",
        "wcschr",
        "wcscmp",
        "wcscpy_s",
        "wcsncmp",
        "wcsrchr",
        "wcsstr",
        "wcstombs",
        "wcstoul",
        "wprintf"
      ]
    },
    {
      "name": "kernel32.dll",
      "imports": 116,
      "functions": [
        "AcquireSRWLockExclusive",
        "AcquireSRWLockShared",
        "CloseHandle",
        "CloseThreadpoolTimer",
        "CreateActCtxW",
        "CreateEventW",
        "CreateFileMappingW",
        "CreateFileW",
        "CreateMutexExW",
        "CreateMutexW",
        "CreateProcessW",
        "CreateSemaphoreExW",
        "CreateSemaphoreW",
        "CreateThread",
        "CreateThreadpoolTimer",
        "CreateWaitableTimerW",
        "DebugBreak",
        "DecodePointer",
        "DelayLoadFailureHook",
        "DeleteCriticalSection",
        "DeleteFileW",
        "DeviceIoControl",
        "EncodePointer",
        "EnterCriticalSection",
        "ExitProcess",
        "ExpandEnvironmentStringsW",
        "FileTimeToLocalFileTime",
        "FileTimeToSystemTime",
        "FindClose",
        "FindFirstFileW",
        "FindNextFileW",
        "FormatMessageW",
        "FreeLibrary",
        "GetCommandLineW",
        "GetCurrentProcess",
        "GetCurrentProcessId",
        "GetCurrentThread",
        "GetCurrentThreadId",
        "GetExitCodeProcess",
        "GetFileAttributesW",
        "GetFileSize",
        "GetLastError",
        "GetModuleFileNameA",
        "GetModuleFileNameW",
        "GetModuleHandleExA",
        "GetModuleHandleExW",
        "GetModuleHandleW",
        "GetProcAddress",
        "GetProcessHeap",
        "GetStringTypeW",
        "GetSystemDirectoryW",
        "GetSystemFirmwareTable",
        "GetSystemTime",
        "GetSystemTimeAsFileTime",
        "GetSystemWindowsDirectoryW",
        "GetTempFileNameW",
        "GetTempPathW",
        "GetTickCount",
        "GetVolumeInformationByHandleW",
        "HeapAlloc",
        "HeapFree",
        "HeapReAlloc",
        "HeapSize",
        "InitOnceExecuteOnce",
        "InitializeCriticalSection",
        "InitializeCriticalSectionEx",
        "IsDebuggerPresent",
        "K32EnumProcessModules",
        "K32EnumProcesses",
        "K32GetModuleFileNameExW",
        "LeaveCriticalSection",
        "LoadLibraryExA",
        "LoadLibraryExW",
        "LoadLibraryW",
        "LocalAlloc",
        "LocalFree",
        "LocaleNameToLCID",
        "MapViewOfFile",
        "MoveFileExW",
        "MultiByteToWideChar",
        "OpenProcess",
        "OpenSemaphoreW",
        "OpenWaitableTimerW",
        "OutputDebugStringA",
        "OutputDebugStringW",
        "QueryActCtxW",
        "QueryPerformanceCounter",
        "QueryThreadCycleTime",
        "ReleaseActCtx",
        "ReleaseMutex",
        "ReleaseSRWLockExclusive",
        "ReleaseSRWLockShared",
        "ReleaseSemaphore",
        "RtlCaptureContext",
        "RtlCompareMemory",
        "RtlLookupFunctionEntry",
        "RtlVirtualUnwind",
        "SetEvent",
        "SetLastError",
        "SetThreadpoolTimer",
        "SetUnhandledExceptionFilter",
        "SetWaitableTimer",
        "Sleep",
        "SleepConditionVariableSRW",
        "TerminateProcess",
        "UnhandledExceptionFilter",
        "UnmapViewOfFile",
        "VerSetConditionMask",
        "VerifyVersionInfoW",
        "WaitForMultipleObjects",
        "WaitForSingleObject",
        "WaitForSingleObjectEx",
        "WaitForThreadpoolTimerCallbacks",
        "WakeAllConditionVariable",
        "WideCharToMultiByte",
        "WriteFile"
      ]
    },
    {
      "name": "ntdll.dll",
      "imports": 55,
      "functions": [
        "EtwEventRegister",
        "EtwEventUnregister",
        "EtwEventWrite",
        "EtwTraceMessage",
        "LdrResSearchResource",
        "NtLoadKeyEx",
        "NtQueryInformationProcess",
        "NtQueryInformationToken",
        "NtQueryKey",
        "NtQueryLicenseValue",
        "RtlAdjustPrivilege",
        "RtlAllocateAndInitializeSid",
        "RtlAllocateHeap",
        "RtlAnsiStringToUnicodeString",
        "RtlAppendUnicodeStringToString",
        "RtlAppendUnicodeToString",
        "RtlComputeCrc32",
        "RtlDeleteCriticalSection",
        "RtlDosPathNameToNtPathName_U_WithStatus",
        "RtlDosPathNameToRelativeNtPathName_U",
        "RtlEnterCriticalSection",
        "RtlEqualString",
        "RtlFreeHeap",
        "RtlFreeSid",
        "RtlFreeUnicodeString",
        "RtlGetNativeSystemInformation",
        "RtlImageDirectoryEntryToData",
        "RtlInitAnsiString",
        "RtlInitString",
        "RtlInitUnicodeString",
        "RtlInitUnicodeStringEx",
        "RtlInitializeCriticalSection",
        "RtlLeaveCriticalSection",
        "RtlMultiByteToUnicodeN",
        "RtlNtStatusToDosError",
        "RtlRandomEx",
        "RtlReAllocateHeap",
        "RtlReleaseRelativeName",
        "RtlSecondsSince1970ToTime",
        "RtlStringFromGUID",
        "RtlTimeToTimeFields",
        "RtlUpcaseUnicodeChar",
        "RtlVerifyVersionInfo",
        "RtlxAnsiStringToUnicodeSize",
        "WinSqmIsOptedInEx",
        "ZwClose",
        "ZwCreateFile",
        "ZwCreateSection",
        "ZwEnumerateKey",
        "ZwMapViewOfSection",
        "ZwOpenKey",
        "ZwQueryInformationFile",
        "ZwQuerySystemInformation",
        "ZwQueryValueKey",
        "ZwUnmapViewOfSection"
      ]
    },
    {
      "name": "ole32.dll",
      "imports": 6,
      "functions": [
        "CoCreateInstance",
        "CoImpersonateClient",
        "CoInitializeEx",
        "CoRevertToSelf",
        "CoTaskMemFree",
        "CoUninitialize"
      ]
    },
    {
      "name": "oleaut32.dll",
      "imports": 0,
      "functions": []
    },
    {
      "name": "shlwapi.dll",
      "imports": 3,
      "functions": [
        "PathFileExistsW",
        "PathFindFileNameW",
        "PathUnExpandEnvStringsW"
      ]
    },
    {
      "name": "aepic.dll",
      "imports": 2,
      "functions": [
        "PicFreeFileInfo",
        "PicRetrieveFileInfo"
      ]
    },
    {
      "name": "aeinv.dll",
      "imports": 4,
      "functions": [
        "CreateSoftwareInventory",
        "GetAppInventory",
        "GetCachedAppInventory",
        "GetDetailedAppInventory"
      ]
    },
    {
      "name": "advapi32.dll",
      "imports": 47,
      "functions": [
        "CloseServiceHandle",
        "ControlServiceExW",
        "ControlTraceW",
        "CreateProcessAsUserW",
        "CryptAcquireContextW",
        "CryptCreateHash",
        "CryptDestroyHash",
        "CryptGetHashParam",
        "CryptHashData",
        "CryptReleaseContext",
        "EnableTrace",
        "EnableTraceEx2",
        "EventRegister",
        "EventUnregister",
        "EventWriteTransfer",
        "InitializeSecurityDescriptor",
        "OpenSCManagerW",
        "OpenServiceW",
        "OpenThreadToken",
        "QueryServiceStatusEx",
        "RegCloseKey",
        "RegCreateKeyExW",
        "RegDeleteKeyExW",
        "RegDeleteKeyValueW",
        "RegDeleteKeyW",
        "RegDeleteTreeW",
        "RegDeleteValueW",
        "RegEnumKeyExW",
        "RegEnumValueW",
        "RegFlushKey",
        "RegGetValueW",
        "RegLoadAppKeyW",
        "RegLoadKeyW",
        "RegOpenKeyExW",
        "RegOpenKeyW",
        "RegQueryInfoKeyW",
        "RegSaveKeyExW",
        "RegSetKeySecurity",
        "RegSetKeyValueW",
        "RegSetValueExW",
        "RegUnLoadKeyW",
        "SetEntriesInAclW",
        "SetSecurityDescriptorDacl",
        "SetSecurityDescriptorOwner",
        "StartServiceW",
        "StartTraceW",
        "TraceEvent"
      ]
    },
    {
      "name": "bcrypt.dll",
      "imports": 7,
      "functions": [
        "BCryptCloseAlgorithmProvider",
        "BCryptCreateHash",
        "BCryptDestroyHash",
        "BCryptFinishHash",
        "BCryptGetProperty",
        "BCryptHashData",
        "BCryptOpenAlgorithmProvider"
      ]
    },
    {
      "name": "crypt32.dll",
      "imports": 4,
      "functions": [
        "CertDuplicateCertificateContext",
        "CertFreeCertificateContext",
        "CertGetCertificateContextProperty",
        "CertGetNameStringW"
      ]
    },
    {
      "name": "rpcrt4.dll",
      "imports": 1,
      "functions": [
        "UuidCreate"
      ]
    },
    {
      "name": "shell32.dll",
      "imports": 3,
      "functions": [
        "CommandLineToArgvW",
        "SHFileOperationW",
        "SHGetKnownFolderPath"
      ]
    },
    {
      "name": "wer.dll",
      "imports": 5,
      "functions": [
        "WerReportAddFile",
        "WerReportCloseHandle",
        "WerReportCreate",
        "WerReportSetParameter",
        "WerReportSubmit"
      ]
    },
    {
      "name": "wintrust.dll",
      "imports": 9,
      "functions": [
        "CryptCATAdminAcquireContext",
        "CryptCATAdminCalcHashFromFileHandle",
        "CryptCATAdminEnumCatalogFromHash",
        "CryptCATAdminReleaseCatalogContext",
        "CryptCATAdminReleaseContext",
        "CryptCATCatalogInfoFromContext",
        "WTHelperGetProvSignerFromChain",
        "WTHelperProvDataFromStateData",
        "WinVerifyTrust"
      ]
    },
    {
      "name": "devinv.dll",
      "imports": 1,
      "functions": [
        "CreateDeviceInventory"
      ]
    },
    {
      "name": "winhttp.dll",
      "imports": 8,
      "functions": [
        "WinHttpCloseHandle",
        "WinHttpConnect",
        "WinHttpOpen",
        "WinHttpOpenRequest",
        "WinHttpQueryDataAvailable",
        "WinHttpReadData",
        "WinHttpReceiveResponse",
        "WinHttpSendRequest"
      ]
    }
  ],
  "ImageDLLExports": {
    "exports": 8,
    "functions": [
      "GetDetailedAppInventoryReport",
      "GetFileSigningInfoTC",
      "RunUpdate",
      "RunUpdateTC",
      "DllCanUnloadNow",
      "DllGetClassObject",
      "DllRegisterServer",
      "DllUnregisterServer"
    ]
  },
  "ImageHashSignatures": {
    "sha2": "96636c034b6766cde12933b5bad80e638d7d4635bf2f96e9c290cdccf909dc9b"
  },
  "scan": {
    "intentions": 13,
    "uniq_apis_matched": 28,
    "results": [
      {
        "intent": "Implements Features To Enumerate/Discover System Services And Their Configuration Data",
        "tag": "Expert Input:IBO.0006 - Enumerate System Services",
        "component": "Services",
        "inputs": 28,
        "matches": 3,
        "apis": [
          "OpenSCManagerW",
          "OpenServiceW",
          "QueryServiceStatusEx"
        ]
      },
      {
        "intent": "Implements Features To Create/Manipulate The Windows Registry",
        "tag": "Expert Input:IBO.0008 - Create/Manipulate The Windows Registry",
        "component": "Registry",
        "inputs": 33,
        "matches": 8,
        "apis": [
          "RegCreateKeyExW",
          "RegDeleteKeyExW",
          "RegDeleteKeyW",
          "RegDeleteValueW",
          "RegOpenKeyExW",
          "RegOpenKeyW",
          "RegSetKeyValueW",
          "RegSetValueExW"
        ]
      },
      {
        "intent": "Implements Features To Execute or Spawn New Processes On The Target System As Another User Identity",
        "tag": "Expert Input:IBO.0003 - Spawn New Process As Different User",
        "component": "Processes",
        "inputs": 2,
        "matches": 1,
        "apis": [
          "CreateProcessAsUserW"
        ]
      },
      {
        "intent": "Query And Discover Windows Registry Configuration Settings",
        "tag": "Discovery:T1012 - Query Registry",
        "component": "Registry",
        "inputs": 11,
        "matches": 2,
        "apis": [
          "RegGetValueW",
          "RegQueryInfoKeyW"
        ]
      },
      {
        "intent": "Implements Delayed Loads of DLL Resources",
        "tag": "Expert Input:IBO.0005 - Load DLL Resources With Delay During Runtime",
        "component": "---",
        "inputs": 2,
        "matches": 1,
        "apis": [
          "DelayLoadFailureHook"
        ]
      },
      {
        "intent": "Initiate Network Connections Over HTTP, HTTPS To Download Content On The Target System",
        "tag": "Command And Control:T1105 - Ingress Tool Transfer",
        "component": "Networking",
        "inputs": 21,
        "matches": 3,
        "apis": [
          "WinHttpConnect",
          "WinHttpOpenRequest",
          "WinHttpSendRequest"
        ]
      },
      {
        "intent": "Delete Files From Disk Potentially Erasing Important Evidence To Cover Attack Activity",
        "tag": "Defense Evasion:T1070.004 - File Deletion",
        "component": "Filesystem",
        "inputs": 2,
        "matches": 1,
        "apis": [
          "DeleteFileW"
        ]
      },
      {
        "intent": "Implements Features To Execute or Spawn New Processes On The Target System",
        "tag": "Expert Input:IBO.0002 - Spawn New Process",
        "component": "Processes",
        "inputs": 7,
        "matches": 1,
        "apis": [
          "CreateProcessw"
        ]
      },
      {
        "intent": "Enumerate Files or Directories on the Target System",
        "tag": "Discovery:T1083 - File and Directory Discovery",
        "component": "Filesystem",
        "inputs": 5,
        "matches": 1,
        "apis": [
          "FindFirstFileW"
        ]
      },
      {
        "intent": "Manipulate Windows Tokens",
        "tag": "Defense Evasion:T1134 - Access Token Manipulation",
        "component": "Privileges",
        "inputs": 10,
        "matches": 1,
        "apis": [
          "OpenThreadToken"
        ]
      },
      {
        "intent": "Implements Features To Create/Manipulate System Services",
        "tag": "Expert Input:IBO.0007 - Create/Manipulate System Services",
        "component": "Services",
        "inputs": 19,
        "matches": 3,
        "apis": [
          "CloseServiceHandle",
          "ControlServiceExW",
          "StartServiceW"
        ]
      },
      {
        "intent": "Implements Features To Enumerate The Windows Registry",
        "tag": "Expert Input:IBO.0009 - Enumerate The Windows Registry",
        "component": "Registry",
        "inputs": 6,
        "matches": 2,
        "apis": [
          "RegEnumKeyExW",
          "RegEnumValueW"
        ]
      },
      {
        "intent": "Implements Features For User CLI Experience",
        "tag": "Expert Input:IBO.0001 - Accepts CommandLine Arguments",
        "component": "Processes",
        "inputs": 3,
        "matches": 1,
        "apis": [
          "CommandLineToArgvW"
        ]
      }
    ]
  }
}