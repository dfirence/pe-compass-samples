{
  "pe_name": "WorkFoldersShell.dll",
  "pe_type": 523,
  "pe_size": 230400,
  "pe_subsystem": 3,
  "pe_subsystem_caption": "The Windows character (Cosole UI) subsystem",
  "pe_path": "c:\\Windows\\System32\\WorkFoldersShell.dll",
  "pe_timedate_stamp": 3012509430,
  "pe_timedate_human": "2065-06-18T00:10:30.000Z",
  "ImageDLLImports": [
    {
      "name": "msvcrt.dll",
      "imports": 38,
      "functions": [
        "??0exception@@QEAA@AEBQEBD@Z",
        "??0exception@@QEAA@AEBQEBDH@Z",
        "??0exception@@QEAA@AEBV0@@Z",
        "??0exception@@QEAA@XZ",
        "??1exception@@UEAA@XZ",
        "??1type_info@@UEAA@XZ",
        "??3@YAXPEAX@Z",
        "??_V@YAXPEAX@Z",
        "?terminate@@YAXXZ",
        "?what@exception@@UEBAPEBDXZ",
        "_CxxThrowException",
        "_XcptFilter",
        "__C_specific_handler",
        "__CxxFrameHandler3",
        "__dllonexit",
        "_amsg_exit",
        "_callnewh",
        "_errno",
        "_initterm",
        "_lock",
        "_onexit",
        "_purecall",
        "_unlock",
        "_vsnprintf_s",
        "_vsnwprintf",
        "_wcsicmp",
        "_wcsnicmp",
        "free",
        "malloc",
        "memcmp",
        "memcpy",
        "memcpy_s",
        "memmove",
        "memset",
        "realloc",
        "wcscat_s",
        "wcscpy_s",
        "wcsncpy_s"
      ]
    },
    {
      "name": "ntdll.dll",
      "imports": 3,
      "functions": [
        "RtlCaptureContext",
        "RtlLookupFunctionEntry",
        "RtlVirtualUnwind"
      ]
    },
    {
      "name": "kernel32.dll",
      "imports": 74,
      "functions": [
        "AcquireSRWLockExclusive",
        "CloseHandle",
        "CreateEventW",
        "CreateMutexExW",
        "CreateSemaphoreExW",
        "CreateThread",
        "DebugBreak",
        "DeleteCriticalSection",
        "EnterCriticalSection",
        "FileTimeToLocalFileTime",
        "FileTimeToSystemTime",
        "FindResourceExW",
        "FormatMessageW",
        "FreeLibrary",
        "GetCurrentProcess",
        "GetCurrentProcessId",
        "GetCurrentThreadId",
        "GetDateFormatEx",
        "GetLastError",
        "GetModuleFileNameA",
        "GetModuleFileNameW",
        "GetModuleHandleExW",
        "GetModuleHandleW",
        "GetProcAddress",
        "GetProcessHeap",
        "GetSystemTimeAsFileTime",
        "GetThreadLocale",
        "GetTickCount",
        "GetTimeFormatEx",
        "GetVolumeNameForVolumeMountPointW",
        "GetVolumePathNameW",
        "GlobalLock",
        "GlobalUnlock",
        "HeapAlloc",
        "HeapFree",
        "InitializeCriticalSection",
        "IsDebuggerPresent",
        "LeaveCriticalSection",
        "LoadLibraryExW",
        "LoadResource",
        "LocalFree",
        "MultiByteToWideChar",
        "OpenSemaphoreW",
        "OutputDebugStringA",
        "OutputDebugStringW",
        "QueryPerformanceCounter",
        "RaiseException",
        "RegCloseKey",
        "RegCreateKeyExW",
        "RegDeleteValueW",
        "RegEnumKeyExW",
        "RegGetValueW",
        "RegNotifyChangeKeyValue",
        "RegOpenKeyExW",
        "RegQueryInfoKeyW",
        "RegSetValueExW",
        "ReleaseMutex",
        "ReleaseSRWLockExclusive",
        "ReleaseSemaphore",
        "ResetEvent",
        "ResumeThread",
        "SetEvent",
        "SetLastError",
        "SetThreadLocale",
        "SetUnhandledExceptionFilter",
        "SizeofResource",
        "Sleep",
        "SleepConditionVariableSRW",
        "TerminateProcess",
        "UnhandledExceptionFilter",
        "WaitForSingleObject",
        "WaitForSingleObjectEx",
        "WakeAllConditionVariable",
        "lstrcmpiW"
      ]
    },
    {
      "name": "advapi32.dll",
      "imports": 9,
      "functions": [
        "EventRegister",
        "EventUnregister",
        "GetTraceEnableFlags",
        "GetTraceEnableLevel",
        "GetTraceLoggerHandle",
        "RegEnumKeyW",
        "RegisterTraceGuidsW",
        "TraceMessage",
        "UnregisterTraceGuids"
      ]
    },
    {
      "name": "ole32.dll",
      "imports": 10,
      "functions": [
        "CoCreateInstance",
        "CoInitializeEx",
        "CoQueryProxyBlanket",
        "CoSetProxyBlanket",
        "CoTaskMemAlloc",
        "CoTaskMemFree",
        "CoTaskMemRealloc",
        "CoUninitialize",
        "ReleaseStgMedium",
        "StringFromGUID2"
      ]
    },
    {
      "name": "oleaut32.dll",
      "imports": 0,
      "functions": []
    },
    {
      "name": "user32.dll",
      "imports": 12,
      "functions": [
        "CharNextW",
        "DispatchMessageW",
        "GetMenuItemCount",
        "GetMenuItemInfoW",
        "InsertMenuItemW",
        "InsertMenuW",
        "LoadImageW",
        "LoadStringW",
        "MsgWaitForMultipleObjects",
        "PeekMessageW",
        "PostThreadMessageW",
        "UnregisterClassA"
      ]
    },
    {
      "name": "gdi32.dll",
      "imports": 1,
      "functions": [
        "DeleteObject"
      ]
    },
    {
      "name": "shell32.dll",
      "imports": 4,
      "functions": [
        "DragQueryFileW",
        "SHChangeNotify",
        "SHGetDesktopFolder",
        "SHGetPathFromIDListW"
      ]
    },
    {
      "name": "propsys.dll",
      "imports": 1,
      "functions": [
        "PSCreateMemoryPropertyStore"
      ]
    }
  ],
  "ImageDLLExports": {
    "exports": 4,
    "functions": [
      "DllCanUnloadNow",
      "DllGetClassObject",
      "DllRegisterServer",
      "DllUnregisterServer"
    ]
  },
  "ImageHashSignatures": {
    "sha2": "fc486509fe1bba26582dfdc5d139b4920610e1a317c3c39fc0eadf7483718f8d"
  },
  "scan": {
    "intentions": 4,
    "uniq_apis_matched": 9,
    "results": [
      {
        "intent": "Implements Features To Create/Manipulate The Windows Registry",
        "tag": "Expert Input:IBO.0008 - Create/Manipulate The Windows Registry",
        "component": "Registry",
        "inputs": 33,
        "matches": 4,
        "apis": [
          "RegCreateKeyExW",
          "RegDeleteValueW",
          "RegOpenKeyExW",
          "RegSetValueExW"
        ]
      },
      {
        "intent": "Inject malicious code into hijacked processes in order to evade process-based defenses",
        "tag": "Defense Evasion:T1055.002 - Thread Execution Hijacking",
        "component": "Processes",
        "inputs": 3,
        "matches": 1,
        "apis": [
          "ResumeThread"
        ]
      },
      {
        "intent": "Query And Discover Windows Registry Configuration Settings",
        "tag": "Discovery:T1012 - Query Registry",
        "component": "Registry",
        "inputs": 11,
        "matches": 2,
        "apis": [
          "RegGetValueW",
          "RegQueryInfoKeyW"
        ]
      },
      {
        "intent": "Implements Features To Enumerate The Windows Registry",
        "tag": "Expert Input:IBO.0009 - Enumerate The Windows Registry",
        "component": "Registry",
        "inputs": 6,
        "matches": 2,
        "apis": [
          "RegEnumKeyExW",
          "RegEnumKeyW"
        ]
      }
    ]
  }
}