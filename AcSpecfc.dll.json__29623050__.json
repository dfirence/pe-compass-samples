{
  "pe_name": "AcSpecfc.dll",
  "pe_type": 267,
  "pe_size": 461824,
  "pe_subsystem": 3,
  "pe_subsystem_caption": "The Windows character (Cosole UI) subsystem",
  "pe_path": "c:\\Windows\\WinSxS\\wow64_microsoft-windows-a..ence-mitigations-c4_31bf3856ad364e35_10.0.19041.423_none_f485c76e856c4336\\AcSpecfc.dll",
  "pe_timedate_stamp": 463876961,
  "pe_timedate_human": "1984-09-12T22:42:41.000Z",
  "ImageDLLImports": [
    {
      "name": "apphelp.dll",
      "imports": 9,
      "functions": [
        "SE_CALLBACK_AddHook",
        "SE_CALLBACK_Lookup",
        "SE_COM_AddHook",
        "SE_COM_AddServer",
        "SE_COM_HookInterface",
        "SE_COM_HookObject",
        "SE_COM_Lookup",
        "SE_GetShimId",
        "SE_ShimDPF"
      ]
    },
    {
      "name": "msvcrt.dll",
      "imports": 51,
      "functions": [
        "??1type_info@@UAE@XZ",
        "?terminate@@YAXXZ",
        "_CxxThrowException",
        "_XcptFilter",
        "__CxxFrameHandler3",
        "__dllonexit",
        "_amsg_exit",
        "_except_handler4_common",
        "_initterm",
        "_itow_s",
        "_lock",
        "_onexit",
        "_stricmp",
        "_strlwr",
        "_strnicmp",
        "_unlock",
        "_vscprintf",
        "_vscwprintf",
        "_vsnprintf",
        "_vsnwprintf",
        "_wcsicmp",
        "_wcslwr",
        "_wcsnicmp",
        "_wcsupr",
        "_wsplitpath_s",
        "_wtoi",
        "_wtol",
        "free",
        "isalpha",
        "iswctype",
        "iswspace",
        "malloc",
        "memcmp",
        "memcpy",
        "memmove",
        "memset",
        "strcat_s",
        "strcpy_s",
        "strncmp",
        "strrchr",
        "strstr",
        "towlower",
        "towupper",
        "wcscat_s",
        "wcschr",
        "wcsncmp",
        "wcspbrk",
        "wcsrchr",
        "wcsspn",
        "wcsstr",
        "wcstol"
      ]
    },
    {
      "name": "ntdll.dll",
      "imports": 24,
      "functions": [
        "LdrEnumerateLoadedModules",
        "LdrFindEntryForAddress",
        "NtClose",
        "NtCreateKey",
        "NtDeleteKey",
        "NtEnumerateKey",
        "NtOpenKey",
        "NtProtectVirtualMemory",
        "NtQueryInformationFile",
        "NtQueryInformationThread",
        "NtQueryObject",
        "NtQueryValueKey",
        "NtSetValueKey",
        "RtlAllocateHeap",
        "RtlCreateUnicodeStringFromAsciiz",
        "RtlFormatCurrentUserKeyPath",
        "RtlFreeHeap",
        "RtlFreeUnicodeString",
        "RtlGUIDFromString",
        "RtlGetDaclSecurityDescriptor",
        "RtlGetNtSystemRoot",
        "RtlInitUnicodeString",
        "RtlSubAuthorityCountSid",
        "RtlSubAuthoritySid"
      ]
    },
    {
      "name": "api-ms-win-core-registry-l1-1-0.dll",
      "imports": 15,
      "functions": [
        "RegCloseKey",
        "RegCreateKeyExA",
        "RegCreateKeyExW",
        "RegDeleteValueA",
        "RegDeleteValueW",
        "RegEnumKeyExW",
        "RegEnumValueW",
        "RegGetValueW",
        "RegOpenKeyExA",
        "RegOpenKeyExW",
        "RegQueryInfoKeyW",
        "RegQueryValueExA",
        "RegQueryValueExW",
        "RegSetValueExA",
        "RegSetValueExW"
      ]
    },
    {
      "name": "api-ms-win-security-base-l1-1-0.dll",
      "imports": 10,
      "functions": [
        "AccessCheck",
        "AdjustTokenPrivileges",
        "AllocateAndInitializeSid",
        "CheckTokenMembership",
        "CreateWellKnownSid",
        "FreeSid",
        "GetSecurityDescriptorDacl",
        "GetTokenInformation",
        "InitializeSecurityDescriptor",
        "SetTokenInformation"
      ]
    },
    {
      "name": "sspicli.dll",
      "imports": 1,
      "functions": [
        "GetUserNameExW"
      ]
    },
    {
      "name": "comctl32.dll",
      "imports": 2,
      "functions": [
        "ImageList_Add",
        "ImageList_Remove"
      ]
    },
    {
      "name": "mscms.dll",
      "imports": 0,
      "functions": []
    },
    {
      "name": "shlwapi.dll",
      "imports": 2,
      "functions": [
        "StrCmpIW",
        "StrStrW"
      ]
    },
    {
      "name": "user32.dll",
      "imports": 72,
      "functions": [
        "AllowSetForegroundWindow",
        "BeginPaint",
        "CallNextHookEx",
        "CallWindowProcA",
        "ChangeDisplaySettingsA",
        "CopyIcon",
        "CreateWindowExA",
        "DefWindowProcA",
        "DefWindowProcW",
        "DestroyWindow",
        "DispatchMessageA",
        "DispatchMessageW",
        "EnableWindow",
        "EndPaint",
        "EnumChildWindows",
        "EnumDisplaySettingsW",
        "EnumWindows",
        "FillRect",
        "FindWindowA",
        "FindWindowExA",
        "FindWindowW",
        "GetAncestor",
        "GetClassInfoA",
        "GetClassLongA",
        "GetClassNameA",
        "GetClassNameW",
        "GetClientRect",
        "GetCursorPos",
        "GetDC",
        "GetDesktopWindow",
        "GetGUIThreadInfo",
        "GetMonitorInfoW",
        "GetParent",
        "GetProcessWindowStation",
        "GetPropW",
        "GetSystemMetrics",
        "GetThreadDesktop",
        "GetUpdateRect",
        "GetUserObjectInformationW",
        "GetWindowInfo",
        "GetWindowLongA",
        "GetWindowLongW",
        "GetWindowRect",
        "GetWindowTextW",
        "GetWindowThreadProcessId",
        "InvalidateRect",
        "IsZoomed",
        "LoadCursorW",
        "MsgWaitForMultipleObjects",
        "PeekMessageW",
        "PostMessageA",
        "PostQuitMessage",
        "RegisterClassA",
        "RegisterWindowMessageW",
        "ReleaseDC",
        "RemovePropW",
        "SendMessageTimeoutW",
        "SendMessageW",
        "SendNotifyMessageW",
        "SetActiveWindow",
        "SetCursor",
        "SetCursorPos",
        "SetForegroundWindow",
        "SetPropW",
        "SetWindowLongA",
        "SetWindowLongW",
        "SetWindowsHookExW",
        "ShowCursor",
        "TranslateMessage",
        "UnhookWindowsHookEx",
        "ValidateRect",
        "mouse_event"
      ]
    },
    {
      "name": "kernel32.dll",
      "imports": 131,
      "functions": [
        "AcquireSRWLockExclusive",
        "CloseHandle",
        "CompareStringA",
        "CompareStringW",
        "CopyFileW",
        "CreateDirectoryW",
        "CreateEventW",
        "CreateFileA",
        "CreateFileMappingA",
        "CreateFileW",
        "CreateProcessA",
        "CreateProcessW",
        "CreateThread",
        "DeleteCriticalSection",
        "DeleteFileA",
        "DeleteFileW",
        "EnterCriticalSection",
        "ExitProcess",
        "ExpandEnvironmentStringsA",
        "ExpandEnvironmentStringsW",
        "FindClose",
        "FindFirstFileW",
        "FindNextFileW",
        "FindResourceW",
        "FlushViewOfFile",
        "FreeLibrary",
        "GetACP",
        "GetCommandLineA",
        "GetCommandLineW",
        "GetCurrentDirectoryW",
        "GetCurrentProcess",
        "GetCurrentProcessId",
        "GetCurrentThread",
        "GetCurrentThreadId",
        "GetEnvironmentVariableW",
        "GetExitCodeProcess",
        "GetFileAttributesA",
        "GetFileAttributesW",
        "GetFullPathNameW",
        "GetLastError",
        "GetLocalTime",
        "GetLocaleInfoW",
        "GetLongPathNameW",
        "GetModuleFileNameA",
        "GetModuleFileNameW",
        "GetModuleHandleA",
        "GetModuleHandleExW",
        "GetModuleHandleW",
        "GetOverlappedResultEx",
        "GetProcAddress",
        "GetProcessHeap",
        "GetShortPathNameW",
        "GetSystemDefaultUILanguage",
        "GetSystemDirectoryA",
        "GetSystemDirectoryW",
        "GetSystemTimeAsFileTime",
        "GetSystemWindowsDirectoryA",
        "GetSystemWindowsDirectoryW",
        "GetTempFileNameA",
        "GetTempPathA",
        "GetTickCount",
        "GetVersion",
        "GetVersionExW",
        "GetWindowsDirectoryA",
        "GetWindowsDirectoryW",
        "GlobalFree",
        "HeapAlloc",
        "HeapCreate",
        "HeapFree",
        "HeapReAlloc",
        "InitializeCriticalSection",
        "InitializeCriticalSectionAndSpinCount",
        "IsBadReadPtr",
        "IsBadStringPtrA",
        "IsBadStringPtrW",
        "IsWow64Process",
        "K32EnumProcesses",
        "K32GetModuleBaseNameW",
        "K32GetModuleFileNameExW",
        "K32GetModuleInformation",
        "K32GetProcessImageFileNameW",
        "LeaveCriticalSection",
        "LoadLibraryA",
        "LoadLibraryW",
        "LoadResource",
        "LocalAlloc",
        "LocalFree",
        "LockResource",
        "MapViewOfFile",
        "MoveFileExW",
        "MoveFileW",
        "MultiByteToWideChar",
        "OpenFileMappingA",
        "OpenMutexW",
        "OpenProcess",
        "ProcessIdToSessionId",
        "QueryDosDeviceW",
        "QueryPerformanceCounter",
        "ReleaseMutex",
        "ReleaseSRWLockExclusive",
        "ResetEvent",
        "SearchPathW",
        "SetCurrentDirectoryW",
        "SetEnvironmentVariableW",
        "SetEvent",
        "SetFileAttributesW",
        "SetLastError",
        "SetLocaleInfoA",
        "SetThreadContext",
        "SetUnhandledExceptionFilter",
        "Sleep",
        "SleepConditionVariableSRW",
        "SwitchToThread",
        "TerminateProcess",
        "TlsAlloc",
        "TlsFree",
        "TlsGetValue",
        "TlsSetValue",
        "TrySubmitThreadpoolCallback",
        "UnhandledExceptionFilter",
        "UnmapViewOfFile",
        "VirtualAlloc",
        "VirtualProtect",
        "WaitForSingleObject",
        "WakeAllConditionVariable",
        "WideCharToMultiByte",
        "lstrcmpA",
        "lstrcmpW",
        "lstrcmpiW",
        "lstrlenA",
        "lstrlenW"
      ]
    },
    {
      "name": "gdi32.dll",
      "imports": 17,
      "functions": [
        "BitBlt",
        "CreateCompatibleBitmap",
        "CreateCompatibleDC",
        "CreateDIBSection",
        "CreatePalette",
        "DeleteDC",
        "DeleteObject",
        "GdiIsScreenDC",
        "GetStockObject",
        "GetSystemPaletteEntries",
        "RealizePalette",
        "SelectObject",
        "SelectPalette",
        "SetMapMode",
        "SetSystemPaletteUse",
        "SetViewportExtEx",
        "SetWindowExtEx"
      ]
    },
    {
      "name": "advapi32.dll",
      "imports": 23,
      "functions": [
        "CloseServiceHandle",
        "ConvertStringSecurityDescriptorToSecurityDescriptorW",
        "DeregisterEventSource",
        "EventWriteTransfer",
        "GetNamedSecurityInfoW",
        "LookupPrivilegeValueW",
        "LsaFreeMemory",
        "LsaOpenPolicy",
        "LsaQueryInformationPolicy",
        "OpenProcessToken",
        "OpenSCManagerW",
        "OpenServiceW",
        "QueryServiceStatus",
        "RegDeleteKeyA",
        "RegEnumKeyW",
        "RegOpenKeyA",
        "RegisterEventSourceW",
        "ReportEventW",
        "SetEntriesInAclW",
        "SetNamedSecurityInfoW",
        "StartServiceCtrlDispatcherA",
        "StartServiceCtrlDispatcherW",
        "StartServiceW"
      ]
    },
    {
      "name": "ole32.dll",
      "imports": 7,
      "functions": [
        "CoCreateInstance",
        "CoGetObjectContext",
        "CoInitialize",
        "CoTaskMemAlloc",
        "CoTaskMemFree",
        "CoUninitialize",
        "StringFromCLSID"
      ]
    },
    {
      "name": "shell32.dll",
      "imports": 5,
      "functions": [
        "SHChangeNotify",
        "SHGetFolderPathA",
        "SHGetFolderPathW",
        "SHGetSpecialFolderPathW",
        "ShellExecuteExW"
      ]
    },
    {
      "name": "oleaut32.dll",
      "imports": 0,
      "functions": []
    },
    {
      "name": "ws2_32.dll",
      "imports": 0,
      "functions": []
    },
    {
      "name": "userenv.dll",
      "imports": 2,
      "functions": [
        "GetAllUsersProfileDirectoryW",
        "GetUserProfileDirectoryW"
      ]
    },
    {
      "name": "api-ms-win-mm-time-l1-1-0.dll",
      "imports": 1,
      "functions": [
        "timeGetTime"
      ]
    },
    {
      "name": "mpr.dll",
      "imports": 1,
      "functions": [
        "WNetGetConnectionW"
      ]
    },
    {
      "name": "winmm.dll",
      "imports": 0,
      "functions": []
    },
    {
      "name": "ddraw.dll",
      "imports": 1,
      "functions": [
        "DirectDrawCreate"
      ]
    },
    {
      "name": "comdlg32.dll",
      "imports": 1,
      "functions": [
        "GetFileTitleA"
      ]
    },
    {
      "name": "imm32.dll",
      "imports": 1,
      "functions": [
        "ImmGetContext"
      ]
    },
    {
      "name": "rpcrt4.dll",
      "imports": 10,
      "functions": [
        "I_RpcExceptionFilter",
        "NdrAsyncClientCall",
        "RpcAsyncCancelCall",
        "RpcAsyncCompleteCall",
        "RpcAsyncInitializeHandle",
        "RpcBindingFree",
        "RpcBindingFromStringBindingW",
        "RpcBindingSetAuthInfoExW",
        "RpcStringBindingComposeW",
        "RpcStringFreeW"
      ]
    },
    {
      "name": "dwmapi.dll",
      "imports": 1,
      "functions": [
        "DwmIsCompositionEnabled"
      ]
    },
    {
      "name": "msi.dll",
      "imports": 0,
      "functions": []
    },
    {
      "name": "winspool.dll",
      "imports": 1,
      "functions": [
        "EnumFormsW"
      ]
    },
    {
      "name": "api-ms-win-core-apiquery-l1-1-0.dll",
      "imports": 1,
      "functions": [
        "ApiSetQueryApiSetPresence"
      ]
    }
  ],
  "ImageDLLExports": {
    "exports": 4,
    "functions": [
      "GetHookAPIs",
      "NotifyShims",
      "StiCreateInstanceA",
      "CleanupIS"
    ]
  },
  "ImageHashSignatures": {
    "sha2": "a41487e8cc137b0a36c820572294f81de5ce697da328e4890fd585b806b32cff"
  },
  "scan": {
    "intentions": 12,
    "uniq_apis_matched": 36,
    "results": [
      {
        "intent": "Implements Features To Execute or Spawn New Processes On The Target System",
        "tag": "Expert Input:IBO.0002 - Spawn New Process",
        "component": "Processes",
        "inputs": 7,
        "matches": 3,
        "apis": [
          "CreateProcessA",
          "CreateProcessw",
          "ShellExecuteExW"
        ]
      },
      {
        "intent": "Create Token To Impersonate",
        "tag": "Privilege Escalation:T1134.003 - Make and Impersonate Token",
        "component": "Privileges",
        "inputs": 2,
        "matches": 1,
        "apis": [
          "SetTokenInformation"
        ]
      },
      {
        "intent": "Enumerate Files or Directories on the Target System",
        "tag": "Discovery:T1083 - File and Directory Discovery",
        "component": "Filesystem",
        "inputs": 5,
        "matches": 1,
        "apis": [
          "FindFirstFileW"
        ]
      },
      {
        "intent": "Inject malicious code into hijacked processes in order to evade process-based defenses",
        "tag": "Defense Evasion:T1055.002 - Thread Execution Hijacking",
        "component": "Processes",
        "inputs": 3,
        "matches": 1,
        "apis": [
          "SetThreadContext"
        ]
      },
      {
        "intent": "Delete Files From Disk Potentially Erasing Important Evidence To Cover Attack Activity",
        "tag": "Defense Evasion:T1070.004 - File Deletion",
        "component": "Filesystem",
        "inputs": 2,
        "matches": 2,
        "apis": [
          "DeleteFileA",
          "DeleteFileW"
        ]
      },
      {
        "intent": "Manipulate Windows Tokens",
        "tag": "Defense Evasion:T1134 - Access Token Manipulation",
        "component": "Privileges",
        "inputs": 10,
        "matches": 3,
        "apis": [
          "AdjustTokenPrivileges",
          "CheckTokenMembership",
          "OpenProcessToken"
        ]
      },
      {
        "intent": "Implements Features To Enumerate The Windows Registry",
        "tag": "Expert Input:IBO.0009 - Enumerate The Windows Registry",
        "component": "Registry",
        "inputs": 6,
        "matches": 3,
        "apis": [
          "RegEnumKeyExW",
          "RegEnumKeyW",
          "RegEnumValueW"
        ]
      },
      {
        "intent": "Implements Features To Create/Manipulate System Services",
        "tag": "Expert Input:IBO.0007 - Create/Manipulate System Services",
        "component": "Services",
        "inputs": 19,
        "matches": 4,
        "apis": [
          "CloseServiceHandle",
          "StartServiceCtrlDispatcherA",
          "StartServiceCtrlDispatcherW",
          "StartServiceW"
        ]
      },
      {
        "intent": "Implements Features To Enumerate/Discover System Services And Their Configuration Data",
        "tag": "Expert Input:IBO.0006 - Enumerate System Services",
        "component": "Services",
        "inputs": 28,
        "matches": 3,
        "apis": [
          "OpenSCManagerW",
          "OpenServiceW",
          "QueryServiceStatus"
        ]
      },
      {
        "intent": "Query And Discover Windows Registry Configuration Settings",
        "tag": "Discovery:T1012 - Query Registry",
        "component": "Registry",
        "inputs": 11,
        "matches": 4,
        "apis": [
          "RegGetValueW",
          "RegQueryInfoKeyW",
          "RegQueryValueExA",
          "RegQueryValueExW"
        ]
      },
      {
        "intent": "Inject DLLs into Processes to evade defenses",
        "tag": "Defense Evasion:T1055 - Dynamic-Link Library Injection",
        "component": "Processes",
        "inputs": 4,
        "matches": 1,
        "apis": [
          "VirtualAlloc"
        ]
      },
      {
        "intent": "Implements Features To Create/Manipulate The Windows Registry",
        "tag": "Expert Input:IBO.0008 - Create/Manipulate The Windows Registry",
        "component": "Registry",
        "inputs": 33,
        "matches": 10,
        "apis": [
          "RegCreateKeyExA",
          "RegCreateKeyExW",
          "RegDeleteKeyA",
          "RegDeleteValueA",
          "RegDeleteValueW",
          "RegOpenKeyA",
          "RegOpenKeyExA",
          "RegOpenKeyExW",
          "RegSetValueExA",
          "RegSetValueExW"
        ]
      }
    ]
  }
}