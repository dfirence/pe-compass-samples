{
  "pe_name": "TabSvc.dll",
  "pe_type": 523,
  "pe_size": 235008,
  "pe_subsystem": 2,
  "pe_subsystem_caption": "The Windows graphical user interface (GUI) subsystem",
  "pe_path": "c:\\Windows\\System32\\TabSvc.dll",
  "pe_timedate_stamp": 2852695690,
  "pe_timedate_human": "2060-05-25T07:28:10.000Z",
  "ImageDLLImports": [
    {
      "name": "msvcrt.dll",
      "imports": 33,
      "functions": [
        "??0exception@@QEAA@AEBV0@@Z",
        "??0exception@@QEAA@XZ",
        "??1exception@@UEAA@XZ",
        "??1type_info@@UEAA@XZ",
        "?terminate@@YAXXZ",
        "_CxxThrowException",
        "_XcptFilter",
        "__C_specific_handler",
        "__CxxFrameHandler3",
        "__dllonexit",
        "_aligned_free",
        "_aligned_malloc",
        "_amsg_exit",
        "_beginthreadex",
        "_callnewh",
        "_initterm",
        "_lock",
        "_onexit",
        "_purecall",
        "_unlock",
        "_vsnprintf_s",
        "_vsnwprintf",
        "calloc",
        "free",
        "malloc",
        "memcmp",
        "memcpy",
        "memcpy_s",
        "memmove_s",
        "memset",
        "srand",
        "time",
        "wcscmp"
      ]
    },
    {
      "name": "ntdll.dll",
      "imports": 20,
      "functions": [
        "EtwEventRegister",
        "EtwEventSetInformation",
        "EtwEventUnregister",
        "EtwEventWriteTransfer",
        "EtwGetTraceEnableFlags",
        "EtwGetTraceEnableLevel",
        "EtwGetTraceLoggerHandle",
        "EtwLogTraceEvent",
        "EtwRegisterTraceGuidsW",
        "EtwTraceMessage",
        "EtwUnregisterTraceGuids",
        "NtClose",
        "NtCreateEvent",
        "NtOpenDirectoryObject",
        "NtOpenEvent",
        "NtOpenMutant",
        "RtlCaptureContext",
        "RtlInitUnicodeString",
        "RtlLookupFunctionEntry",
        "RtlVirtualUnwind"
      ]
    },
    {
      "name": "api-ms-win-core-com-l1-1-0.dll",
      "imports": 3,
      "functions": [
        "CoCreateInstance",
        "CoInitializeEx",
        "CoUninitialize"
      ]
    },
    {
      "name": "api-ms-win-core-registry-l1-1-0.dll",
      "imports": 8,
      "functions": [
        "RegCloseKey",
        "RegCreateKeyExW",
        "RegDeleteKeyExW",
        "RegGetValueW",
        "RegNotifyChangeKeyValue",
        "RegOpenKeyExW",
        "RegQueryValueExW",
        "RegSetValueExW"
      ]
    },
    {
      "name": "api-ms-win-core-processthreads-l1-1-0.dll",
      "imports": 8,
      "functions": [
        "CreateProcessAsUserW",
        "CreateThread",
        "GetCurrentProcess",
        "GetCurrentProcessId",
        "GetCurrentThreadId",
        "GetExitCodeProcess",
        "OpenProcessToken",
        "TerminateProcess"
      ]
    },
    {
      "name": "api-ms-win-security-base-l1-1-0.dll",
      "imports": 19,
      "functions": [
        "AddAce",
        "AdjustTokenPrivileges",
        "CopySid",
        "DuplicateTokenEx",
        "EqualSid",
        "GetAce",
        "GetAclInformation",
        "GetLengthSid",
        "GetSecurityDescriptorDacl",
        "GetSidLengthRequired",
        "GetSidSubAuthority",
        "GetTokenInformation",
        "InitializeAcl",
        "InitializeSecurityDescriptor",
        "InitializeSid",
        "IsValidSid",
        "SetSecurityDescriptorControl",
        "SetSecurityDescriptorDacl",
        "SetTokenInformation"
      ]
    },
    {
      "name": "api-ms-win-service-core-l1-1-0.dll",
      "imports": 2,
      "functions": [
        "RegisterServiceCtrlHandlerExW",
        "SetServiceStatus"
      ]
    },
    {
      "name": "api-ms-win-service-management-l1-1-0.dll",
      "imports": 3,
      "functions": [
        "CloseServiceHandle",
        "OpenSCManagerW",
        "OpenServiceW"
      ]
    },
    {
      "name": "api-ms-win-service-management-l2-1-0.dll",
      "imports": 3,
      "functions": [
        "ChangeServiceConfig2W",
        "ChangeServiceConfigW",
        "QueryServiceConfigW"
      ]
    },
    {
      "name": "api-ms-win-security-sddl-l1-1-0.dll",
      "imports": 3,
      "functions": [
        "ConvertSidToStringSidW",
        "ConvertStringSecurityDescriptorToSecurityDescriptorW",
        "ConvertStringSidToSidW"
      ]
    },
    {
      "name": "user32.dll",
      "imports": 3,
      "functions": [
        "GetSystemMetrics",
        "RegisterDeviceNotificationW",
        "UnregisterDeviceNotification"
      ]
    },
    {
      "name": "kernel32.dll",
      "imports": 67,
      "functions": [
        "AcquireSRWLockExclusive",
        "AcquireSRWLockShared",
        "CloseHandle",
        "CloseThreadpoolTimer",
        "CreateEventW",
        "CreateMutexExW",
        "CreateSemaphoreExW",
        "CreateThreadpoolTimer",
        "DebugBreak",
        "DelayLoadFailureHook",
        "DeleteCriticalSection",
        "EnterCriticalSection",
        "ExpandEnvironmentStringsW",
        "FormatMessageW",
        "FreeLibrary",
        "GetLastError",
        "GetModuleFileNameA",
        "GetModuleFileNameW",
        "GetModuleHandleExW",
        "GetModuleHandleW",
        "GetProcAddress",
        "GetProcessHeap",
        "GetProcessMitigationPolicy",
        "GetSystemTimeAsFileTime",
        "GetTickCount",
        "HeapAlloc",
        "HeapDestroy",
        "HeapFree",
        "HeapReAlloc",
        "HeapSize",
        "InitOnceBeginInitialize",
        "InitOnceComplete",
        "InitializeCriticalSectionEx",
        "InitializeSListHead",
        "InterlockedFlushSList",
        "InterlockedPushEntrySList",
        "IsDebuggerPresent",
        "LeaveCriticalSection",
        "LocalAlloc",
        "LocalFree",
        "OpenMutexW",
        "OpenSemaphoreW",
        "OutputDebugStringW",
        "QueryPerformanceCounter",
        "RegisterWaitForSingleObject",
        "ReleaseMutex",
        "ReleaseSRWLockExclusive",
        "ReleaseSRWLockShared",
        "ReleaseSemaphore",
        "ResetEvent",
        "ResolveDelayLoadedAPI",
        "SetEvent",
        "SetLastError",
        "SetThreadpoolTimer",
        "SetUnhandledExceptionFilter",
        "Sleep",
        "SleepConditionVariableSRW",
        "UnhandledExceptionFilter",
        "UnregisterWait",
        "UnregisterWaitEx",
        "WTSGetActiveConsoleSessionId",
        "WaitForMultipleObjects",
        "WaitForMultipleObjectsEx",
        "WaitForSingleObject",
        "WaitForSingleObjectEx",
        "WaitForThreadpoolTimerCallbacks",
        "WakeAllConditionVariable"
      ]
    }
  ],
  "ImageDLLExports": {
    "exports": 2,
    "functions": [
      "ServiceMain",
      "SvchostPushServiceGlobals"
    ]
  },
  "ImageHashSignatures": {
    "sha2": "6385ee02d392fcffb41ce5c5d4cd03c245828d98dcb01f0b4358b431257f9f5b"
  },
  "scan": {
    "intentions": 8,
    "uniq_apis_matched": 18,
    "results": [
      {
        "intent": "Implements Features To Create/Manipulate The Windows Registry",
        "tag": "Expert Input:IBO.0008 - Create/Manipulate The Windows Registry",
        "component": "Registry",
        "inputs": 33,
        "matches": 4,
        "apis": [
          "RegCreateKeyExW",
          "RegDeleteKeyExW",
          "RegOpenKeyExW",
          "RegSetValueExW"
        ]
      },
      {
        "intent": "Query And Discover Windows Registry Configuration Settings",
        "tag": "Discovery:T1012 - Query Registry",
        "component": "Registry",
        "inputs": 11,
        "matches": 2,
        "apis": [
          "RegGetValueW",
          "RegQueryValueExW"
        ]
      },
      {
        "intent": "Create Token To Impersonate",
        "tag": "Privilege Escalation:T1134.003 - Make and Impersonate Token",
        "component": "Privileges",
        "inputs": 2,
        "matches": 1,
        "apis": [
          "SetTokenInformation"
        ]
      },
      {
        "intent": "Implements Delayed Loads of DLL Resources",
        "tag": "Expert Input:IBO.0005 - Load DLL Resources With Delay During Runtime",
        "component": "---",
        "inputs": 2,
        "matches": 2,
        "apis": [
          "DelayLoadFailureHook",
          "ResolveDelayLoadedAPI"
        ]
      },
      {
        "intent": "Manipulate Windows Tokens",
        "tag": "Defense Evasion:T1134 - Access Token Manipulation",
        "component": "Privileges",
        "inputs": 10,
        "matches": 2,
        "apis": [
          "AdjustTokenPrivileges",
          "OpenProcessToken"
        ]
      },
      {
        "intent": "Implements Features To Execute or Spawn New Processes On The Target System As Another User Identity",
        "tag": "Expert Input:IBO.0003 - Spawn New Process As Different User",
        "component": "Processes",
        "inputs": 2,
        "matches": 1,
        "apis": [
          "CreateProcessAsUserW"
        ]
      },
      {
        "intent": "Implements Features To Enumerate/Discover System Services And Their Configuration Data",
        "tag": "Expert Input:IBO.0006 - Enumerate System Services",
        "component": "Services",
        "inputs": 28,
        "matches": 3,
        "apis": [
          "OpenSCManagerW",
          "OpenServiceW",
          "QueryServiceConfigW"
        ]
      },
      {
        "intent": "Implements Features To Create/Manipulate System Services",
        "tag": "Expert Input:IBO.0007 - Create/Manipulate System Services",
        "component": "Services",
        "inputs": 19,
        "matches": 3,
        "apis": [
          "CloseServiceHandle",
          "RegisterServiceCtrlHandlerExW",
          "SetServiceStatus"
        ]
      }
    ]
  }
}