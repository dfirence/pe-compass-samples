{
  "pe_name": "DismCore.dll",
  "pe_type": 267,
  "pe_size": 333128,
  "pe_subsystem": 3,
  "pe_subsystem_caption": "The Windows character (Cosole UI) subsystem",
  "pe_path": "c:\\Windows\\WinSxS\\x86_microsoft-windows-d..ing-management-core_31bf3856ad364e35_10.0.19041.746_none_ad0ed54dd130eec3\\DismCore.dll",
  "pe_timedate_stamp": 2196814004,
  "pe_timedate_human": "2039-08-13T02:06:44.000Z",
  "ImageDLLImports": [
    {
      "name": "msvcrt.dll",
      "imports": 58,
      "functions": [
        "??0exception@@QAE@ABV0@@Z",
        "??0exception@@QAE@XZ",
        "??1exception@@UAE@XZ",
        "??1type_info@@UAE@XZ",
        "?terminate@@YAXXZ",
        "?what@exception@@UBEPBDXZ",
        "_CxxThrowException",
        "_XcptFilter",
        "__CxxFrameHandler3",
        "__dllonexit",
        "_amsg_exit",
        "_callnewh",
        "_errno",
        "_except_handler4_common",
        "_ftol2",
        "_initterm",
        "_lock",
        "_onexit",
        "_purecall",
        "_resetstkoflw",
        "_unlock",
        "_vscprintf",
        "_vscwprintf",
        "_vsnprintf",
        "_vsnwprintf",
        "_wcsicmp",
        "_wcsnicmp",
        "_wfopen",
        "_wtoi",
        "calloc",
        "fclose",
        "feof",
        "fgetws",
        "free",
        "iswalpha",
        "iswctype",
        "malloc",
        "memcmp",
        "memcpy",
        "memcpy_s",
        "memmove",
        "memmove_s",
        "memset",
        "realloc",
        "strrchr",
        "swscanf_s",
        "toupper",
        "towlower",
        "vsprintf_s",
        "vswprintf_s",
        "wcscat_s",
        "wcschr",
        "wcscpy_s",
        "wcsncmp",
        "wcsncpy_s",
        "wcsrchr",
        "wcsstr",
        "wcstok_s"
      ]
    },
    {
      "name": "advapi32.dll",
      "imports": 23,
      "functions": [
        "AddAccessAllowedAce",
        "AdjustTokenPrivileges",
        "AllocateAndInitializeSid",
        "CheckTokenMembership",
        "ConvertSidToStringSidW",
        "ConvertStringSecurityDescriptorToSecurityDescriptorW",
        "EqualSid",
        "EventProviderEnabled",
        "EventRegister",
        "EventUnregister",
        "EventWriteTransfer",
        "FreeSid",
        "GetLengthSid",
        "GetTokenInformation",
        "InitializeAcl",
        "InitializeSecurityDescriptor",
        "OpenProcessToken",
        "OpenThreadToken",
        "RegCloseKey",
        "RegOpenKeyExW",
        "RegQueryInfoKeyW",
        "RegQueryValueExW",
        "SetSecurityDescriptorDacl"
      ]
    },
    {
      "name": "kernel32.dll",
      "imports": 122,
      "functions": [
        "AcquireSRWLockExclusive",
        "CloseHandle",
        "CompareStringW",
        "CopyFileExW",
        "CreateDirectoryW",
        "CreateEventW",
        "CreateFileA",
        "CreateFileMappingA",
        "CreateFileMappingW",
        "CreateFileW",
        "CreateMutexA",
        "CreateMutexW",
        "CreateProcessW",
        "DebugBreak",
        "DeleteCriticalSection",
        "DeleteFileA",
        "DeleteFileW",
        "DeleteProcThreadAttributeList",
        "DeviceIoControl",
        "DisableThreadLibraryCalls",
        "DuplicateHandle",
        "EnterCriticalSection",
        "ExitProcess",
        "ExpandEnvironmentStringsW",
        "FindClose",
        "FindFirstFileW",
        "FindNextFileW",
        "FindResourceExW",
        "FlushFileBuffers",
        "FormatMessageA",
        "FormatMessageW",
        "FreeLibrary",
        "GetCurrentDirectoryW",
        "GetCurrentProcess",
        "GetCurrentProcessId",
        "GetCurrentThread",
        "GetCurrentThreadId",
        "GetDriveTypeW",
        "GetEnvironmentVariableW",
        "GetExitCodeProcess",
        "GetFileAttributesW",
        "GetFileInformationByHandle",
        "GetFileInformationByHandleEx",
        "GetFileSize",
        "GetFileSizeEx",
        "GetFinalPathNameByHandleW",
        "GetFullPathNameW",
        "GetLastError",
        "GetLocalTime",
        "GetLongPathNameW",
        "GetModuleFileNameA",
        "GetModuleFileNameW",
        "GetModuleHandleExW",
        "GetModuleHandleW",
        "GetNativeSystemInfo",
        "GetProcAddress",
        "GetProcessHeap",
        "GetSystemDirectoryW",
        "GetSystemInfo",
        "GetSystemTimeAsFileTime",
        "GetSystemWindowsDirectoryW",
        "GetTempFileNameW",
        "GetTempPathW",
        "GetThreadLocale",
        "GetTickCount",
        "GetVersion",
        "GetVersionExW",
        "GetVolumeNameForVolumeMountPointW",
        "GetVolumePathNameW",
        "GetWindowsDirectoryW",
        "HeapAlloc",
        "HeapDestroy",
        "HeapFree",
        "HeapReAlloc",
        "HeapSize",
        "InitializeCriticalSection",
        "InitializeProcThreadAttributeList",
        "IsDebuggerPresent",
        "LeaveCriticalSection",
        "LoadLibraryExW",
        "LoadResource",
        "LocalAlloc",
        "LocalFree",
        "LockResource",
        "MapViewOfFile",
        "MoveFileExW",
        "MultiByteToWideChar",
        "OutputDebugStringA",
        "OutputDebugStringW",
        "QueryDosDeviceW",
        "QueryPerformanceCounter",
        "RaiseException",
        "ReadFile",
        "ReleaseMutex",
        "ReleaseSRWLockExclusive",
        "SearchPathW",
        "SetEvent",
        "SetFileAttributesW",
        "SetFileInformationByHandle",
        "SetFilePointer",
        "SetLastError",
        "SetThreadLocale",
        "SetThreadUILanguage",
        "SetUnhandledExceptionFilter",
        "SizeofResource",
        "Sleep",
        "SleepConditionVariableSRW",
        "TerminateProcess",
        "TlsAlloc",
        "TlsFree",
        "TlsGetValue",
        "TlsSetValue",
        "UnhandledExceptionFilter",
        "UnmapViewOfFile",
        "UpdateProcThreadAttribute",
        "VirtualQuery",
        "WaitForSingleObject",
        "WakeAllConditionVariable",
        "WideCharToMultiByte",
        "Wow64DisableWow64FsRedirection",
        "Wow64RevertWow64FsRedirection",
        "WriteFile"
      ]
    },
    {
      "name": "ole32.dll",
      "imports": 9,
      "functions": [
        "CoCreateGuid",
        "CoRegisterClassObject",
        "CoRegisterPSClsid",
        "CoRevokeClassObject",
        "CoSetProxyBlanket",
        "CoTaskMemFree",
        "ProgIDFromCLSID",
        "StringFromCLSID",
        "StringFromGUID2"
      ]
    },
    {
      "name": "user32.dll",
      "imports": 2,
      "functions": [
        "CharNextW",
        "LoadStringW"
      ]
    },
    {
      "name": "oleaut32.dll",
      "imports": 0,
      "functions": []
    },
    {
      "name": "version.dll",
      "imports": 3,
      "functions": [
        "GetFileVersionInfoExW",
        "GetFileVersionInfoSizeExW",
        "VerQueryValueW"
      ]
    },
    {
      "name": "ntdll.dll",
      "imports": 4,
      "functions": [
        "NtSetInformationFile",
        "RtlAllocateHeap",
        "RtlFreeHeap",
        "RtlNtStatusToDosError"
      ]
    }
  ],
  "ImageDLLExports": {
    "exports": 4,
    "functions": [
      "DllCanUnloadNow",
      "DllGetClassObject",
      "DllRegisterServer",
      "DllUnregisterServer"
    ]
  },
  "ImageHashSignatures": {
    "sha2": "9af06331b343449d1f51df91f1103940a71048eda475b4766e075336101b973f"
  },
  "scan": {
    "intentions": 7,
    "uniq_apis_matched": 12,
    "results": [
      {
        "intent": "Query And Discover Windows Registry Configuration Settings",
        "tag": "Discovery:T1012 - Query Registry",
        "component": "Registry",
        "inputs": 11,
        "matches": 2,
        "apis": [
          "RegQueryInfoKeyW",
          "RegQueryValueExW"
        ]
      },
      {
        "intent": "Enumerate Files or Directories on the Target System",
        "tag": "Discovery:T1083 - File and Directory Discovery",
        "component": "Filesystem",
        "inputs": 5,
        "matches": 1,
        "apis": [
          "FindFirstFileW"
        ]
      },
      {
        "intent": "Implements Features To Execute or Spawn New Processes On The Target System",
        "tag": "Expert Input:IBO.0002 - Spawn New Process",
        "component": "Processes",
        "inputs": 7,
        "matches": 1,
        "apis": [
          "CreateProcessw"
        ]
      },
      {
        "intent": "Delete Files From Disk Potentially Erasing Important Evidence To Cover Attack Activity",
        "tag": "Defense Evasion:T1070.004 - File Deletion",
        "component": "Filesystem",
        "inputs": 2,
        "matches": 2,
        "apis": [
          "DeleteFileA",
          "DeleteFileW"
        ]
      },
      {
        "intent": "Manipulate Windows Tokens",
        "tag": "Defense Evasion:T1134 - Access Token Manipulation",
        "component": "Privileges",
        "inputs": 10,
        "matches": 4,
        "apis": [
          "AdjustTokenPrivileges",
          "CheckTokenMembership",
          "OpenProcessToken",
          "OpenThreadToken"
        ]
      },
      {
        "intent": "Implements Features To Create/Manipulate The Windows Registry",
        "tag": "Expert Input:IBO.0008 - Create/Manipulate The Windows Registry",
        "component": "Registry",
        "inputs": 33,
        "matches": 1,
        "apis": [
          "RegOpenKeyExW"
        ]
      },
      {
        "intent": "Query and Discovery General Attributes From The Target System",
        "tag": "Discovery:T1082 - System Information Discovery",
        "component": "---",
        "inputs": 3,
        "matches": 1,
        "apis": [
          "GetNativeSystemInfo"
        ]
      }
    ]
  }
}