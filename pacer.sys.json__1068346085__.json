{
  "pe_name": "pacer.sys",
  "pe_type": 523,
  "pe_size": 161608,
  "pe_subsystem": 1,
  "pe_subsystem_caption": "Device drivers and native Windows processes",
  "pe_path": "c:\\Windows\\WinSxS\\amd64_microsoft-windows-network-qos-pacer_31bf3856ad364e35_10.0.19041.546_none_cb01ee53d6697641\\pacer.sys",
  "pe_timedate_stamp": 650003668,
  "pe_timedate_human": "1990-08-07T04:34:28.000Z",
  "ImageDLLImports": [
    {
      "name": "ntoskrnl.dll",
      "imports": 83,
      "functions": [
        "EtwRegister",
        "EtwUnregister",
        "EtwWrite",
        "EtwWriteTransfer",
        "ExAllocatePoolWithTag",
        "ExDeleteNPagedLookasideList",
        "ExFreePoolWithTag",
        "ExInitializeNPagedLookasideList",
        "ExQueryDepthSList",
        "ExUuidCreate",
        "ExpInterlockedPopEntrySList",
        "ExpInterlockedPushEntrySList",
        "InitializeSListHead",
        "IoAllocateWorkItem",
        "IoFreeWorkItem",
        "IoGetFileObjectGenericMapping",
        "IoGetRelatedDeviceObject",
        "IoGetStackLimits",
        "IoIs32bitProcess",
        "IoQueueWorkItemEx",
        "IoWMIDeviceObjectToProviderId",
        "IoWMIRegistrationControl",
        "IoWMIWriteEvent",
        "IofCompleteRequest",
        "KeAcquireInStackQueuedSpinLock",
        "KeAcquireInStackQueuedSpinLockAtDpcLevel",
        "KeAcquireSpinLockAtDpcLevel",
        "KeAcquireSpinLockRaiseToDpc",
        "KeAreApcsDisabled",
        "KeCancelTimer",
        "KeFlushQueuedDpcs",
        "KeGetCurrentProcessorNumberEx",
        "KeGetProcessorNumberFromIndex",
        "KeInitializeDpc",
        "KeInitializeEvent",
        "KeInitializeSemaphore",
        "KeInitializeSpinLock",
        "KeInitializeTimerEx",
        "KeLowerIrql",
        "KeQueryMaximumProcessorCountEx",
        "KeQueryTimeIncrement",
        "KeReleaseInStackQueuedSpinLock",
        "KeReleaseInStackQueuedSpinLockFromDpcLevel",
        "KeReleaseSemaphore",
        "KeReleaseSpinLock",
        "KeReleaseSpinLockFromDpcLevel",
        "KeSetEvent",
        "KeSetTargetProcessorDpcEx",
        "KeSetTimerEx",
        "KeTestSpinLock",
        "KeWaitForSingleObject",
        "KfRaiseIrql",
        "MmGetSystemRoutineAddress",
        "ObGetObjectSecurity",
        "ObReleaseObjectSecurity",
        "ObSetSecurityObjectByPointer",
        "PcwAddInstance",
        "PcwRegister",
        "PcwUnregister",
        "PsGetCurrentProcessId",
        "RtlAddAccessAllowedAceEx",
        "RtlAppendUnicodeStringToString",
        "RtlAppendUnicodeToString",
        "RtlCompareUnicodeString",
        "RtlCompareUnicodeStrings",
        "RtlCopyUnicodeString",
        "RtlCreateAcl",
        "RtlCreateSecurityDescriptor",
        "RtlEqualUnicodeString",
        "RtlInitUnicodeString",
        "RtlLengthRequiredSid",
        "RtlLengthSecurityDescriptor",
        "RtlLengthSid",
        "RtlQueryRegistryValuesEx",
        "RtlSetDaclSecurityDescriptor",
        "SeExports",
        "SeSetSecurityDescriptorInfo",
        "ZwClose",
        "ZwCreateFile",
        "ZwNotifyChangeKey",
        "ZwOpenKey",
        "ZwQueryValueKey",
        "wcschr"
      ]
    },
    {
      "name": "ndis.dll",
      "imports": 41,
      "functions": [
        "NdisAcquireRWLockRead",
        "NdisAcquireRWLockWrite",
        "NdisAllocateCloneOidRequest",
        "NdisAllocateMemoryWithTag",
        "NdisAllocateNetBufferList",
        "NdisAllocateNetBufferListContext",
        "NdisAllocateNetBufferListPool",
        "NdisAllocateRWLock",
        "NdisCloseConfiguration",
        "NdisCopySendNetBufferListInfo",
        "NdisDeregisterDeviceEx",
        "NdisFCancelSendNetBufferLists",
        "NdisFDeregisterFilterDriver",
        "NdisFDevicePnPEventNotify",
        "NdisFIndicateReceiveNetBufferLists",
        "NdisFIndicateStatus",
        "NdisFNetPnPEvent",
        "NdisFOidRequest",
        "NdisFOidRequestComplete",
        "NdisFRegisterFilterDriver",
        "NdisFReturnNetBufferLists",
        "NdisFSendNetBufferLists",
        "NdisFSendNetBufferListsComplete",
        "NdisFSetAttributes",
        "NdisFreeCloneOidRequest",
        "NdisFreeMemoryWithTag",
        "NdisFreeNetBufferList",
        "NdisFreeNetBufferListContext",
        "NdisFreeNetBufferListPool",
        "NdisFreeRWLock",
        "NdisGetDataBuffer",
        "NdisInitializeEvent",
        "NdisOpenConfigurationEx",
        "NdisOpenConfigurationKeyByName",
        "NdisReadConfiguration",
        "NdisRegisterDeviceEx",
        "NdisReleaseRWLock",
        "NdisResetEvent",
        "NdisSetEvent",
        "NdisSetOptionalHandlers",
        "NdisWaitEvent"
      ]
    },
    {
      "name": "netio.dll",
      "imports": 26,
      "functions": [
        "FreeMibTable",
        "GetUnicastIpAddressTable",
        "HfAllocateHandle32",
        "HfCreateFactory",
        "HfDestroyFactory",
        "HfFreeHandle32",
        "NmrDeregisterProvider",
        "NmrProviderDetachClientComplete",
        "NmrRegisterProvider",
        "NmrWaitForProviderDeregisterComplete",
        "NsiGetParameter",
        "RtlCleanupTimerWheel",
        "RtlCleanupTimerWheelEntry",
        "RtlCopyBufferToMdl",
        "RtlGetNextExpirationTimerWheelTick",
        "RtlGetNextExpiredTimerWheelEntry",
        "RtlIndicateTimerWheelEntryTimerStart",
        "RtlInitializeTimerWheel",
        "RtlInitializeTimerWheelEntry",
        "RtlInvokeStartRoutines",
        "RtlInvokeStopRoutines",
        "RtlIsTimerWheelSuspended",
        "RtlResumeTimerWheel",
        "RtlReturnTimerWheelEntry",
        "RtlSuspendTimerWheel",
        "RtlUpdateCurrentTimerWheelTick"
      ]
    },
    {
      "name": "fwpkclnt.dll",
      "imports": 6,
      "functions": [
        "FwpiCalloutRegisterAndAddWithoutDevice0",
        "FwpiCalloutUnregisterAndDeleteByKey0",
        "FwpmEngineClose0",
        "FwpmEngineOpen0",
        "FwpmFilterAdd0",
        "FwpmFilterDeleteByKey0"
      ]
    },
    {
      "name": "hal.dll",
      "imports": 1,
      "functions": [
        "KeQueryPerformanceCounter"
      ]
    }
  ],
  "ImageDLLExports": {
    "exports": 0,
    "functions": []
  },
  "ImageHashSignatures": {
    "sha2": "7906e70262f7d47a22cc18361749106e5b377660ef17a0f2aeb44b019f825a95"
  }
}