{
  "pe_name": "certmgr.dll",
  "pe_type": 523,
  "pe_size": 2237440,
  "pe_subsystem": 2,
  "pe_subsystem_caption": "The Windows graphical user interface (GUI) subsystem",
  "pe_path": "c:\\Windows\\System32\\certmgr.dll",
  "pe_timedate_stamp": 120340124,
  "pe_timedate_human": "1973-10-24T19:48:44.000Z",
  "ImageDLLImports": [
    {
      "name": "mfc42u.dll",
      "imports": 0,
      "functions": []
    },
    {
      "name": "msvcrt.dll",
      "imports": 52,
      "functions": [
        "??1type_info@@UEAA@XZ",
        "??_V@YAXPEAX@Z",
        "?terminate@@YAXXZ",
        "_CxxThrowException",
        "_XcptFilter",
        "__C_specific_handler",
        "__CxxFrameHandler3",
        "__RTDynamicCast",
        "__dllonexit",
        "_amsg_exit",
        "_beginthreadex",
        "_endthreadex",
        "_initterm",
        "_itow",
        "_lock",
        "_onexit",
        "_purecall",
        "_stricmp",
        "_unlock",
        "_vsnwprintf",
        "_wcsicmp",
        "_wcsnicmp",
        "_wcsupr",
        "_wtoi",
        "_wtol",
        "free",
        "iswdigit",
        "iswspace",
        "malloc",
        "mbstowcs",
        "memcmp",
        "memcpy",
        "memmove",
        "memset",
        "qsort",
        "realloc",
        "strcmp",
        "strlen",
        "swprintf_s",
        "wcscat_s",
        "wcschr",
        "wcscmp",
        "wcscoll",
        "wcscpy_s",
        "wcscspn",
        "wcslen",
        "wcsncmp",
        "wcsrchr",
        "wcsstr",
        "wcstok_s",
        "wcstol",
        "wcstoul"
      ]
    },
    {
      "name": "atl.dll",
      "imports": 0,
      "functions": []
    },
    {
      "name": "ntdll.dll",
      "imports": 6,
      "functions": [
        "RtlCaptureContext",
        "RtlCompareUnicodeString",
        "RtlInitUnicodeString",
        "RtlLookupFunctionEntry",
        "RtlNtStatusToDosError",
        "RtlVirtualUnwind"
      ]
    },
    {
      "name": "certca.dll",
      "imports": 0,
      "functions": []
    },
    {
      "name": "certenroll.dll",
      "imports": 0,
      "functions": []
    },
    {
      "name": "kernel32.dll",
      "imports": 86,
      "functions": [
        "AcquireSRWLockExclusive",
        "ActivateActCtx",
        "CloseHandle",
        "CompareFileTime",
        "CompareStringW",
        "CreateActCtxW",
        "CreateEventW",
        "CreateFileMappingW",
        "CreateFileW",
        "DeactivateActCtx",
        "DecodePointer",
        "DeleteCriticalSection",
        "EncodePointer",
        "EnterCriticalSection",
        "ExpandEnvironmentStringsA",
        "FileTimeToLocalFileTime",
        "FileTimeToSystemTime",
        "FindActCtxSectionStringW",
        "FlushInstructionCache",
        "FormatMessageW",
        "FreeLibrary",
        "GetACP",
        "GetCommandLineW",
        "GetComputerNameExW",
        "GetComputerNameW",
        "GetCurrentProcess",
        "GetCurrentProcessId",
        "GetCurrentThreadId",
        "GetDateFormatW",
        "GetFileSize",
        "GetFileSizeEx",
        "GetFileTime",
        "GetLastError",
        "GetModuleFileNameW",
        "GetModuleHandleExW",
        "GetModuleHandleW",
        "GetProcAddress",
        "GetProcessHeap",
        "GetSystemTime",
        "GetSystemTimeAsFileTime",
        "GetSystemWindowsDirectoryW",
        "GetTickCount",
        "GetTimeFormatW",
        "GetUserDefaultLangID",
        "GetVersionExW",
        "GlobalAlloc",
        "GlobalFree",
        "GlobalLock",
        "GlobalUnlock",
        "HeapAlloc",
        "HeapFree",
        "InitOnceExecuteOnce",
        "InitializeCriticalSection",
        "InterlockedPopEntrySList",
        "InterlockedPushEntrySList",
        "LeaveCriticalSection",
        "LoadLibraryExA",
        "LoadLibraryExW",
        "LoadLibraryW",
        "LocalAlloc",
        "LocalFree",
        "MapViewOfFile",
        "MultiByteToWideChar",
        "OutputDebugStringA",
        "QueryActCtxW",
        "QueryPerformanceCounter",
        "RaiseException",
        "ReadFile",
        "ReleaseActCtx",
        "ReleaseSRWLockExclusive",
        "ResetEvent",
        "SetEvent",
        "SetLastError",
        "SetUnhandledExceptionFilter",
        "Sleep",
        "SleepConditionVariableSRW",
        "SystemTimeToFileTime",
        "TerminateProcess",
        "UnhandledExceptionFilter",
        "UnmapViewOfFile",
        "VirtualAlloc",
        "VirtualFree",
        "WaitForSingleObject",
        "WakeAllConditionVariable",
        "WideCharToMultiByte",
        "lstrcmpiW"
      ]
    },
    {
      "name": "user32.dll",
      "imports": 57,
      "functions": [
        "CallNextHookEx",
        "CallWindowProcW",
        "CheckDlgButton",
        "ChildWindowFromPointEx",
        "CloseClipboard",
        "DefWindowProcW",
        "DestroyIcon",
        "DestroyWindow",
        "EmptyClipboard",
        "EnableMenuItem",
        "EnableWindow",
        "FindWindowExW",
        "GetClientRect",
        "GetDC",
        "GetDlgCtrlID",
        "GetDlgItem",
        "GetFocus",
        "GetKeyState",
        "GetMenu",
        "GetParent",
        "GetSubMenu",
        "GetSysColor",
        "GetSystemMetrics",
        "GetWindow",
        "GetWindowLongPtrW",
        "GetWindowLongW",
        "GetWindowRect",
        "GetWindowTextW",
        "GetWindowThreadProcessId",
        "InvalidateRect",
        "IsDlgButtonChecked",
        "IsWindowVisible",
        "LoadBitmapW",
        "LoadIconW",
        "LoadImageW",
        "LoadMenuW",
        "LoadStringW",
        "MessageBoxW",
        "OpenClipboard",
        "PostMessageW",
        "RegisterClipboardFormatW",
        "ReleaseDC",
        "ScreenToClient",
        "SendDlgItemMessageW",
        "SendMessageW",
        "SetClipboardData",
        "SetFocus",
        "SetMenu",
        "SetWindowLongPtrW",
        "SetWindowLongW",
        "SetWindowTextW",
        "SetWindowsHookExW",
        "ShowWindow",
        "SystemParametersInfoW",
        "UnhookWindowsHookEx",
        "UpdateWindow",
        "WinHelpW"
      ]
    },
    {
      "name": "oleaut32.dll",
      "imports": 0,
      "functions": []
    },
    {
      "name": "ole32.dll",
      "imports": 11,
      "functions": [
        "CLSIDFromString",
        "CoCreateGuid",
        "CoCreateInstance",
        "CoInitialize",
        "CoTaskMemAlloc",
        "CoTaskMemFree",
        "CoUninitialize",
        "CreateStreamOnHGlobal",
        "GetHGlobalFromStream",
        "ReleaseStgMedium",
        "StringFromCLSID"
      ]
    },
    {
      "name": "advapi32.dll",
      "imports": 36,
      "functions": [
        "AllocateAndInitializeSid",
        "CheckTokenMembership",
        "CloseServiceHandle",
        "CopySid",
        "CryptGetProvParam",
        "CryptSetProvParam",
        "EnumServicesStatusW",
        "FreeSid",
        "GetLengthSid",
        "GetSecurityDescriptorLength",
        "GetServiceDisplayNameW",
        "GetTokenInformation",
        "GetUserNameW",
        "LookupAccountNameW",
        "OpenProcessToken",
        "OpenSCManagerW",
        "RegCloseKey",
        "RegCreateKeyExW",
        "RegDeleteKeyW",
        "RegDeleteTreeW",
        "RegDeleteValueW",
        "RegEnumKeyExW",
        "RegOpenKeyExA",
        "RegOpenKeyExW",
        "RegQueryValueExA",
        "RegQueryValueExW",
        "RegSetValueExA",
        "RegSetValueExW",
        "SaferCloseLevel",
        "SaferCreateLevel",
        "SaferGetLevelInformation",
        "SaferGetPolicyInformation",
        "SaferSetLevelInformation",
        "SaferSetPolicyInformation",
        "SaferiChangeRegistryScope",
        "SaferiPopulateDefaultsInRegistry"
      ]
    },
    {
      "name": "netutils.dll",
      "imports": 3,
      "functions": [
        "NetApiBufferFree",
        "NetpwNameCanonicalize",
        "NetpwNameValidate"
      ]
    },
    {
      "name": "dsrole.dll",
      "imports": 2,
      "functions": [
        "DsRoleFreeMemory",
        "DsRoleGetPrimaryDomainInformation"
      ]
    },
    {
      "name": "srvcli.dll",
      "imports": 1,
      "functions": [
        "NetServerGetInfo"
      ]
    },
    {
      "name": "shell32.dll",
      "imports": 5,
      "functions": [
        "SHBindToParent",
        "SHBrowseForFolderW",
        "SHGetFileInfoW",
        "SHGetMalloc",
        "SHGetPathFromIDListW"
      ]
    },
    {
      "name": "cryptui.dll",
      "imports": 11,
      "functions": [
        "CryptUIDlgAddPolicyServerWithPriority",
        "CryptUIDlgPropertyPolicy",
        "CryptUIDlgSelectCertificateW",
        "CryptUIDlgViewCRLW",
        "CryptUIDlgViewCTLW",
        "CryptUIDlgViewCertificatePropertiesW",
        "CryptUIDlgViewCertificateW",
        "CryptUIGetCertificatePropertiesPagesW",
        "CryptUIWizBuildCTL",
        "CryptUIWizExport",
        "CryptUIWizImport"
      ]
    },
    {
      "name": "crypt32.dll",
      "imports": 58,
      "functions": [
        "CertAddCRLContextToStore",
        "CertAddCTLContextToStore",
        "CertAddCertificateContextToStore",
        "CertAddEncodedCTLToStore",
        "CertAddSerializedElementToStore",
        "CertAddStoreToCollection",
        "CertCloseStore",
        "CertCompareCertificate",
        "CertControlStore",
        "CertDeleteCRLFromStore",
        "CertDeleteCTLFromStore",
        "CertDeleteCertificateFromStore",
        "CertDuplicateCRLContext",
        "CertDuplicateCTLContext",
        "CertDuplicateCertificateContext",
        "CertEnumCRLsInStore",
        "CertEnumCTLsInStore",
        "CertEnumCertificatesInStore",
        "CertEnumPhysicalStore",
        "CertEnumSystemStore",
        "CertFindCTLInStore",
        "CertFindCertificateInStore",
        "CertFindExtension",
        "CertFreeCRLContext",
        "CertFreeCTLContext",
        "CertFreeCertificateChain",
        "CertFreeCertificateContext",
        "CertGetCRLFromStore",
        "CertGetCTLContextProperty",
        "CertGetCertificateChain",
        "CertGetCertificateContextProperty",
        "CertGetEnhancedKeyUsage",
        "CertGetIntendedKeyUsage",
        "CertGetNameStringW",
        "CertGetPublicKeyLength",
        "CertGetStoreProperty",
        "CertGetSubjectCertificateFromStore",
        "CertNameToStrW",
        "CertOpenStore",
        "CertSetCertificateContextProperty",
        "CertVerifyRevocation",
        "CertVerifyTimeValidity",
        "CryptAcquireCertificatePrivateKey",
        "CryptBinaryToStringW",
        "CryptDecodeObject",
        "CryptDecodeObjectEx",
        "CryptEncodeObject",
        "CryptEnumOIDInfo",
        "CryptFindCertificateKeyProvInfo",
        "CryptFindLocalizedName",
        "CryptFindOIDInfo",
        "CryptImportPublicKeyInfoEx2",
        "CryptMsgClose",
        "CryptMsgEncodeAndSignCTL",
        "CryptMsgGetParam",
        "CryptMsgOpenToDecode",
        "CryptMsgUpdate",
        "CryptQueryObject"
      ]
    },
    {
      "name": "gdi32.dll",
      "imports": 3,
      "functions": [
        "CreateFontIndirectW",
        "DeleteObject",
        "GetDeviceCaps"
      ]
    },
    {
      "name": "ntdsapi.dll",
      "imports": 4,
      "functions": [
        "DsBindW",
        "DsCrackNamesW",
        "DsFreeNameResultW",
        "DsUnBindW"
      ]
    },
    {
      "name": "ncrypt.dll",
      "imports": 11,
      "functions": [
        "BCryptCloseAlgorithmProvider",
        "BCryptCreateHash",
        "BCryptDestroyHash",
        "BCryptDestroyKey",
        "BCryptFinishHash",
        "BCryptGetProperty",
        "BCryptHashData",
        "BCryptOpenAlgorithmProvider",
        "NCryptGetProperty",
        "NCryptIsKeyHandle",
        "NCryptSetProperty"
      ]
    },
    {
      "name": "shlwapi.dll",
      "imports": 3,
      "functions": [
        "PathFindExtensionW",
        "SHDeleteKeyW",
        "StrTrimW"
      ]
    },
    {
      "name": "wintrust.dll",
      "imports": 5,
      "functions": [
        "WTHelperGetFileHash",
        "WTHelperGetProvCertFromChain",
        "WTHelperGetProvSignerFromChain",
        "WTHelperProvDataFromStateData",
        "WinVerifyTrust"
      ]
    },
    {
      "name": "version.dll",
      "imports": 3,
      "functions": [
        "GetFileVersionInfoExW",
        "GetFileVersionInfoSizeExW",
        "VerQueryValueW"
      ]
    },
    {
      "name": "imagehlp.dll",
      "imports": 2,
      "functions": [
        "ImageLoad",
        "ImageUnload"
      ]
    },
    {
      "name": "secur32.dll",
      "imports": 1,
      "functions": [
        "GetUserNameExW"
      ]
    },
    {
      "name": "aclui.dll",
      "imports": 0,
      "functions": []
    },
    {
      "name": "iphlpapi.dll",
      "imports": 1,
      "functions": [
        "ParseNetworkString"
      ]
    },
    {
      "name": "slc.dll",
      "imports": 1,
      "functions": [
        "SLGetWindowsInformationDWORD"
      ]
    },
    {
      "name": "logoncli.dll",
      "imports": 1,
      "functions": [
        "DsGetDcNameW"
      ]
    },
    {
      "name": "activeds.dll",
      "imports": 0,
      "functions": []
    }
  ],
  "ImageDLLExports": {
    "exports": 5,
    "functions": [
      "DllCanUnloadNow",
      "DllGetClassObject",
      "DllInstall",
      "DllRegisterServer",
      "DllUnregisterServer"
    ]
  },
  "ImageHashSignatures": {
    "sha2": "96d0df9d278f2b158423e000dc7276ff45a709df7e8364d0d7056a0f84b28755"
  },
  "scan": {
    "intentions": 10,
    "uniq_apis_matched": 26,
    "results": [
      {
        "intent": "Inject DLLs into Processes to evade defenses",
        "tag": "Defense Evasion:T1055 - Dynamic-Link Library Injection",
        "component": "Processes",
        "inputs": 4,
        "matches": 1,
        "apis": [
          "VirtualAlloc"
        ]
      },
      {
        "intent": "Manipulate Windows Tokens",
        "tag": "Defense Evasion:T1134 - Access Token Manipulation",
        "component": "Privileges",
        "inputs": 10,
        "matches": 2,
        "apis": [
          "CheckTokenMembership",
          "OpenProcessToken"
        ]
      },
      {
        "intent": "Implements Features To Create/Manipulate The Windows Registry",
        "tag": "Expert Input:IBO.0008 - Create/Manipulate The Windows Registry",
        "component": "Registry",
        "inputs": 33,
        "matches": 7,
        "apis": [
          "RegCreateKeyExW",
          "RegDeleteKeyW",
          "RegDeleteValueW",
          "RegOpenKeyExA",
          "RegOpenKeyExW",
          "RegSetValueExA",
          "RegSetValueExW"
        ]
      },
      {
        "intent": "Obtain information through the Clipboard Buffers From Desktop Environment",
        "tag": "Collection:T1115 - Clipboard Data",
        "component": "---",
        "inputs": 4,
        "matches": 1,
        "apis": [
          "OpenClipboard"
        ]
      },
      {
        "intent": "Discover Configuration Attributes/Descriptions of the Windows Enterprise Domain",
        "tag": "Reconnaissance:T1590.001 - Domain Properties (Windows Enterprise)",
        "component": "---",
        "inputs": 24,
        "matches": 3,
        "apis": [
          "DsGetDcNameW",
          "DsRoleGetPrimaryDomainInformation",
          "NetServerGetInfo"
        ]
      },
      {
        "intent": "Implements Features To Enumerate/Discover System Services And Their Configuration Data",
        "tag": "Expert Input:IBO.0006 - Enumerate System Services",
        "component": "Services",
        "inputs": 28,
        "matches": 2,
        "apis": [
          "GetServiceDisplayNameW",
          "OpenSCManagerW"
        ]
      },
      {
        "intent": "Query And Discover Windows Registry Configuration Settings",
        "tag": "Discovery:T1012 - Query Registry",
        "component": "Registry",
        "inputs": 11,
        "matches": 2,
        "apis": [
          "RegQueryValueExA",
          "RegQueryValueExW"
        ]
      },
      {
        "intent": "Discover and Manipulate the Windows `SAFER Security Level` To Coerce Global Application Execution",
        "tag": "Persistence:T1546.009 - AppCert DLLs",
        "component": "---",
        "inputs": 8,
        "matches": 6,
        "apis": [
          "SaferCloseLevel",
          "SaferCreateLevel",
          "SaferGetLevelInformation",
          "SaferGetPolicyInformation",
          "SaferSetLevelInformation",
          "SaferSetPolicyInformation"
        ]
      },
      {
        "intent": "Implements Features To Create/Manipulate System Services",
        "tag": "Expert Input:IBO.0007 - Create/Manipulate System Services",
        "component": "Services",
        "inputs": 19,
        "matches": 1,
        "apis": [
          "CloseServiceHandle"
        ]
      },
      {
        "intent": "Implements Features To Enumerate The Windows Registry",
        "tag": "Expert Input:IBO.0009 - Enumerate The Windows Registry",
        "component": "Registry",
        "inputs": 6,
        "matches": 1,
        "apis": [
          "RegEnumKeyExW"
        ]
      }
    ]
  }
}