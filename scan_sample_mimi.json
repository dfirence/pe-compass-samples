{
  "pe_name": "mimikatz.exe",
  "pe_type": 523,
  "pe_size": 1355680,
  "pe_subsystem": 3,
  "pe_subsystem_caption": "The Windows character (Cosole UI) subsystem",
  "pe_path": "pe-samples/mimikatz.exe",
  "pe_timedate_stamp": 1628608813,
  "pe_timedate_human": "2021-08-10T15:20:13.000Z",
  "ImageDLLImports": [
    {
      "name": "advapi32.dll",
      "imports": 96,
      "functions": [
        "AllocateAndInitializeSid",
        "BuildSecurityDescriptorW",
        "CheckTokenMembership",
        "ClearEventLogW",
        "CloseServiceHandle",
        "ControlService",
        "ConvertSidToStringSidW",
        "ConvertStringSecurityDescriptorToSecurityDescriptorW",
        "ConvertStringSidToSidW",
        "CopySid",
        "CreateProcessAsUserW",
        "CreateProcessWithLogonW",
        "CreateServiceW",
        "CreateWellKnownSid",
        "CredEnumerateW",
        "CredFree",
        "CredIsMarshaledCredentialW",
        "CredUnmarshalCredentialW",
        "CryptAcquireContextA",
        "CryptAcquireContextW",
        "CryptCreateHash",
        "CryptDecrypt",
        "CryptDeriveKey",
        "CryptDestroyHash",
        "CryptDestroyKey",
        "CryptDuplicateKey",
        "CryptEncrypt",
        "CryptEnumProviderTypesW",
        "CryptEnumProvidersW",
        "CryptExportKey",
        "CryptGenKey",
        "CryptGetHashParam",
        "CryptGetKeyParam",
        "CryptGetProvParam",
        "CryptGetUserKey",
        "CryptHashData",
        "CryptImportKey",
        "CryptReleaseContext",
        "CryptSetHashParam",
        "CryptSetKeyParam",
        "CryptSetProvParam",
        "CryptSignHashW",
        "DeleteService",
        "DuplicateTokenEx",
        "EqualSid",
        "FreeSid",
        "GetLengthSid",
        "GetNumberOfEventLogRecords",
        "GetSidSubAuthority",
        "GetSidSubAuthorityCount",
        "GetTokenInformation",
        "IsTextUnicode",
        "IsValidSid",
        "LookupAccountNameW",
        "LookupAccountSidW",
        "LookupPrivilegeNameW",
        "LookupPrivilegeValueW",
        "LsaClose",
        "LsaEnumerateTrustedDomainsEx",
        "LsaFreeMemory",
        "LsaOpenPolicy",
        "LsaOpenSecret",
        "LsaQueryInformationPolicy",
        "LsaQuerySecret",
        "LsaQueryTrustedDomainInfoByName",
        "LsaRetrievePrivateData",
        "LsaSetSecret",
        "OpenEventLogW",
        "OpenProcessToken",
        "OpenSCManagerW",
        "OpenServiceW",
        "OpenThreadToken",
        "QueryServiceObjectSecurity",
        "QueryServiceStatusEx",
        "RegCloseKey",
        "RegEnumKeyExW",
        "RegEnumValueW",
        "RegOpenKeyExW",
        "RegQueryInfoKeyW",
        "RegQueryValueExW",
        "RegSetValueExW",
        "RegisterServiceCtrlHandlerW",
        "SetServiceObjectSecurity",
        "SetServiceStatus",
        "SetThreadToken",
        "StartServiceCtrlDispatcherW",
        "StartServiceW",
        "SystemFunction001",
        "SystemFunction005",
        "SystemFunction006",
        "SystemFunction007",
        "SystemFunction023",
        "SystemFunction026",
        "SystemFunction027",
        "SystemFunction032",
        "SystemFunction033"
      ]
    },
    {
      "name": "cabinet.dll",
      "imports": 0,
      "functions": []
    },
    {
      "name": "crypt32.dll",
      "imports": 26,
      "functions": [
        "CertAddCertificateContextToStore",
        "CertAddEncodedCertificateToStore",
        "CertCloseStore",
        "CertEnumCertificatesInStore",
        "CertEnumSystemStore",
        "CertFindCertificateInStore",
        "CertFreeCertificateContext",
        "CertGetCertificateContextProperty",
        "CertGetNameStringW",
        "CertNameToStrW",
        "CertOpenStore",
        "CertSetCertificateContextProperty",
        "CryptAcquireCertificatePrivateKey",
        "CryptBinaryToStringA",
        "CryptBinaryToStringW",
        "CryptDecodeObjectEx",
        "CryptEncodeObject",
        "CryptExportPublicKeyInfo",
        "CryptFindOIDInfo",
        "CryptProtectData",
        "CryptQueryObject",
        "CryptSignAndEncodeCertificate",
        "CryptStringToBinaryA",
        "CryptStringToBinaryW",
        "CryptUnprotectData",
        "PFXExportCertStoreEx"
      ]
    },
    {
      "name": "cryptdll.dll",
      "imports": 6,
      "functions": [
        "CDGenerateRandomBits",
        "CDLocateCSystem",
        "CDLocateCheckSum",
        "MD5Final",
        "MD5Init",
        "MD5Update"
      ]
    },
    {
      "name": "dnsapi.dll",
      "imports": 2,
      "functions": [
        "DnsFree",
        "DnsQuery_A"
      ]
    },
    {
      "name": "fltlib.dll",
      "imports": 2,
      "functions": [
        "FilterFindFirst",
        "FilterFindNext"
      ]
    },
    {
      "name": "mpr.dll",
      "imports": 2,
      "functions": [
        "WNetAddConnection2W",
        "WNetCancelConnection2W"
      ]
    },
    {
      "name": "netapi32.dll",
      "imports": 9,
      "functions": [
        "DsEnumerateDomainTrustsW",
        "DsGetDcNameW",
        "NetApiBufferFree",
        "NetRemoteTOD",
        "NetServerGetInfo",
        "NetSessionEnum",
        "NetShareEnum",
        "NetStatisticsGet",
        "NetWkstaUserEnum"
      ]
    },
    {
      "name": "odbc32.dll",
      "imports": 0,
      "functions": []
    },
    {
      "name": "ole32.dll",
      "imports": 5,
      "functions": [
        "CoCreateInstance",
        "CoInitializeEx",
        "CoSetProxyBlanket",
        "CoTaskMemFree",
        "CoUninitialize"
      ]
    },
    {
      "name": "oleaut32.dll",
      "imports": 0,
      "functions": []
    },
    {
      "name": "rpcrt4.dll",
      "imports": 41,
      "functions": [
        "I_RpcBindingInqSecurityContext",
        "I_RpcGetCurrentCallHandle",
        "MesDecodeIncrementalHandleCreate",
        "MesEncodeIncrementalHandleCreate",
        "MesHandleFree",
        "MesIncrementalHandleReset",
        "NdrClientCall2",
        "NdrMesTypeAlignSize2",
        "NdrMesTypeDecode2",
        "NdrMesTypeEncode2",
        "NdrMesTypeFree2",
        "NdrServerCall2",
        "RpcBindingFree",
        "RpcBindingFromStringBindingW",
        "RpcBindingInqAuthClientW",
        "RpcBindingSetAuthInfoExW",
        "RpcBindingSetAuthInfoW",
        "RpcBindingSetObject",
        "RpcBindingSetOption",
        "RpcBindingToStringBindingW",
        "RpcBindingVectorFree",
        "RpcEpRegisterW",
        "RpcEpResolveBinding",
        "RpcEpUnregister",
        "RpcImpersonateClient",
        "RpcMgmtEpEltInqBegin",
        "RpcMgmtEpEltInqDone",
        "RpcMgmtEpEltInqNextW",
        "RpcMgmtStopServerListening",
        "RpcMgmtWaitServerListen",
        "RpcRevertToSelf",
        "RpcServerInqBindings",
        "RpcServerListen",
        "RpcServerRegisterAuthInfoW",
        "RpcServerRegisterIf2",
        "RpcServerUnregisterIfEx",
        "RpcServerUseProtseqEpW",
        "RpcStringBindingComposeW",
        "RpcStringFreeW",
        "UuidCreate",
        "UuidToStringW"
      ]
    },
    {
      "name": "shlwapi.dll",
      "imports": 5,
      "functions": [
        "PathCanonicalizeW",
        "PathCombineW",
        "PathFindFileNameW",
        "PathIsDirectoryW",
        "PathIsRelativeW"
      ]
    },
    {
      "name": "samlib.dll",
      "imports": 22,
      "functions": [
        "SamCloseHandle",
        "SamConnect",
        "SamEnumerateAliasesInDomain",
        "SamEnumerateDomainsInSamServer",
        "SamEnumerateGroupsInDomain",
        "SamEnumerateUsersInDomain",
        "SamFreeMemory",
        "SamGetAliasMembership",
        "SamGetGroupsForUser",
        "SamGetMembersInAlias",
        "SamGetMembersInGroup",
        "SamLookupDomainInSamServer",
        "SamLookupIdsInDomain",
        "SamLookupNamesInDomain",
        "SamOpenAlias",
        "SamOpenDomain",
        "SamOpenGroup",
        "SamOpenUser",
        "SamQueryInformationUser",
        "SamRidToSid",
        "SamSetInformationUser",
        "SamiChangePasswordUser"
      ]
    },
    {
      "name": "secur32.dll",
      "imports": 12,
      "functions": [
        "AcquireCredentialsHandleW",
        "DeleteSecurityContext",
        "EnumerateSecurityPackagesW",
        "FreeContextBuffer",
        "FreeCredentialsHandle",
        "InitializeSecurityContextW",
        "LsaCallAuthenticationPackage",
        "LsaConnectUntrusted",
        "LsaDeregisterLogonProcess",
        "LsaFreeReturnBuffer",
        "LsaLookupAuthenticationPackage",
        "QueryContextAttributesW"
      ]
    },
    {
      "name": "shell32.dll",
      "imports": 1,
      "functions": [
        "CommandLineToArgvW"
      ]
    },
    {
      "name": "user32.dll",
      "imports": 19,
      "functions": [
        "ChangeClipboardChain",
        "CloseClipboard",
        "CreateWindowExW",
        "DefWindowProcW",
        "DestroyWindow",
        "DispatchMessageW",
        "EnumClipboardFormats",
        "GetClipboardData",
        "GetClipboardSequenceNumber",
        "GetKeyboardLayout",
        "GetMessageW",
        "IsCharAlphaNumericW",
        "OpenClipboard",
        "PostMessageW",
        "RegisterClassExW",
        "SendMessageW",
        "SetClipboardViewer",
        "TranslateMessage",
        "UnregisterClassW"
      ]
    },
    {
      "name": "userenv.dll",
      "imports": 2,
      "functions": [
        "CreateEnvironmentBlock",
        "DestroyEnvironmentBlock"
      ]
    },
    {
      "name": "version.dll",
      "imports": 3,
      "functions": [
        "GetFileVersionInfoSizeW",
        "GetFileVersionInfoW",
        "VerQueryValueW"
      ]
    },
    {
      "name": "hid.dll",
      "imports": 7,
      "functions": [
        "HidD_FreePreparsedData",
        "HidD_GetAttributes",
        "HidD_GetFeature",
        "HidD_GetHidGuid",
        "HidD_GetPreparsedData",
        "HidD_SetFeature",
        "HidP_GetCaps"
      ]
    },
    {
      "name": "setupapi.dll",
      "imports": 4,
      "functions": [
        "SetupDiDestroyDeviceInfoList",
        "SetupDiEnumDeviceInterfaces",
        "SetupDiGetClassDevsW",
        "SetupDiGetDeviceInterfaceDetailW"
      ]
    },
    {
      "name": "winscard.dll",
      "imports": 11,
      "functions": [
        "SCardConnectW",
        "SCardControl",
        "SCardDisconnect",
        "SCardEstablishContext",
        "SCardFreeMemory",
        "SCardGetAttrib",
        "SCardGetCardTypeProviderNameW",
        "SCardListCardsW",
        "SCardListReadersW",
        "SCardReleaseContext",
        "SCardTransmit"
      ]
    },
    {
      "name": "winsta.dll",
      "imports": 6,
      "functions": [
        "WinStationCloseServer",
        "WinStationConnectW",
        "WinStationEnumerateW",
        "WinStationFreeMemory",
        "WinStationOpenServerW",
        "WinStationQueryInformationW"
      ]
    },
    {
      "name": "wldap32.dll",
      "imports": 0,
      "functions": []
    },
    {
      "name": "advapi32.dll",
      "imports": 3,
      "functions": [
        "A_SHAFinal",
        "A_SHAInit",
        "A_SHAUpdate"
      ]
    },
    {
      "name": "msasn1.dll",
      "imports": 8,
      "functions": [
        "ASN1BERDotVal2Eoid",
        "ASN1_CloseDecoder",
        "ASN1_CloseEncoder",
        "ASN1_CloseModule",
        "ASN1_CreateDecoder",
        "ASN1_CreateEncoder",
        "ASN1_CreateModule",
        "ASN1_FreeEncoded"
      ]
    },
    {
      "name": "ntdll.dll",
      "imports": 58,
      "functions": [
        "NtCompareTokens",
        "NtEnumerateSystemEnvironmentValuesEx",
        "NtOpenDirectoryObject",
        "NtQueryDirectoryObject",
        "NtQueryInformationProcess",
        "NtQueryObject",
        "NtQuerySystemEnvironmentValueEx",
        "NtQuerySystemInformation",
        "NtResumeProcess",
        "NtSetSystemEnvironmentValueEx",
        "NtSuspendProcess",
        "NtTerminateProcess",
        "RtlAdjustPrivilege",
        "RtlAnsiStringToUnicodeString",
        "RtlAppendUnicodeStringToString",
        "RtlCompressBuffer",
        "RtlCreateUserThread",
        "RtlDowncaseUnicodeString",
        "RtlEqualString",
        "RtlEqualUnicodeString",
        "RtlFreeAnsiString",
        "RtlFreeOemString",
        "RtlFreeUnicodeString",
        "RtlGUIDFromString",
        "RtlGetCompressionWorkSpaceSize",
        "RtlGetCurrentPeb",
        "RtlGetNtVersionNumbers",
        "RtlInitUnicodeString",
        "RtlIpv4AddressToStringW",
        "RtlIpv6AddressToStringW",
        "RtlStringFromGUID",
        "RtlUnicodeStringToAnsiString",
        "RtlUpcaseUnicodeString",
        "RtlUpcaseUnicodeStringToOemString",
        "__chkstk",
        "_strcmpi",
        "_stricmp",
        "_vscwprintf",
        "_vsnprintf",
        "_wcsicmp",
        "_wcsnicmp",
        "_wcstoui64",
        "log",
        "memcmp",
        "memmove",
        "strchr",
        "strcspn",
        "strncmp",
        "strrchr",
        "strstr",
        "strtoul",
        "towupper",
        "wcschr",
        "wcsncmp",
        "wcsrchr",
        "wcsstr",
        "wcstol",
        "wcstoul"
      ]
    },
    {
      "name": "netapi32.dll",
      "imports": 3,
      "functions": [
        "I_NetServerAuthenticate2",
        "I_NetServerReqChallenge",
        "I_NetServerTrustPasswordsGet"
      ]
    },
    {
      "name": "kernel32.dll",
      "imports": 141,
      "functions": [
        "AreFileApisANSI",
        "ClearCommError",
        "CloseHandle",
        "CreateEventW",
        "CreateFileA",
        "CreateFileMappingA",
        "CreateFileMappingW",
        "CreateFileW",
        "CreateMutexW",
        "CreatePipe",
        "CreateProcessW",
        "CreateRemoteThread",
        "CreateThread",
        "DeleteCriticalSection",
        "DeleteFileA",
        "DeleteFileW",
        "DeviceIoControl",
        "DuplicateHandle",
        "EnterCriticalSection",
        "ExitProcess",
        "ExitThread",
        "ExpandEnvironmentStringsW",
        "FileTimeToDosDateTime",
        "FileTimeToLocalFileTime",
        "FileTimeToSystemTime",
        "FillConsoleOutputCharacterW",
        "FindClose",
        "FindFirstFileW",
        "FindNextFileW",
        "FlushFileBuffers",
        "FlushViewOfFile",
        "FormatMessageA",
        "FormatMessageW",
        "FreeLibrary",
        "GetComputerNameExW",
        "GetComputerNameW",
        "GetConsoleOutputCP",
        "GetConsoleScreenBufferInfo",
        "GetCurrentDirectoryA",
        "GetCurrentDirectoryW",
        "GetCurrentProcess",
        "GetCurrentProcessId",
        "GetCurrentThread",
        "GetCurrentThreadId",
        "GetDateFormatW",
        "GetDiskFreeSpaceA",
        "GetDiskFreeSpaceW",
        "GetFileAttributesA",
        "GetFileAttributesExW",
        "GetFileAttributesW",
        "GetFileInformationByHandle",
        "GetFileSize",
        "GetFileSizeEx",
        "GetFullPathNameA",
        "GetFullPathNameW",
        "GetLastError",
        "GetModuleHandleW",
        "GetProcAddress",
        "GetProcessHeap",
        "GetProcessId",
        "GetStdHandle",
        "GetSystemDirectoryW",
        "GetSystemInfo",
        "GetSystemTime",
        "GetSystemTimeAsFileTime",
        "GetTempFileNameA",
        "GetTempPathA",
        "GetTempPathW",
        "GetTickCount",
        "GetTimeFormatW",
        "GetTimeZoneInformation",
        "GetVersionExA",
        "GetVersionExW",
        "GlobalSize",
        "HeapAlloc",
        "HeapCompact",
        "HeapCreate",
        "HeapDestroy",
        "HeapFree",
        "HeapReAlloc",
        "HeapSize",
        "HeapValidate",
        "InitializeCriticalSection",
        "IsWow64Process",
        "LeaveCriticalSection",
        "LoadLibraryA",
        "LoadLibraryW",
        "LocalAlloc",
        "LocalFree",
        "LockFile",
        "LockFileEx",
        "MapViewOfFile",
        "MultiByteToWideChar",
        "OpenProcess",
        "OutputDebugStringA",
        "OutputDebugStringW",
        "ProcessIdToSessionId",
        "PurgeComm",
        "QueryPerformanceCounter",
        "RaiseException",
        "ReadFile",
        "ReadProcessMemory",
        "RtlCaptureContext",
        "RtlLookupFunctionEntry",
        "RtlVirtualUnwind",
        "SetConsoleCtrlHandler",
        "SetConsoleCursorPosition",
        "SetConsoleOutputCP",
        "SetConsoleTitleW",
        "SetCurrentDirectoryW",
        "SetEndOfFile",
        "SetEvent",
        "SetFileAttributesW",
        "SetFilePointer",
        "SetFilePointerEx",
        "SetHandleInformation",
        "SetLastError",
        "SetUnhandledExceptionFilter",
        "Sleep",
        "SystemTimeToFileTime",
        "TerminateProcess",
        "TerminateThread",
        "UnhandledExceptionFilter",
        "UnlockFile",
        "UnlockFileEx",
        "UnmapViewOfFile",
        "VirtualAlloc",
        "VirtualAllocEx",
        "VirtualFree",
        "VirtualFreeEx",
        "VirtualProtect",
        "VirtualProtectEx",
        "VirtualQuery",
        "VirtualQueryEx",
        "WaitForSingleObject",
        "WaitForSingleObjectEx",
        "WideCharToMultiByte",
        "WriteFile",
        "WriteProcessMemory",
        "lstrlenA",
        "lstrlenW"
      ]
    },
    {
      "name": "msvcrt.dll",
      "imports": 55,
      "functions": [
        "?terminate@@YAXXZ",
        "_XcptFilter",
        "__C_specific_handler",
        "__badioinfo",
        "__mb_cur_max",
        "__pioinfo",
        "__set_app_type",
        "__setusermatherr",
        "__wgetmainargs",
        "_amsg_exit",
        "_cexit",
        "_commode",
        "_errno",
        "_exit",
        "_fileno",
        "_fmode",
        "_initterm",
        "_iob",
        "_isatty",
        "_itoa",
        "_lseeki64",
        "_msize",
        "_read",
        "_setmode",
        "_snprintf",
        "_vscprintf",
        "_wcsdup",
        "_wfopen",
        "_wpgmptr",
        "_write",
        "calloc",
        "exit",
        "fclose",
        "ferror",
        "fflush",
        "fgetws",
        "free",
        "getchar",
        "isdigit",
        "isleadbyte",
        "isspace",
        "iswctype",
        "isxdigit",
        "localeconv",
        "malloc",
        "mbtowc",
        "memcpy",
        "memset",
        "realloc",
        "ungetc",
        "vfwprintf",
        "vwprintf",
        "wcstombs",
        "wctomb",
        "wprintf"
      ]
    }
  ],
  "ImageDLLExports": {
    "exports": 0,
    "functions": []
  },
  "ImageHashSignatures": {
    "sha2": "912018ab3c6b16b39ee84f17745ff0c80a33cee241013ec35d0281e40c0658d9"
  },
  "scan": {
    "intentions": 12,
    "uniq_apis_matched": 25,
    "results": [
      {
        "intent": "Clear Windows Event Log Entries/Files",
        "tag": "Defense Evasion/T1070.001",
        "matches": 1,
        "apis": [
          "ClearEventlogW"
        ]
      },
      {
        "intent": "Discover Configuration Attributes/Descriptions of the Windows Enterprise Domain",
        "tag": "Reconnaissance/T1590.001 - Domain Properties (Windows Enterprise)",
        "matches": 2,
        "apis": [
          "DsGetDcNameW",
          "NetServerGetInfo"
        ]
      },
      {
        "intent": "Manipulate Windows Tokens",
        "tag": "Defense Evasion/T1134 - Access Token Manipulation",
        "matches": 4,
        "apis": [
          "CheckTokenMembership",
          "NtCompareTokens",
          "OpenProcessToken",
          "OpenThreadToken"
        ]
      },
      {
        "intent": "Enumerate Credentials From Web Browser Applications Stored In Local Databases",
        "tag": "Credential Access/T1555.004 - Windows Credential Manager",
        "matches": 1,
        "apis": [
          "CredEnumerateW"
        ]
      },
      {
        "intent": "Obtain information through the Clipboard Buffers From Desktop Environment",
        "tag": "Collection/T1115 - Clipboard Data",
        "matches": 4,
        "apis": [
          "EnumClipboardFormats",
          "GetClipboardData",
          "GetClipboardSequenceNumber",
          "OpenClipboard"
        ]
      },
      {
        "intent": "Enumerate Active Sessions With Usernames On The Target System",
        "tag": "Discovery/T1087 - Account Discovery (Windows)",
        "matches": 2,
        "apis": [
          "NetSessionEnum",
          "NetWkstaUserEnum"
        ]
      },
      {
        "intent": "Create Token To Impersonate",
        "tag": "Privilege Escalation/T1134.003 - Make and Impersonate Token",
        "matches": 1,
        "apis": [
          "SetThreadToken"
        ]
      },
      {
        "intent": "Execute Application with Token Of Another Identity",
        "tag": "Privilege Escalation/T1134.002 - Create Process With Token",
        "matches": 1,
        "apis": [
          "CreateProcessWithLogonW"
        ]
      },
      {
        "intent": "Enumerate Available Network Shares",
        "tag": "Discovery/T1135 - Network Share Discovery",
        "matches": 1,
        "apis": [
          "NetShareEnum"
        ]
      },
      {
        "intent": "Delete Files From Disk Potentially Erasing Important Evidence To Cover Attack Activity",
        "tag": "Defense Evasion/T1070.004",
        "matches": 2,
        "apis": [
          "DeleteFileA",
          "DeleteFileW"
        ]
      },
      {
        "intent": "Enumerate Available Windows Domain Trusts",
        "tag": "Discovery/T1482 - Domain Trust Discovery",
        "matches": 2,
        "apis": [
          "DsEnumerateDomainTrustsW",
          "LsaEnumerateTrustedDomainsEx"
        ]
      },
      {
        "intent": "Inject DLLs into Processes to evade defenses",
        "tag": "Defense Evasion/T1055 - Dynamic-Link Library Injection",
        "matches": 4,
        "apis": [
          "CreateRemoteThread",
          "VirtualAlloc",
          "VirtualAllocEx",
          "WriteProcessMemory"
        ]
      }
    ]
  }
}