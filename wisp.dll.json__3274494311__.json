{
  "pe_name": "wisp.dll",
  "pe_type": 267,
  "pe_size": 225280,
  "pe_subsystem": 3,
  "pe_subsystem_caption": "The Windows character (Cosole UI) subsystem",
  "pe_path": "c:\\Windows\\SysWOW64\\wisp.dll",
  "pe_timedate_stamp": 192938200,
  "pe_timedate_human": "1976-02-12T01:56:40.000Z",
  "ImageDLLImports": [
    {
      "name": "msvcrt.dll",
      "imports": 42,
      "functions": [
        "??0exception@@QAE@ABQBD@Z",
        "??0exception@@QAE@ABQBDH@Z",
        "??0exception@@QAE@ABV0@@Z",
        "??1exception@@UAE@XZ",
        "??1type_info@@UAE@XZ",
        "??3@YAXPAX@Z",
        "??_V@YAXPAX@Z",
        "?terminate@@YAXXZ",
        "?what@exception@@UBEPBDXZ",
        "_CIatan2",
        "_CIfmod",
        "_CIpow",
        "_CIsqrt",
        "_CxxThrowException",
        "_XcptFilter",
        "__CxxFrameHandler3",
        "__dllonexit",
        "_amsg_exit",
        "_beginthreadex",
        "_callnewh",
        "_errno",
        "_except_handler4_common",
        "_ftol2",
        "_ftol2_sse",
        "_initterm",
        "_lock",
        "_onexit",
        "_purecall",
        "_unlock",
        "_vsnwprintf",
        "free",
        "malloc",
        "memcpy",
        "memcpy_s",
        "memmove",
        "memset",
        "rand",
        "realloc",
        "swprintf_s",
        "wcschr",
        "wcsncpy_s",
        "wcsrchr"
      ]
    },
    {
      "name": "ntdll.dll",
      "imports": 17,
      "functions": [
        "EtwEventRegister",
        "EtwEventSetInformation",
        "EtwEventUnregister",
        "EtwEventWriteTransfer",
        "EtwGetTraceEnableFlags",
        "EtwGetTraceEnableLevel",
        "EtwGetTraceLoggerHandle",
        "EtwRegisterTraceGuidsW",
        "EtwTraceMessage",
        "EtwUnregisterTraceGuids",
        "NtQueryInformationToken",
        "RtlAllocateHeap",
        "RtlCompareUnicodeString",
        "RtlFreeHeap",
        "RtlInitUnicodeString",
        "RtlNtStatusToDosErrorNoTeb",
        "ZwUpdateWnfStateData"
      ]
    },
    {
      "name": "user32.dll",
      "imports": 55,
      "functions": [
        "CallWindowProcW",
        "CharNextW",
        "ChildWindowFromPointEx",
        "ClientToScreen",
        "CreateWindowExW",
        "DefWindowProcW",
        "DestroyWindow",
        "DispatchMessageW",
        "EnumDisplaySettingsExW",
        "EqualRect",
        "GetAncestor",
        "GetClassInfoExW",
        "GetClientRect",
        "GetCurrentInputMessageSource",
        "GetCursorPos",
        "GetDC",
        "GetDesktopWindow",
        "GetMessageExtraInfo",
        "GetMonitorInfoW",
        "GetPointerCursorId",
        "GetPointerDevice",
        "GetPointerDeviceCursors",
        "GetPointerDeviceProperties",
        "GetPointerDeviceRects",
        "GetPointerDevices",
        "GetPointerInfo",
        "GetPointerInfoHistory",
        "GetPointerPenInfo",
        "GetPropW",
        "GetRawInputDeviceInfoW",
        "GetRawPointerDeviceData",
        "GetWindowLongW",
        "InflateRect",
        "IsChild",
        "IsWindow",
        "LoadCursorW",
        "MapWindowPoints",
        "MonitorFromWindow",
        "MsgWaitForMultipleObjectsEx",
        "PeekMessageW",
        "PostMessageW",
        "PostThreadMessageW",
        "PtInRect",
        "RegisterClassExW",
        "RegisterPointerDeviceNotifications",
        "ReleaseDC",
        "ScreenToClient",
        "SendMessageCallbackW",
        "SendNotifyMessageW",
        "SetRectEmpty",
        "SetWindowFeedbackSetting",
        "SetWindowLongW",
        "SystemParametersInfoW",
        "UnregisterClassA",
        "WindowFromPoint"
      ]
    },
    {
      "name": "kernel32.dll",
      "imports": 80,
      "functions": [
        "AcquireSRWLockExclusive",
        "CloseHandle",
        "CreateEventW",
        "CreateFileMappingW",
        "CreateMutexExW",
        "CreateMutexW",
        "CreateSemaphoreExW",
        "DebugBreak",
        "DecodePointer",
        "DelayLoadFailureHook",
        "DeleteCriticalSection",
        "DisableThreadLibraryCalls",
        "DuplicateHandle",
        "EncodePointer",
        "EnterCriticalSection",
        "FindResourceExW",
        "FlushInstructionCache",
        "FormatMessageW",
        "FreeLibrary",
        "GetCurrentProcess",
        "GetCurrentProcessId",
        "GetCurrentThread",
        "GetCurrentThreadId",
        "GetLastError",
        "GetModuleFileNameA",
        "GetModuleFileNameW",
        "GetModuleHandleExW",
        "GetModuleHandleW",
        "GetProcAddress",
        "GetProcessHeap",
        "GetSystemTimeAsFileTime",
        "GetTickCount",
        "GetTickCount64",
        "GlobalAddAtomW",
        "GlobalDeleteAtom",
        "HeapAlloc",
        "HeapFree",
        "InitializeCriticalSection",
        "InitializeCriticalSectionAndSpinCount",
        "InterlockedPopEntrySList",
        "InterlockedPushEntrySList",
        "IsDebuggerPresent",
        "IsProcessorFeaturePresent",
        "LeaveCriticalSection",
        "LoadLibraryExA",
        "LoadLibraryExW",
        "LoadResource",
        "LocalFree",
        "MapViewOfFile",
        "MulDiv",
        "MultiByteToWideChar",
        "OpenProcess",
        "OpenSemaphoreW",
        "OutputDebugStringA",
        "OutputDebugStringW",
        "QueryPerformanceCounter",
        "RaiseException",
        "ReleaseMutex",
        "ReleaseSRWLockExclusive",
        "ReleaseSemaphore",
        "ResetEvent",
        "ResolveDelayLoadedAPI",
        "SetEvent",
        "SetLastError",
        "SetThreadDescription",
        "SetThreadPriority",
        "SetUnhandledExceptionFilter",
        "SizeofResource",
        "Sleep",
        "SleepConditionVariableSRW",
        "TerminateProcess",
        "UnhandledExceptionFilter",
        "UnmapViewOfFile",
        "VirtualAlloc",
        "VirtualFree",
        "WaitForMultipleObjectsEx",
        "WaitForSingleObject",
        "WaitForSingleObjectEx",
        "WakeAllConditionVariable",
        "lstrcmpiW"
      ]
    }
  ],
  "ImageDLLExports": {
    "exports": 4,
    "functions": [
      "DllCanUnloadNow",
      "DllGetClassObject",
      "DllRegisterServer",
      "DllUnregisterServer"
    ]
  },
  "ImageHashSignatures": {
    "sha2": "05d076251f163459553d0608fe84e9c0256c850ea96479b55883436f9945fe46"
  },
  "scan": {
    "intentions": 2,
    "uniq_apis_matched": 3,
    "results": [
      {
        "intent": "Implements Delayed Loads of DLL Resources",
        "tag": "Expert Input:IBO.0005 - Load DLL Resources With Delay During Runtime",
        "component": "---",
        "inputs": 2,
        "matches": 2,
        "apis": [
          "DelayLoadFailureHook",
          "ResolveDelayLoadedAPI"
        ]
      },
      {
        "intent": "Inject DLLs into Processes to evade defenses",
        "tag": "Defense Evasion:T1055 - Dynamic-Link Library Injection",
        "component": "Processes",
        "inputs": 4,
        "matches": 1,
        "apis": [
          "VirtualAlloc"
        ]
      }
    ]
  }
}