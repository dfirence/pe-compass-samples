{
  "pe_name": "azroleui.dll",
  "pe_type": 523,
  "pe_size": 447488,
  "pe_subsystem": 2,
  "pe_subsystem_caption": "The Windows graphical user interface (GUI) subsystem",
  "pe_path": "c:\\Windows\\WinSxS\\amd64_microsoft-windows-authorizationmanagerui_31bf3856ad364e35_10.0.19041.746_none_ffd341695e74bdfb\\azroleui.dll",
  "pe_timedate_stamp": 3733947893,
  "pe_timedate_human": "2088-04-27T23:44:53.000Z",
  "ImageDLLImports": [
    {
      "name": "mfc42u.dll",
      "imports": 0,
      "functions": []
    },
    {
      "name": "msvcrt.dll",
      "imports": 37,
      "functions": [
        "??0exception@@QEAA@AEBQEBD@Z",
        "??0exception@@QEAA@AEBQEBDH@Z",
        "??0exception@@QEAA@AEBV0@@Z",
        "??1exception@@UEAA@XZ",
        "??1type_info@@UEAA@XZ",
        "??_V@YAXPEAX@Z",
        "?terminate@@YAXXZ",
        "?what@exception@@UEBAPEBDXZ",
        "_CxxThrowException",
        "_XcptFilter",
        "__C_specific_handler",
        "__CxxFrameHandler3",
        "__RTDynamicCast",
        "__dllonexit",
        "_amsg_exit",
        "_initterm",
        "_itow",
        "_lock",
        "_ltow",
        "_onexit",
        "_purecall",
        "_unlock",
        "_wcsicmp",
        "_wcsicoll",
        "_wcsnicmp",
        "_wtoi64",
        "_wtol",
        "free",
        "iswdigit",
        "iswprint",
        "malloc",
        "memcpy",
        "memmove",
        "memset",
        "realloc",
        "wcscmp",
        "wcstoul"
      ]
    },
    {
      "name": "atl.dll",
      "imports": 0,
      "functions": []
    },
    {
      "name": "ntdll.dll",
      "imports": 5,
      "functions": [
        "RtlCaptureContext",
        "RtlCreateUnicodeString",
        "RtlFreeUnicodeString",
        "RtlLookupFunctionEntry",
        "RtlVirtualUnwind"
      ]
    },
    {
      "name": "kernel32.dll",
      "imports": 66,
      "functions": [
        "AcquireSRWLockExclusive",
        "ActivateActCtx",
        "CloseHandle",
        "CompareStringW",
        "CreateActCtxW",
        "CreateEventW",
        "DeactivateActCtx",
        "DecodePointer",
        "DeleteCriticalSection",
        "EncodePointer",
        "EnterCriticalSection",
        "ExpandEnvironmentStringsW",
        "FindActCtxSectionStringW",
        "FindClose",
        "FindFirstFileW",
        "FlushInstructionCache",
        "FormatMessageW",
        "GetCommandLineW",
        "GetCurrentProcess",
        "GetCurrentProcessId",
        "GetCurrentThreadId",
        "GetFullPathNameW",
        "GetLastError",
        "GetModuleFileNameW",
        "GetModuleHandleExW",
        "GetModuleHandleW",
        "GetProcAddress",
        "GetProcessHeap",
        "GetSystemTimeAsFileTime",
        "GetSystemWindowsDirectoryW",
        "GetTickCount",
        "GetVersionExW",
        "GlobalAlloc",
        "GlobalFree",
        "GlobalLock",
        "GlobalSize",
        "GlobalUnlock",
        "HeapAlloc",
        "HeapFree",
        "InitializeCriticalSection",
        "InterlockedPopEntrySList",
        "InterlockedPushEntrySList",
        "LeaveCriticalSection",
        "LoadLibraryExA",
        "LoadLibraryExW",
        "LoadLibraryW",
        "LocalAlloc",
        "LocalFree",
        "MultiByteToWideChar",
        "OutputDebugStringA",
        "QueryActCtxW",
        "QueryPerformanceCounter",
        "ReleaseActCtx",
        "ReleaseSRWLockExclusive",
        "ResetEvent",
        "SetEvent",
        "SetLastError",
        "SetUnhandledExceptionFilter",
        "Sleep",
        "SleepConditionVariableSRW",
        "TerminateProcess",
        "UnhandledExceptionFilter",
        "VirtualAlloc",
        "VirtualFree",
        "WaitForSingleObject",
        "WakeAllConditionVariable"
      ]
    },
    {
      "name": "user32.dll",
      "imports": 50,
      "functions": [
        "CallNextHookEx",
        "CallWindowProcW",
        "ChildWindowFromPointEx",
        "CloseClipboard",
        "CreateWindowExW",
        "DefWindowProcW",
        "DestroyWindow",
        "DispatchMessageW",
        "EnableWindow",
        "EnumWindows",
        "FindWindowExW",
        "GetClientRect",
        "GetClipboardData",
        "GetDlgCtrlID",
        "GetDlgItem",
        "GetFocus",
        "GetParent",
        "GetSubMenu",
        "GetSysColor",
        "GetSysColorBrush",
        "GetWindowLongPtrW",
        "GetWindowLongW",
        "GetWindowTextW",
        "GetWindowThreadProcessId",
        "IsClipboardFormatAvailable",
        "KillTimer",
        "LoadBitmapW",
        "LoadIconW",
        "LoadImageW",
        "LoadMenuW",
        "LoadStringW",
        "MapWindowPoints",
        "MessageBeep",
        "MessageBoxW",
        "MsgWaitForMultipleObjects",
        "OpenClipboard",
        "PeekMessageW",
        "PostMessageW",
        "PostThreadMessageW",
        "RegisterClipboardFormatW",
        "ScreenToClient",
        "SendMessageW",
        "SetFocus",
        "SetForegroundWindow",
        "SetTimer",
        "SetWindowLongPtrW",
        "SetWindowLongW",
        "SetWindowTextW",
        "SetWindowsHookExW",
        "UnhookWindowsHookEx"
      ]
    },
    {
      "name": "oleaut32.dll",
      "imports": 0,
      "functions": []
    },
    {
      "name": "ole32.dll",
      "imports": 9,
      "functions": [
        "CoCreateInstance",
        "CoInitialize",
        "CoTaskMemAlloc",
        "CoTaskMemFree",
        "CoUninitialize",
        "CreateStreamOnHGlobal",
        "ReleaseStgMedium",
        "StringFromCLSID",
        "StringFromGUID2"
      ]
    },
    {
      "name": "advapi32.dll",
      "imports": 15,
      "functions": [
        "ConvertSidToStringSidW",
        "ConvertStringSidToSidW",
        "CopySid",
        "EqualPrefixSid",
        "GetLengthSid",
        "LsaClose",
        "LsaFreeMemory",
        "LsaLookupSids",
        "LsaOpenPolicy",
        "RegCloseKey",
        "RegCreateKeyExW",
        "RegEnumKeyExW",
        "RegOpenKeyExW",
        "RegQueryValueExW",
        "RegSetValueExW"
      ]
    },
    {
      "name": "shlwapi.dll",
      "imports": 4,
      "functions": [
        "PathAddBackslashW",
        "PathFindFileNameW",
        "PathRemoveFileSpecW",
        "PathStripPathW"
      ]
    },
    {
      "name": "secur32.dll",
      "imports": 1,
      "functions": [
        "TranslateNameW"
      ]
    },
    {
      "name": "shell32.dll",
      "imports": 5,
      "functions": [
        "CommandLineToArgvW",
        "SHBrowseForFolderW",
        "SHGetFolderLocation",
        "SHGetMalloc",
        "SHGetPathFromIDListW"
      ]
    },
    {
      "name": "netutils.dll",
      "imports": 1,
      "functions": [
        "NetApiBufferFree"
      ]
    },
    {
      "name": "dsrole.dll",
      "imports": 2,
      "functions": [
        "DsRoleFreeMemory",
        "DsRoleGetPrimaryDomainInformation"
      ]
    },
    {
      "name": "logoncli.dll",
      "imports": 1,
      "functions": [
        "DsGetDcNameW"
      ]
    },
    {
      "name": "gdi32.dll",
      "imports": 2,
      "functions": [
        "DeleteObject",
        "GetObjectW"
      ]
    },
    {
      "name": "dsuiext.dll",
      "imports": 0,
      "functions": []
    },
    {
      "name": "ntdsapi.dll",
      "imports": 2,
      "functions": [
        "DsCrackNamesW",
        "DsFreeNameResultW"
      ]
    },
    {
      "name": "activeds.dll",
      "imports": 0,
      "functions": []
    }
  ],
  "ImageDLLExports": {
    "exports": 4,
    "functions": [
      "DllCanUnloadNow",
      "DllGetClassObject",
      "DllRegisterServer",
      "DllUnregisterServer"
    ]
  },
  "ImageHashSignatures": {
    "sha2": "1e06a6ec3463174badca43e71e79c4051c5c1c6d6b5febd701e70bab51622b3b"
  },
  "scan": {
    "intentions": 8,
    "uniq_apis_matched": 12,
    "results": [
      {
        "intent": "Obtain information through the Clipboard Buffers From Desktop Environment",
        "tag": "Collection:T1115 - Clipboard Data",
        "component": "---",
        "inputs": 4,
        "matches": 2,
        "apis": [
          "GetClipboardData",
          "OpenClipboard"
        ]
      },
      {
        "intent": "Implements Features For User CLI Experience",
        "tag": "Expert Input:IBO.0001 - Accepts CommandLine Arguments",
        "component": "Processes",
        "inputs": 3,
        "matches": 1,
        "apis": [
          "CommandLineToArgvW"
        ]
      },
      {
        "intent": "Implements Features To Enumerate The Windows Registry",
        "tag": "Expert Input:IBO.0009 - Enumerate The Windows Registry",
        "component": "Registry",
        "inputs": 6,
        "matches": 1,
        "apis": [
          "RegEnumKeyExW"
        ]
      },
      {
        "intent": "Discover Configuration Attributes/Descriptions of the Windows Enterprise Domain",
        "tag": "Reconnaissance:T1590.001 - Domain Properties (Windows Enterprise)",
        "component": "---",
        "inputs": 24,
        "matches": 2,
        "apis": [
          "DsGetDcNameW",
          "DsRoleGetPrimaryDomainInformation"
        ]
      },
      {
        "intent": "Implements Features To Create/Manipulate The Windows Registry",
        "tag": "Expert Input:IBO.0008 - Create/Manipulate The Windows Registry",
        "component": "Registry",
        "inputs": 33,
        "matches": 3,
        "apis": [
          "RegCreateKeyExW",
          "RegOpenKeyExW",
          "RegSetValueExW"
        ]
      },
      {
        "intent": "Query And Discover Windows Registry Configuration Settings",
        "tag": "Discovery:T1012 - Query Registry",
        "component": "Registry",
        "inputs": 11,
        "matches": 1,
        "apis": [
          "RegQueryValueExW"
        ]
      },
      {
        "intent": "Inject DLLs into Processes to evade defenses",
        "tag": "Defense Evasion:T1055 - Dynamic-Link Library Injection",
        "component": "Processes",
        "inputs": 4,
        "matches": 1,
        "apis": [
          "VirtualAlloc"
        ]
      },
      {
        "intent": "Enumerate Files or Directories on the Target System",
        "tag": "Discovery:T1083 - File and Directory Discovery",
        "component": "Filesystem",
        "inputs": 5,
        "matches": 1,
        "apis": [
          "FindFirstFileW"
        ]
      }
    ]
  }
}