{
  "pe_name": "uireng.dll",
  "pe_type": 267,
  "pe_size": 247808,
  "pe_subsystem": 3,
  "pe_subsystem_caption": "The Windows character (Cosole UI) subsystem",
  "pe_path": "c:\\Windows\\SysWOW64\\uireng.dll",
  "pe_timedate_stamp": 3182036407,
  "pe_timedate_human": "2070-11-01T03:00:07.000Z",
  "ImageDLLImports": [
    {
      "name": "msvcrt.dll",
      "imports": 42,
      "functions": [
        "??0exception@@QAE@ABV0@@Z",
        "??0exception@@QAE@XZ",
        "??1exception@@UAE@XZ",
        "??1type_info@@UAE@XZ",
        "?terminate@@YAXXZ",
        "_CxxThrowException",
        "_XcptFilter",
        "__CxxFrameHandler3",
        "__dllonexit",
        "_amsg_exit",
        "_callnewh",
        "_except_handler4_common",
        "_ftol2",
        "_ftol2_sse",
        "_initterm",
        "_itow_s",
        "_lock",
        "_onexit",
        "_purecall",
        "_snwscanf_s",
        "_unlock",
        "_vscwprintf",
        "_vsnprintf",
        "_vsnprintf_s",
        "_vsnwprintf",
        "_wcsicmp",
        "_wcsnicmp",
        "_wcstoui64",
        "_wcsupr",
        "_wtoi",
        "free",
        "malloc",
        "memcpy",
        "memcpy_s",
        "memmove",
        "memset",
        "wcschr",
        "wcscpy_s",
        "wcsrchr",
        "wcsstr",
        "wcstol",
        "wcstoul"
      ]
    },
    {
      "name": "advapi32.dll",
      "imports": 22,
      "functions": [
        "CloseTrace",
        "ControlTraceW",
        "ConvertStringSecurityDescriptorToSecurityDescriptorW",
        "EnableTrace",
        "EnableTraceEx",
        "EventRegister",
        "EventUnregister",
        "EventWriteString",
        "FlushTraceW",
        "GetTraceEnableFlags",
        "GetTraceEnableLevel",
        "GetTraceLoggerHandle",
        "OpenTraceW",
        "ProcessTrace",
        "RegCloseKey",
        "RegOpenKeyExW",
        "RegOpenKeyW",
        "RegQueryValueExW",
        "RegisterTraceGuidsW",
        "StartTraceW",
        "TraceMessage",
        "UnregisterTraceGuids"
      ]
    },
    {
      "name": "gdi32.dll",
      "imports": 21,
      "functions": [
        "BitBlt",
        "CreateCompatibleBitmap",
        "CreateCompatibleDC",
        "CreateDCW",
        "CreatePen",
        "CreateSolidBrush",
        "DeleteDC",
        "DeleteObject",
        "Ellipse",
        "ExcludeClipRect",
        "ExtCreatePen",
        "GetCurrentObject",
        "GetObjectW",
        "GetStockObject",
        "LineTo",
        "MoveToEx",
        "PolyBezier",
        "Rectangle",
        "SelectObject",
        "SetDCBrushColor",
        "StretchBlt"
      ]
    },
    {
      "name": "gdiplus.dll",
      "imports": 10,
      "functions": [
        "GdipAlloc",
        "GdipCloneImage",
        "GdipCreateBitmapFromHBITMAP",
        "GdipDisposeImage",
        "GdipFree",
        "GdipGetImageEncoders",
        "GdipGetImageEncodersSize",
        "GdipSaveImageToFile",
        "GdiplusShutdown",
        "GdiplusStartup"
      ]
    },
    {
      "name": "kernel32.dll",
      "imports": 94,
      "functions": [
        "CloseHandle",
        "CreateDirectoryW",
        "CreateEventW",
        "CreateFileMappingW",
        "CreateFileW",
        "CreateMutexExW",
        "CreateSemaphoreExW",
        "CreateThread",
        "DebugBreak",
        "DeleteCriticalSection",
        "DeleteFileW",
        "DuplicateHandle",
        "EnterCriticalSection",
        "ExitProcess",
        "ExpandEnvironmentStringsW",
        "FileTimeToSystemTime",
        "FindClose",
        "FindFirstFileW",
        "FindNextFileW",
        "FindResourceW",
        "FormatMessageW",
        "FreeLibrary",
        "GetCurrentProcess",
        "GetCurrentProcessId",
        "GetCurrentThread",
        "GetCurrentThreadId",
        "GetDateFormatW",
        "GetDriveTypeW",
        "GetFileAttributesW",
        "GetFileSize",
        "GetLastError",
        "GetLongPathNameW",
        "GetModuleFileNameA",
        "GetModuleHandleExW",
        "GetModuleHandleW",
        "GetProcAddress",
        "GetProcessHeap",
        "GetProductInfo",
        "GetSystemDirectoryW",
        "GetSystemTimeAsFileTime",
        "GetThreadPriority",
        "GetTickCount",
        "GetTimeFormatW",
        "GetVersionExW",
        "GetWindowsDirectoryW",
        "HeapAlloc",
        "HeapFree",
        "HeapReAlloc",
        "InitializeConditionVariable",
        "InitializeCriticalSection",
        "IsDebuggerPresent",
        "K32GetModuleFileNameExW",
        "LeaveCriticalSection",
        "LoadLibraryExW",
        "LoadLibraryW",
        "LoadResource",
        "LocalFree",
        "LockResource",
        "MapViewOfFile",
        "MoveFileExW",
        "MultiByteToWideChar",
        "OpenProcess",
        "OpenSemaphoreW",
        "OutputDebugStringW",
        "QueryFullProcessImageNameW",
        "QueryPerformanceCounter",
        "ReadFile",
        "ReadProcessMemory",
        "RegisterWaitForSingleObject",
        "ReleaseMutex",
        "ReleaseSemaphore",
        "RemoveDirectoryW",
        "ResetEvent",
        "ResumeThread",
        "SearchPathW",
        "SetEvent",
        "SetLastError",
        "SetThreadPriority",
        "SetUnhandledExceptionFilter",
        "SizeofResource",
        "Sleep",
        "SleepConditionVariableCS",
        "SystemTimeToTzSpecificLocalTime",
        "TerminateProcess",
        "UnhandledExceptionFilter",
        "UnmapViewOfFile",
        "UnregisterWait",
        "WaitForMultipleObjects",
        "WaitForSingleObject",
        "WaitForSingleObjectEx",
        "WakeAllConditionVariable",
        "WakeConditionVariable",
        "WideCharToMultiByte",
        "WriteFile"
      ]
    },
    {
      "name": "msdrm.dll",
      "imports": 1,
      "functions": [
        "DRMIsWindowProtected"
      ]
    },
    {
      "name": "ntdll.dll",
      "imports": 17,
      "functions": [
        "NtApphelpCacheControl",
        "NtClose",
        "NtQueryInformationProcess",
        "NtQueryValueKey",
        "RtlAllocateHeap",
        "RtlAppendUnicodeStringToString",
        "RtlAppendUnicodeToString",
        "RtlDosPathNameToNtPathName_U_WithStatus",
        "RtlFormatCurrentUserKeyPath",
        "RtlFreeHeap",
        "RtlFreeUnicodeString",
        "RtlGetFullPathName_UEx",
        "RtlInitUnicodeString",
        "RtlInitUnicodeStringEx",
        "ZwClose",
        "ZwCreateFile",
        "ZwOpenKey"
      ]
    },
    {
      "name": "ole32.dll",
      "imports": 7,
      "functions": [
        "CLSIDFromString",
        "CoCreateGuid",
        "CoCreateInstance",
        "CoInitialize",
        "CoInitializeEx",
        "CoUninitialize",
        "StringFromGUID2"
      ]
    },
    {
      "name": "oleacc.dll",
      "imports": 0,
      "functions": []
    },
    {
      "name": "oleaut32.dll",
      "imports": 0,
      "functions": []
    },
    {
      "name": "shell32.dll",
      "imports": 3,
      "functions": [
        "CommandLineToArgvW",
        "SHFileOperationW",
        "ShellExecuteW"
      ]
    },
    {
      "name": "shlwapi.dll",
      "imports": 5,
      "functions": [
        "PathCombineW",
        "PathFindFileNameW",
        "PathRemoveBlanksW",
        "PathRemoveExtensionW",
        "SHCreateStreamOnFileEx"
      ]
    },
    {
      "name": "user32.dll",
      "imports": 85,
      "functions": [
        "BeginPaint",
        "CallNextHookEx",
        "ClientToScreen",
        "CloseDesktop",
        "CopyImage",
        "CreateDesktopW",
        "CreateDialogParamW",
        "CreateWindowExW",
        "DefWindowProcW",
        "DestroyWindow",
        "DispatchMessageW",
        "DrawIcon",
        "EnableWindow",
        "EndPaint",
        "EnumWindows",
        "FillRect",
        "FindWindowExW",
        "FindWindowW",
        "GetAsyncKeyState",
        "GetClassNameW",
        "GetClientRect",
        "GetCursorInfo",
        "GetCursorPos",
        "GetDC",
        "GetDesktopWindow",
        "GetDlgItem",
        "GetDoubleClickTime",
        "GetGUIThreadInfo",
        "GetIconInfo",
        "GetKeyNameTextW",
        "GetKeyState",
        "GetMessageW",
        "GetParent",
        "GetPointerDevices",
        "GetProcessDefaultLayout",
        "GetRawInputData",
        "GetRawInputDeviceInfoW",
        "GetSystemMetrics",
        "GetThreadDesktop",
        "GetWindowInfo",
        "GetWindowLongW",
        "GetWindowRect",
        "GetWindowTextLengthW",
        "GetWindowTextW",
        "GetWindowThreadProcessId",
        "InternalGetWindowText",
        "InvalidateRect",
        "IsDialogMessageW",
        "IsHungAppWindow",
        "IsRectEmpty",
        "LoadCursorW",
        "LoadIconW",
        "LoadImageW",
        "MapVirtualKeyW",
        "MsgWaitForMultipleObjectsEx",
        "PeekMessageW",
        "PhysicalToLogicalPointForPerMonitorDPI",
        "PostThreadMessageW",
        "PtInRect",
        "RegisterClassExW",
        "RegisterRawInputDevices",
        "RegisterWindowMessageW",
        "ReleaseCapture",
        "ReleaseDC",
        "SendMessageW",
        "SetCapture",
        "SetLayeredWindowAttributes",
        "SetProcessDefaultLayout",
        "SetThreadDesktop",
        "SetTimer",
        "SetWinEventHook",
        "SetWindowLongW",
        "SetWindowPos",
        "SetWindowsHookExW",
        "ShowWindow",
        "ShowWindowAsync",
        "SwitchDesktop",
        "SystemParametersInfoW",
        "TranslateMessage",
        "UnhookWinEvent",
        "UnhookWindowsHookEx",
        "UnregisterClassW",
        "UpdateWindow",
        "WindowFromPhysicalPoint",
        "WindowFromPoint"
      ]
    },
    {
      "name": "aepic.dll",
      "imports": 2,
      "functions": [
        "PicFreeFileInfo",
        "PicRetrieveFileInfo"
      ]
    },
    {
      "name": "version.dll",
      "imports": 3,
      "functions": [
        "GetFileVersionInfoSizeW",
        "GetFileVersionInfoW",
        "VerQueryValueW"
      ]
    },
    {
      "name": "xmllite.dll",
      "imports": 1,
      "functions": [
        "CreateXmlWriter"
      ]
    },
    {
      "name": "hid.dll",
      "imports": 5,
      "functions": [
        "HidP_GetCaps",
        "HidP_GetLinkCollectionNodes",
        "HidP_GetUsageValue",
        "HidP_GetUsages",
        "HidP_GetValueCaps"
      ]
    },
    {
      "name": "msimg32.dll",
      "imports": 1,
      "functions": [
        "AlphaBlend"
      ]
    },
    {
      "name": "rpcrt4.dll",
      "imports": 4,
      "functions": [
        "NdrServerCall2",
        "RpcServerListen",
        "RpcServerRegisterIf2",
        "RpcServerUseProtseqEpW"
      ]
    }
  ],
  "ImageDLLExports": {
    "exports": 10,
    "functions": [
      "UirGetScreenComment",
      "UirInitializeEngine",
      "UirIsRecordingActive",
      "UirOutCreateOutputFile",
      "UirPauseRecordingSession",
      "UirResumeRecordingSession",
      "UirStartRecordingSession",
      "UirStopRecordingSession",
      "UirUninitializeEngine",
      "UirUpdateRecordingSession"
    ]
  },
  "ImageHashSignatures": {
    "sha2": "7cf75c5c28c6981166dae6069e3224306ef889581cb8a494caa2ceb444cd42e6"
  },
  "scan": {
    "intentions": 7,
    "uniq_apis_matched": 8,
    "results": [
      {
        "intent": "Delete Files From Disk Potentially Erasing Important Evidence To Cover Attack Activity",
        "tag": "Defense Evasion:T1070.004 - File Deletion",
        "component": "Filesystem",
        "inputs": 2,
        "matches": 1,
        "apis": [
          "DeleteFileW"
        ]
      },
      {
        "intent": "Query And Discover Windows Registry Configuration Settings",
        "tag": "Discovery:T1012 - Query Registry",
        "component": "Registry",
        "inputs": 11,
        "matches": 1,
        "apis": [
          "RegQueryValueExW"
        ]
      },
      {
        "intent": "Enumerate Files or Directories on the Target System",
        "tag": "Discovery:T1083 - File and Directory Discovery",
        "component": "Filesystem",
        "inputs": 5,
        "matches": 1,
        "apis": [
          "FindFirstFileW"
        ]
      },
      {
        "intent": "Inject malicious code into hijacked processes in order to evade process-based defenses",
        "tag": "Defense Evasion:T1055.002 - Thread Execution Hijacking",
        "component": "Processes",
        "inputs": 3,
        "matches": 1,
        "apis": [
          "ResumeThread"
        ]
      },
      {
        "intent": "Implements Features To Create/Manipulate The Windows Registry",
        "tag": "Expert Input:IBO.0008 - Create/Manipulate The Windows Registry",
        "component": "Registry",
        "inputs": 33,
        "matches": 2,
        "apis": [
          "RegOpenKeyExW",
          "RegOpenKeyW"
        ]
      },
      {
        "intent": "Implements Features To Execute or Spawn New Processes On The Target System",
        "tag": "Expert Input:IBO.0002 - Spawn New Process",
        "component": "Processes",
        "inputs": 7,
        "matches": 1,
        "apis": [
          "ShellExecuteW"
        ]
      },
      {
        "intent": "Implements Features For User CLI Experience",
        "tag": "Expert Input:IBO.0001 - Accepts CommandLine Arguments",
        "component": "Processes",
        "inputs": 3,
        "matches": 1,
        "apis": [
          "CommandLineToArgvW"
        ]
      }
    ]
  }
}