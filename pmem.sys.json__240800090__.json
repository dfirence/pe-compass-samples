{
  "pe_name": "pmem.sys",
  "pe_type": 523,
  "pe_size": 138040,
  "pe_subsystem": 1,
  "pe_subsystem_caption": "Device drivers and native Windows processes",
  "pe_path": "c:\\Windows\\WinSxS\\amd64_dual_pmem.inf_31bf3856ad364e35_10.0.19041.1_none_09025333ccdf885a\\pmem.sys",
  "pe_timedate_stamp": 3777318067,
  "pe_timedate_human": "2089-09-11T23:01:07.000Z",
  "ImageDLLImports": [
    {
      "name": "ntoskrnl.dll",
      "imports": 102,
      "functions": [
        "EtwRegister",
        "EtwSetInformation",
        "EtwUnregister",
        "EtwWrite",
        "EtwWriteTransfer",
        "ExAcquireRundownProtectionCacheAware",
        "ExAcquireSpinLockExclusive",
        "ExAcquireSpinLockShared",
        "ExAllocateCacheAwareRundownProtection",
        "ExAllocatePoolWithTag",
        "ExFreeCacheAwareRundownProtection",
        "ExFreePoolWithTag",
        "ExReInitializeRundownProtectionCacheAware",
        "ExReleaseRundownProtectionCacheAware",
        "ExReleaseSpinLockExclusive",
        "ExReleaseSpinLockShared",
        "ExWaitForRundownProtectionReleaseCacheAware",
        "IoAcquireRemoveLockEx",
        "IoAllocateIrp",
        "IoAllocateWorkItem",
        "IoAttachDeviceToDeviceStack",
        "IoBuildDeviceIoControlRequest",
        "IoBuildSynchronousFsdRequest",
        "IoCreateDevice",
        "IoCreateSymbolicLink",
        "IoDeleteDevice",
        "IoDeleteSymbolicLink",
        "IoDetachDevice",
        "IoFreeIrp",
        "IoFreeWorkItem",
        "IoGetActivityIdIrp",
        "IoGetAttachedDeviceReference",
        "IoGetConfigurationInformation",
        "IoGetDeviceObjectPointer",
        "IoGetDeviceProperty",
        "IoInitializeRemoveLockEx",
        "IoInvalidateDeviceState",
        "IoOpenDeviceRegistryKey",
        "IoQueueWorkItem",
        "IoRegisterPlugPlayNotification",
        "IoReleaseRemoveLockAndWaitEx",
        "IoReleaseRemoveLockEx",
        "IoReportTargetDeviceChangeAsynchronous",
        "IoUnregisterPlugPlayNotificationEx",
        "IofCallDriver",
        "IofCompleteRequest",
        "KeAcquireSpinLockRaiseToDpc",
        "KeCancelTimer",
        "KeFlushQueuedDpcs",
        "KeGetCurrentProcessorNumberEx",
        "KeInitializeDpc",
        "KeInitializeEvent",
        "KeInitializeMutex",
        "KeInitializeSpinLock",
        "KeInitializeTimer",
        "KeLowerIrql",
        "KeQueryActiveProcessorCountEx",
        "KeQueryUnbiasedInterruptTime",
        "KeReleaseMutex",
        "KeReleaseSpinLock",
        "KeSetCoalescableTimer",
        "KeSetEvent",
        "KeWaitForSingleObject",
        "KfRaiseIrql",
        "MmAllocateMappingAddress",
        "MmFreeMappingAddress",
        "MmGetPhysicalAddress",
        "MmMapIoSpaceEx",
        "MmMapLockedPagesWithReservedMapping",
        "MmMapMdl",
        "MmMapMemoryDumpMdlEx",
        "MmUnmapIoSpace",
        "MmUnmapReservedMapping",
        "ObfDereferenceObject",
        "PoCallDriver",
        "PoRequestPowerIrp",
        "PoSetHiberRange",
        "PoSetPowerState",
        "PoStartNextPowerIrp",
        "RtlAnsiStringToUnicodeString",
        "RtlCmDecodeMemIoResource",
        "RtlCompareMemory",
        "RtlCopyUnicodeString",
        "RtlFlushNonVolatileMemory",
        "RtlFreeNonVolatileToken",
        "RtlFreeUnicodeString",
        "RtlGetNonVolatileToken",
        "RtlInitAnsiString",
        "RtlInitUnicodeString",
        "RtlQueryRegistryValuesEx",
        "RtlStringFromGUID",
        "RtlWriteNonVolatileMemory",
        "ZwClose",
        "ZwCreateDirectoryObject",
        "ZwDeleteValueKey",
        "ZwMakeTemporaryObject",
        "ZwOpenKey",
        "ZwSetValueKey",
        "ZwUpdateWnfStateData",
        "__chkstk",
        "_vsnprintf",
        "_vsnwprintf"
      ]
    },
    {
      "name": "hal.dll",
      "imports": 1,
      "functions": [
        "KeQueryPerformanceCounter"
      ]
    },
    {
      "name": "cng.dll",
      "imports": 7,
      "functions": [
        "BCryptCloseAlgorithmProvider",
        "BCryptCreateHash",
        "BCryptDestroyHash",
        "BCryptFinishHash",
        "BCryptGetProperty",
        "BCryptHashData",
        "BCryptOpenAlgorithmProvider"
      ]
    }
  ],
  "ImageDLLExports": {
    "exports": 0,
    "functions": []
  },
  "ImageHashSignatures": {
    "sha2": "0c0c05cd071badd691c99cb08ef6ceeb1df9b0f011f4499c22bbe4636e7521a3"
  }
}