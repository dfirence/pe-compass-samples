{
  "pe_name": "msi.dll",
  "pe_type": 267,
  "pe_size": 2692608,
  "pe_subsystem": 3,
  "pe_subsystem_caption": "The Windows character (Cosole UI) subsystem",
  "pe_path": "c:\\Windows\\WinSxS\\wow64_microsoft-windows-installer-engine_31bf3856ad364e35_10.0.19041.1645_none_8267d2879d38fa9a\\msi.dll",
  "pe_timedate_stamp": 3529233833,
  "pe_timedate_human": "2081-11-01T14:43:53.000Z",
  "ImageDLLImports": [
    {
      "name": "msvcrt.dll",
      "imports": 47,
      "functions": [
        "??1type_info@@UAE@XZ",
        "_CxxThrowException",
        "_XcptFilter",
        "__dllonexit",
        "_amsg_exit",
        "_except_handler4_common",
        "_i64tow_s",
        "_initterm",
        "_itoa_s",
        "_itow",
        "_itow_s",
        "_lock",
        "_onexit",
        "_purecall",
        "_ui64tow",
        "_ui64tow_s",
        "_ultow_s",
        "_unlock",
        "_vsnprintf",
        "_vsnwprintf",
        "_wcsicmp",
        "_wcsnicmp",
        "_wtoi",
        "_wtoi64",
        "bsearch",
        "free",
        "isdigit",
        "iswdigit",
        "malloc",
        "memcmp",
        "memcpy",
        "memcpy_s",
        "memmove",
        "memmove_s",
        "memset",
        "qsort",
        "rand",
        "srand",
        "strtol",
        "time",
        "towlower",
        "wcschr",
        "wcsncmp",
        "wcsrchr",
        "wcsstr",
        "wcstol",
        "wcstoul"
      ]
    },
    {
      "name": "ntdll.dll",
      "imports": 22,
      "functions": [
        "EtwTraceMessage",
        "NtClose",
        "NtMapViewOfSection",
        "NtOpenKey",
        "NtQueryInformationProcess",
        "NtQuerySystemInformation",
        "NtQueryValueKey",
        "NtSetInformationFile",
        "NtSetSecurityObject",
        "NtUnmapViewOfSection",
        "RtlCreateEnvironment",
        "RtlCreateEnvironmentEx",
        "RtlDestroyEnvironment",
        "RtlDosPathNameToRelativeNtPathName_U_WithStatus",
        "RtlExpandEnvironmentStrings",
        "RtlGetCurrentServiceSessionId",
        "RtlGetFullPathName_U",
        "RtlNtStatusToDosErrorNoTeb",
        "RtlQueryEnvironmentVariable",
        "RtlRandom",
        "RtlRandomEx",
        "RtlSetEnvironmentVar"
      ]
    },
    {
      "name": "advapi32.dll",
      "imports": 84,
      "functions": [
        "AddAccessAllowedAce",
        "AdjustTokenPrivileges",
        "AllocateAndInitializeSid",
        "BuildTrusteeWithSidW",
        "ChangeServiceConfigW",
        "CloseServiceHandle",
        "ControlService",
        "ConvertSidToStringSidW",
        "ConvertStringSecurityDescriptorToSecurityDescriptorW",
        "CopySid",
        "CreateProcessAsUserW",
        "CreateServiceW",
        "DeleteService",
        "DeregisterEventSource",
        "DuplicateToken",
        "DuplicateTokenEx",
        "EnumDependentServicesW",
        "EqualSid",
        "EventRegister",
        "EventSetInformation",
        "EventUnregister",
        "EventWriteTransfer",
        "FreeSid",
        "GetAce",
        "GetFileSecurityW",
        "GetLengthSid",
        "GetSecurityDescriptorControl",
        "GetSecurityDescriptorGroup",
        "GetSecurityDescriptorLength",
        "GetSecurityDescriptorOwner",
        "GetServiceDisplayNameW",
        "GetSidLengthRequired",
        "GetSidSubAuthority",
        "GetSidSubAuthorityCount",
        "GetTokenInformation",
        "GetUserNameW",
        "InitializeAcl",
        "InitializeSecurityDescriptor",
        "IsValidSecurityDescriptor",
        "LookupAccountNameW",
        "LookupAccountSidW",
        "LookupPrivilegeValueW",
        "MakeSelfRelativeSD",
        "OpenProcessToken",
        "OpenSCManagerW",
        "OpenServiceW",
        "OpenThreadToken",
        "PrivilegeCheck",
        "QueryServiceConfigW",
        "QueryServiceObjectSecurity",
        "QueryServiceStatus",
        "RegCloseKey",
        "RegConnectRegistryW",
        "RegCreateKeyExW",
        "RegDeleteKeyW",
        "RegDeleteValueW",
        "RegDisableReflectionKey",
        "RegEnableReflectionKey",
        "RegEnumKeyExA",
        "RegEnumKeyExW",
        "RegEnumKeyW",
        "RegEnumValueA",
        "RegEnumValueW",
        "RegGetKeySecurity",
        "RegOpenKeyExW",
        "RegOpenKeyW",
        "RegQueryInfoKeyW",
        "RegQueryReflectionKey",
        "RegQueryValueExA",
        "RegQueryValueExW",
        "RegSetKeySecurity",
        "RegSetValueExA",
        "RegSetValueExW",
        "RegisterEventSourceW",
        "ReportEventW",
        "SetEntriesInAclW",
        "SetFileSecurityW",
        "SetSecurityDescriptorDacl",
        "SetSecurityDescriptorGroup",
        "SetSecurityDescriptorOwner",
        "SetServiceObjectSecurity",
        "SetThreadToken",
        "SetTokenInformation",
        "StartServiceW"
      ]
    },
    {
      "name": "kernel32.dll",
      "imports": 175,
      "functions": [
        "AcquireSRWLockExclusive",
        "AcquireSRWLockShared",
        "CloseHandle",
        "CloseThreadpoolTimer",
        "CompareFileTime",
        "CompareStringA",
        "CompareStringW",
        "CreateDirectoryW",
        "CreateEventW",
        "CreateFileMappingW",
        "CreateFileW",
        "CreateMutexExW",
        "CreateMutexW",
        "CreateSemaphoreExW",
        "CreateThread",
        "CreateThreadpoolTimer",
        "DebugBreak",
        "DeleteCriticalSection",
        "DeleteFileW",
        "DisableThreadLibraryCalls",
        "DosDateTimeToFileTime",
        "EnterCriticalSection",
        "EnumResourceLanguagesW",
        "EnumResourceNamesW",
        "ExitProcess",
        "ExitThread",
        "ExpandEnvironmentStringsW",
        "FileTimeToDosDateTime",
        "FileTimeToLocalFileTime",
        "FileTimeToSystemTime",
        "FindClose",
        "FindFirstFileW",
        "FindNextFileW",
        "FindResourceExW",
        "FlushFileBuffers",
        "FormatMessageW",
        "FreeLibrary",
        "FreeLibraryAndExitThread",
        "GetACP",
        "GetComputerNameW",
        "GetCurrentDirectoryW",
        "GetCurrentProcess",
        "GetCurrentProcessId",
        "GetCurrentThread",
        "GetCurrentThreadId",
        "GetDateFormatW",
        "GetDiskFreeSpaceExW",
        "GetDiskFreeSpaceW",
        "GetDriveTypeW",
        "GetEnvironmentVariableW",
        "GetExitCodeProcess",
        "GetExitCodeThread",
        "GetFileAttributesW",
        "GetFileInformationByHandleEx",
        "GetFileSize",
        "GetFileTime",
        "GetFileType",
        "GetFinalPathNameByHandleW",
        "GetLastError",
        "GetLocalTime",
        "GetLocaleInfoW",
        "GetLongPathNameW",
        "GetModuleFileNameA",
        "GetModuleFileNameW",
        "GetModuleHandleA",
        "GetModuleHandleExW",
        "GetModuleHandleW",
        "GetNativeSystemInfo",
        "GetNumberFormatW",
        "GetOverlappedResult",
        "GetPrivateProfileStringW",
        "GetProcAddress",
        "GetProcessHeap",
        "GetProfileStringW",
        "GetShortPathNameW",
        "GetSystemDefaultLangID",
        "GetSystemDefaultUILanguage",
        "GetSystemDirectoryW",
        "GetSystemInfo",
        "GetSystemTimeAsFileTime",
        "GetTempFileNameW",
        "GetTempPathW",
        "GetTickCount",
        "GetTimeFormatW",
        "GetUserDefaultLangID",
        "GetUserDefaultUILanguage",
        "GetVersionExW",
        "GetVolumeInformationW",
        "GlobalAlloc",
        "GlobalFree",
        "GlobalLock",
        "GlobalReAlloc",
        "GlobalUnlock",
        "HeapAlloc",
        "HeapFree",
        "HeapReAlloc",
        "InitializeCriticalSection",
        "InitializeCriticalSectionEx",
        "IsDebuggerPresent",
        "IsValidCodePage",
        "LeaveCriticalSection",
        "LoadLibraryExW",
        "LoadLibraryW",
        "LoadResource",
        "LocalAlloc",
        "LocalFileTimeToFileTime",
        "LocalFree",
        "LockResource",
        "MapViewOfFile",
        "MoveFileExW",
        "MoveFileW",
        "MulDiv",
        "MultiByteToWideChar",
        "OpenEventW",
        "OpenMutexW",
        "OpenProcess",
        "OpenSemaphoreW",
        "OpenThread",
        "OutputDebugStringA",
        "OutputDebugStringW",
        "PowerClearRequest",
        "PowerCreateRequest",
        "PowerSetRequest",
        "QueryDosDeviceW",
        "QueryPerformanceCounter",
        "QueryPerformanceFrequency",
        "ReadFile",
        "ReleaseMutex",
        "ReleaseSRWLockExclusive",
        "ReleaseSRWLockShared",
        "ReleaseSemaphore",
        "RemoveDirectoryW",
        "ResetEvent",
        "ResumeThread",
        "SearchPathW",
        "SetEndOfFile",
        "SetEnvironmentVariableW",
        "SetErrorMode",
        "SetEvent",
        "SetFileAttributesW",
        "SetFileInformationByHandle",
        "SetFilePointer",
        "SetFileTime",
        "SetLastError",
        "SetThreadpoolTimer",
        "SetUnhandledExceptionFilter",
        "SizeofResource",
        "Sleep",
        "SystemTimeToFileTime",
        "TerminateProcess",
        "TerminateThread",
        "TlsAlloc",
        "TlsFree",
        "TlsGetValue",
        "TlsSetValue",
        "UnhandledExceptionFilter",
        "UnmapViewOfFile",
        "VirtualAlloc",
        "VirtualFree",
        "VirtualQuery",
        "WaitForMultipleObjects",
        "WaitForSingleObject",
        "WaitForSingleObjectEx",
        "WaitForThreadpoolTimerCallbacks",
        "WideCharToMultiByte",
        "Wow64DisableWow64FsRedirection",
        "Wow64RevertWow64FsRedirection",
        "WriteFile",
        "WritePrivateProfileStringW",
        "WriteProfileStringW",
        "lstrcmpW",
        "lstrcmpiA",
        "lstrcmpiW",
        "lstrlenA",
        "lstrlenW"
      ]
    },
    {
      "name": "user32.dll",
      "imports": 71,
      "functions": [
        "CharLowerW",
        "CharNextA",
        "CharNextW",
        "CharPrevW",
        "CharUpperBuffW",
        "CharUpperW",
        "CopyRect",
        "CreateDialogParamW",
        "CreateWindowExW",
        "DefWindowProcW",
        "DestroyWindow",
        "DialogBoxParamW",
        "DispatchMessageW",
        "DrawTextW",
        "EnableMenuItem",
        "EnableWindow",
        "EndDialog",
        "EnumWindows",
        "ExitWindowsEx",
        "GetActiveWindow",
        "GetClientRect",
        "GetDC",
        "GetDlgItem",
        "GetDlgItemTextW",
        "GetFocus",
        "GetProcessWindowStation",
        "GetSysColor",
        "GetSystemMenu",
        "GetSystemMetrics",
        "GetUserObjectInformationW",
        "GetWindow",
        "GetWindowLongW",
        "GetWindowRect",
        "GetWindowTextLengthW",
        "GetWindowTextW",
        "GetWindowThreadProcessId",
        "InvalidateRect",
        "IsCharLowerW",
        "IsDialogMessageW",
        "IsWindowEnabled",
        "IsWindowVisible",
        "LoadCursorW",
        "LoadIconW",
        "LoadStringW",
        "MapWindowPoints",
        "MessageBoxW",
        "MoveWindow",
        "MsgWaitForMultipleObjects",
        "PeekMessageW",
        "PostMessageW",
        "PostQuitMessage",
        "PostThreadMessageW",
        "RegisterClassW",
        "RegisterWindowMessageW",
        "ReleaseDC",
        "RemoveMenu",
        "SendDlgItemMessageW",
        "SendMessageTimeoutW",
        "SendMessageW",
        "SetCursor",
        "SetDlgItemTextW",
        "SetFocus",
        "SetForegroundWindow",
        "SetUserObjectSecurity",
        "SetWindowLongW",
        "SetWindowPos",
        "SetWindowTextW",
        "ShowWindow",
        "SystemParametersInfoW",
        "TranslateMessage",
        "UnregisterClassW"
      ]
    },
    {
      "name": "shell32.dll",
      "imports": 1,
      "functions": [
        "CommandLineToArgvW"
      ]
    },
    {
      "name": "gdi32.dll",
      "imports": 14,
      "functions": [
        "AddFontResourceW",
        "CreateFontIndirectW",
        "CreateFontW",
        "CreateSolidBrush",
        "DeleteObject",
        "EnumFontFamiliesExW",
        "GetDeviceCaps",
        "GetTextExtentPoint32W",
        "GetTextFaceW",
        "GetTextMetricsW",
        "RemoveFontResourceW",
        "SelectObject",
        "SetBkColor",
        "SetTextColor"
      ]
    },
    {
      "name": "rpcrt4.dll",
      "imports": 30,
      "functions": [
        "CStdStubBuffer_AddRef",
        "CStdStubBuffer_Connect",
        "CStdStubBuffer_CountRefs",
        "CStdStubBuffer_DebugServerQueryInterface",
        "CStdStubBuffer_DebugServerRelease",
        "CStdStubBuffer_Disconnect",
        "CStdStubBuffer_Invoke",
        "CStdStubBuffer_IsIIDSupported",
        "CStdStubBuffer_QueryInterface",
        "IUnknown_AddRef_Proxy",
        "IUnknown_QueryInterface_Proxy",
        "IUnknown_Release_Proxy",
        "I_RpcExceptionFilter",
        "NdrAsyncClientCall",
        "NdrCStdStubBuffer_Release",
        "NdrClientCall2",
        "NdrDllCanUnloadNow",
        "NdrDllGetClassObject",
        "NdrDllRegisterProxy",
        "NdrDllUnregisterProxy",
        "NdrOleAllocate",
        "NdrOleFree",
        "RpcAsyncCancelCall",
        "RpcAsyncCompleteCall",
        "RpcAsyncInitializeHandle",
        "RpcBindingFree",
        "RpcBindingFromStringBindingW",
        "RpcBindingSetAuthInfoExW",
        "RpcStringBindingComposeW",
        "RpcStringFreeW"
      ]
    },
    {
      "name": "ole32.dll",
      "imports": 9,
      "functions": [
        "CoCreateGuid",
        "CoTaskMemAlloc",
        "CoTaskMemFree",
        "HWND_UserFree",
        "HWND_UserMarshal",
        "HWND_UserSize",
        "HWND_UserUnmarshal",
        "IIDFromString",
        "PropVariantClear"
      ]
    },
    {
      "name": "bcrypt.dll",
      "imports": 5,
      "functions": [
        "BCryptCreateHash",
        "BCryptDestroyHash",
        "BCryptFinishHash",
        "BCryptGetProperty",
        "BCryptHashData"
      ]
    },
    {
      "name": "api-ms-win-security-base-l1-1-0.dll",
      "imports": 3,
      "functions": [
        "CreateWellKnownSid",
        "ImpersonateLoggedOnUser",
        "RevertToSelf"
      ]
    }
  ],
  "ImageDLLExports": {
    "exports": 295,
    "functions": [
      "QueryInstanceCount",
      "DllCanUnloadNow",
      "DllGetClassObject",
      "DllGetVersion",
      "DllRegisterServer",
      "DllUnregisterServer",
      "Migrate10CachedPackagesA",
      "Migrate10CachedPackagesW",
      "MsiAdvertiseProductA",
      "MsiAdvertiseProductExA",
      "MsiAdvertiseProductExW",
      "MsiAdvertiseProductW",
      "MsiAdvertiseScriptA",
      "MsiAdvertiseScriptW",
      "MsiApplyMultiplePatchesA",
      "MsiApplyMultiplePatchesW",
      "MsiApplyPatchA",
      "MsiApplyPatchW",
      "MsiBeginTransactionA",
      "MsiBeginTransactionW",
      "MsiCloseAllHandles",
      "MsiCloseHandle",
      "MsiCollectUserInfoA",
      "MsiCollectUserInfoW",
      "MsiConfigureFeatureA",
      "MsiConfigureFeatureFromDescriptorA",
      "MsiConfigureFeatureFromDescriptorW",
      "MsiConfigureFeatureW",
      "MsiConfigureProductA",
      "MsiConfigureProductExA",
      "MsiConfigureProductExW",
      "MsiConfigureProductW",
      "MsiCreateAndVerifyInstallerDirectory",
      "MsiCreateRecord",
      "MsiCreateTransformSummaryInfoA",
      "MsiCreateTransformSummaryInfoW",
      "MsiDatabaseApplyTransformA",
      "MsiDatabaseApplyTransformW",
      "MsiDatabaseCommit",
      "MsiDatabaseExportA",
      "MsiDatabaseExportW",
      "MsiDatabaseGenerateTransformA",
      "MsiDatabaseGenerateTransformW",
      "MsiDatabaseGetPrimaryKeysA",
      "MsiDatabaseGetPrimaryKeysW",
      "MsiDatabaseImportA",
      "MsiDatabaseImportW",
      "MsiDatabaseIsTablePersistentA",
      "MsiDatabaseIsTablePersistentW",
      "MsiDatabaseMergeA",
      "MsiDatabaseMergeW",
      "MsiDatabaseOpenViewA",
      "MsiDatabaseOpenViewW",
      "MsiDecomposeDescriptorA",
      "MsiDecomposeDescriptorW",
      "MsiDeleteUserDataA",
      "MsiDeleteUserDataW",
      "MsiDetermineApplicablePatchesA",
      "MsiDetermineApplicablePatchesW",
      "MsiDeterminePatchSequenceA",
      "MsiDeterminePatchSequenceW",
      "MsiDoActionA",
      "MsiDoActionW",
      "MsiEnableLogA",
      "MsiEnableLogW",
      "MsiEnableUIPreview",
      "MsiEndTransaction",
      "MsiEnumClientsA",
      "MsiEnumClientsExA",
      "MsiEnumClientsExW",
      "MsiEnumClientsW",
      "MsiEnumComponentCostsA",
      "MsiEnumComponentCostsW",
      "MsiEnumComponentQualifiersA",
      "MsiEnumComponentQualifiersW",
      "MsiEnumComponentsA",
      "MsiEnumComponentsExA",
      "MsiEnumComponentsExW",
      "MsiEnumComponentsW",
      "MsiEnumFeaturesA",
      "MsiEnumFeaturesW",
      "MsiEnumPatchesA",
      "MsiEnumPatchesExA",
      "MsiEnumPatchesExW",
      "MsiEnumPatchesW",
      "MsiEnumProductsA",
      "MsiEnumProductsExA",
      "MsiEnumProductsExW",
      "MsiEnumProductsW",
      "MsiEnumRelatedProductsA",
      "MsiEnumRelatedProductsW",
      "MsiEvaluateConditionA",
      "MsiEvaluateConditionW",
      "MsiExtractPatchXMLDataA",
      "MsiExtractPatchXMLDataW",
      "MsiFormatRecordA",
      "MsiFormatRecordW",
      "MsiGetActiveDatabase",
      "MsiGetComponentPathA",
      "MsiGetComponentPathExA",
      "MsiGetComponentPathExW",
      "MsiGetComponentPathW",
      "MsiGetComponentStateA",
      "MsiGetComponentStateW",
      "MsiGetDatabaseState",
      "MsiGetFeatureCostA",
      "MsiGetFeatureCostW",
      "MsiGetFeatureInfoA",
      "MsiGetFeatureInfoW",
      "MsiGetFeatureStateA",
      "MsiGetFeatureStateW",
      "MsiGetFeatureUsageA",
      "MsiGetFeatureUsageW",
      "MsiGetFeatureValidStatesA",
      "MsiGetFeatureValidStatesW",
      "MsiGetFileHashA",
      "MsiGetFileHashW",
      "MsiGetFileSignatureInformationA",
      "MsiGetFileSignatureInformationW",
      "MsiGetFileVersionA",
      "MsiGetFileVersionW",
      "MsiGetLanguage",
      "MsiGetLastErrorRecord",
      "MsiGetMode",
      "MsiGetPatchFileListA",
      "MsiGetPatchFileListW",
      "MsiGetPatchInfoA",
      "MsiGetPatchInfoExA",
      "MsiGetPatchInfoExW",
      "MsiGetPatchInfoW",
      "MsiGetProductCodeA",
      "MsiGetProductCodeFromPackageCodeA",
      "MsiGetProductCodeFromPackageCodeW",
      "MsiGetProductCodeW",
      "MsiGetProductInfoA",
      "MsiGetProductInfoExA",
      "MsiGetProductInfoExW",
      "MsiGetProductInfoFromScriptA",
      "MsiGetProductInfoFromScriptW",
      "MsiGetProductInfoW",
      "MsiGetProductPropertyA",
      "MsiGetProductPropertyW",
      "MsiGetPropertyA",
      "MsiGetPropertyW",
      "MsiGetShortcutTargetA",
      "MsiGetShortcutTargetW",
      "MsiGetSourcePathA",
      "MsiGetSourcePathW",
      "MsiGetSummaryInformationA",
      "MsiGetSummaryInformationW",
      "MsiGetTargetPathA",
      "MsiGetTargetPathW",
      "MsiGetUserInfoA",
      "MsiGetUserInfoW",
      "MsiInstallMissingComponentA",
      "MsiInstallMissingComponentW",
      "MsiInstallMissingFileA",
      "MsiInstallMissingFileW",
      "MsiInstallProductA",
      "MsiInstallProductW",
      "MsiInvalidateFeatureCache",
      "MsiIsProductElevatedA",
      "MsiIsProductElevatedW",
      "MsiJoinTransaction",
      "MsiLoadStringA",
      "MsiLoadStringW",
      "MsiLocateComponentA",
      "MsiLocateComponentW",
      "MsiMessageBoxA",
      "MsiMessageBoxExA",
      "MsiMessageBoxExW",
      "MsiMessageBoxW",
      "MsiNotifySidChangeA",
      "MsiNotifySidChangeW",
      "MsiOpenDatabaseA",
      "MsiOpenDatabaseW",
      "MsiOpenPackageA",
      "MsiOpenPackageExA",
      "MsiOpenPackageExW",
      "MsiOpenPackageW",
      "MsiOpenProductA",
      "MsiOpenProductW",
      "MsiPreviewBillboardA",
      "MsiPreviewBillboardW",
      "MsiPreviewDialogA",
      "MsiPreviewDialogW",
      "MsiProcessAdvertiseScriptA",
      "MsiProcessAdvertiseScriptW",
      "MsiProcessMessage",
      "MsiProvideAssemblyA",
      "MsiProvideAssemblyW",
      "MsiProvideComponentA",
      "MsiProvideComponentFromDescriptorA",
      "MsiProvideComponentFromDescriptorW",
      "MsiProvideComponentW",
      "MsiProvideQualifiedComponentA",
      "MsiProvideQualifiedComponentExA",
      "MsiProvideQualifiedComponentExW",
      "MsiProvideQualifiedComponentW",
      "MsiQueryComponentStateA",
      "MsiQueryComponentStateW",
      "MsiQueryFeatureStateA",
      "MsiQueryFeatureStateExA",
      "MsiQueryFeatureStateExW",
      "MsiQueryFeatureStateFromDescriptorA",
      "MsiQueryFeatureStateFromDescriptorW",
      "MsiQueryFeatureStateW",
      "MsiQueryProductStateA",
      "MsiQueryProductStateW",
      "MsiRecordClearData",
      "MsiRecordDataSize",
      "MsiRecordGetFieldCount",
      "MsiRecordGetInteger",
      "MsiRecordGetStringA",
      "MsiRecordGetStringW",
      "MsiRecordIsNull",
      "MsiRecordReadStream",
      "MsiRecordSetInteger",
      "MsiRecordSetStreamA",
      "MsiRecordSetStreamW",
      "MsiRecordSetStringA",
      "MsiRecordSetStringW",
      "MsiReinstallFeatureA",
      "MsiReinstallFeatureFromDescriptorA",
      "MsiReinstallFeatureFromDescriptorW",
      "MsiReinstallFeatureW",
      "MsiReinstallProductA",
      "MsiReinstallProductW",
      "MsiRemovePatchesA",
      "MsiRemovePatchesW",
      "MsiSequenceA",
      "MsiSequenceW",
      "MsiSetComponentStateA",
      "MsiSetComponentStateW",
      "MsiSetExternalUIA",
      "MsiSetExternalUIRecord",
      "MsiSetExternalUIW",
      "MsiSetFeatureAttributesA",
      "MsiSetFeatureAttributesW",
      "MsiSetFeatureStateA",
      "MsiSetFeatureStateW",
      "MsiSetInstallLevel",
      "MsiSetInternalUI",
      "MsiSetMode",
      "MsiSetOfflineContextW",
      "MsiSetPropertyA",
      "MsiSetPropertyW",
      "MsiSetTargetPathA",
      "MsiSetTargetPathW",
      "MsiSourceListAddMediaDiskA",
      "MsiSourceListAddMediaDiskW",
      "MsiSourceListAddSourceA",
      "MsiSourceListAddSourceExA",
      "MsiSourceListAddSourceExW",
      "MsiSourceListAddSourceW",
      "MsiSourceListClearAllA",
      "MsiSourceListClearAllExA",
      "MsiSourceListClearAllExW",
      "MsiSourceListClearAllW",
      "MsiSourceListClearMediaDiskA",
      "MsiSourceListClearMediaDiskW",
      "MsiSourceListClearSourceA",
      "MsiSourceListClearSourceW",
      "MsiSourceListEnumMediaDisksA",
      "MsiSourceListEnumMediaDisksW",
      "MsiSourceListEnumSourcesA",
      "MsiSourceListEnumSourcesW",
      "MsiSourceListForceResolutionA",
      "MsiSourceListForceResolutionExA",
      "MsiSourceListForceResolutionExW",
      "MsiSourceListForceResolutionW",
      "MsiSourceListGetInfoA",
      "MsiSourceListGetInfoW",
      "MsiSourceListSetInfoA",
      "MsiSourceListSetInfoW",
      "MsiSummaryInfoGetPropertyA",
      "MsiSummaryInfoGetPropertyCount",
      "MsiSummaryInfoGetPropertyW",
      "MsiSummaryInfoPersist",
      "MsiSummaryInfoSetPropertyA",
      "MsiSummaryInfoSetPropertyW",
      "MsiUseFeatureA",
      "MsiUseFeatureExA",
      "MsiUseFeatureExW",
      "MsiUseFeatureW",
      "MsiVerifyDiskSpace",
      "MsiVerifyPackageA",
      "MsiVerifyPackageW",
      "MsiViewClose",
      "MsiViewExecute",
      "MsiViewFetch",
      "MsiViewGetColumnInfo",
      "MsiViewGetErrorA",
      "MsiViewGetErrorW",
      "MsiViewModify"
    ]
  },
  "ImageHashSignatures": {
    "sha2": "01cbe062c76f0f9a031e534a0df338daf1fe7c53a3192bd63292499d4b871912"
  },
  "scan": {
    "intentions": 16,
    "uniq_apis_matched": 46,
    "results": [
      {
        "intent": "Implements Features To Create/Manipulate System Services",
        "tag": "Expert Input:IBO.0007 - Create/Manipulate System Services",
        "component": "Services",
        "inputs": 19,
        "matches": 6,
        "apis": [
          "CloseServiceHandle",
          "ControlService",
          "CreateServiceW",
          "DeleteService",
          "SetServiceObjectSecurity",
          "StartServiceW"
        ]
      },
      {
        "intent": "Inject malicious code into hijacked processes in order to evade process-based defenses",
        "tag": "Defense Evasion:T1055.002 - Thread Execution Hijacking",
        "component": "Processes",
        "inputs": 3,
        "matches": 1,
        "apis": [
          "ResumeThread"
        ]
      },
      {
        "intent": "Manipulate Windows Tokens",
        "tag": "Defense Evasion:T1134 - Access Token Manipulation",
        "component": "Privileges",
        "inputs": 10,
        "matches": 3,
        "apis": [
          "AdjustTokenPrivileges",
          "OpenProcessToken",
          "OpenThreadToken"
        ]
      },
      {
        "intent": "Implements Features For User CLI Experience",
        "tag": "Expert Input:IBO.0001 - Accepts CommandLine Arguments",
        "component": "Processes",
        "inputs": 3,
        "matches": 1,
        "apis": [
          "CommandLineToArgvW"
        ]
      },
      {
        "intent": "Delete Files From Disk Potentially Erasing Important Evidence To Cover Attack Activity",
        "tag": "Defense Evasion:T1070.004 - File Deletion",
        "component": "Filesystem",
        "inputs": 2,
        "matches": 1,
        "apis": [
          "DeleteFileW"
        ]
      },
      {
        "intent": "Create Token To Impersonate",
        "tag": "Privilege Escalation:T1134.003 - Make and Impersonate Token",
        "component": "Privileges",
        "inputs": 2,
        "matches": 2,
        "apis": [
          "SetThreadToken",
          "SetTokenInformation"
        ]
      },
      {
        "intent": "Stealing Tokens To Impersonate Windows Identities",
        "tag": "Privilege Escalation:T1134.001 - Token Impersonation/Theft",
        "component": "Privileges",
        "inputs": 4,
        "matches": 2,
        "apis": [
          "DuplicateToken",
          "ImpersonateLoggedOnUser"
        ]
      },
      {
        "intent": "Implements Features To Enumerate/Discover System Services And Their Configuration Data",
        "tag": "Expert Input:IBO.0006 - Enumerate System Services",
        "component": "Services",
        "inputs": 28,
        "matches": 7,
        "apis": [
          "EnumDependentServicesW",
          "GetServiceDisplayNameW",
          "OpenSCManagerW",
          "OpenServiceW",
          "QueryServiceConfigW",
          "QueryServiceObjectSecurity",
          "QueryServiceStatus"
        ]
      },
      {
        "intent": "Implements Features To Enumerate The Windows Registry",
        "tag": "Expert Input:IBO.0009 - Enumerate The Windows Registry",
        "component": "Registry",
        "inputs": 6,
        "matches": 5,
        "apis": [
          "RegEnumKeyExA",
          "RegEnumKeyExW",
          "RegEnumKeyW",
          "RegEnumValueA",
          "RegEnumValueW"
        ]
      },
      {
        "intent": "Implements Features To Create/Manipulate The Windows Registry",
        "tag": "Expert Input:IBO.0008 - Create/Manipulate The Windows Registry",
        "component": "Registry",
        "inputs": 33,
        "matches": 9,
        "apis": [
          "RegCreateKeyExW",
          "RegDeleteKeyW",
          "RegDeleteValueW",
          "RegDisableReflectionKey",
          "RegEnableReflectionKey",
          "RegOpenKeyExW",
          "RegOpenKeyW",
          "RegSetValueExA",
          "RegSetValueExW"
        ]
      },
      {
        "intent": "Query And Discover Windows Registry Configuration Settings",
        "tag": "Discovery:T1012 - Query Registry",
        "component": "Registry",
        "inputs": 11,
        "matches": 4,
        "apis": [
          "RegQueryInfoKeyW",
          "RegQueryReflectionKey",
          "RegQueryValueExA",
          "RegQueryValueExW"
        ]
      },
      {
        "intent": "Implements Features To Remotely Connect To A Target System And Access Its Windows Registry",
        "tag": "Expert Input:IBO.00010 - Connect To Remote Windows Registry",
        "component": "Networking",
        "inputs": 2,
        "matches": 1,
        "apis": [
          "RegConnectRegistryW"
        ]
      },
      {
        "intent": "Enumerate Files or Directories on the Target System",
        "tag": "Discovery:T1083 - File and Directory Discovery",
        "component": "Filesystem",
        "inputs": 5,
        "matches": 1,
        "apis": [
          "FindFirstFileW"
        ]
      },
      {
        "intent": "Inject DLLs into Processes to evade defenses",
        "tag": "Defense Evasion:T1055 - Dynamic-Link Library Injection",
        "component": "Processes",
        "inputs": 4,
        "matches": 1,
        "apis": [
          "VirtualAlloc"
        ]
      },
      {
        "intent": "Implements Features To Execute or Spawn New Processes On The Target System As Another User Identity",
        "tag": "Expert Input:IBO.0003 - Spawn New Process As Different User",
        "component": "Processes",
        "inputs": 2,
        "matches": 1,
        "apis": [
          "CreateProcessAsUserW"
        ]
      },
      {
        "intent": "Query and Discovery General Attributes From The Target System",
        "tag": "Discovery:T1082 - System Information Discovery",
        "component": "---",
        "inputs": 3,
        "matches": 1,
        "apis": [
          "GetNativeSystemInfo"
        ]
      }
    ]
  }
}