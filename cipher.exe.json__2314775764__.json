{
  "pe_name": "cipher.exe",
  "pe_type": 523,
  "pe_size": 49664,
  "pe_subsystem": 3,
  "pe_subsystem_caption": "The Windows character (Cosole UI) subsystem",
  "pe_path": "c:\\Windows\\System32\\cipher.exe",
  "pe_timedate_stamp": 344809389,
  "pe_timedate_human": "1980-12-04T20:23:09.000Z",
  "ImageDLLImports": [
    {
      "name": "advapi32.dll",
      "imports": 22,
      "functions": [
        "AddUsersToEncryptedFile",
        "AddUsersToEncryptedFileEx",
        "ConvertStringSidToSidW",
        "CryptAcquireContextW",
        "CryptDestroyKey",
        "CryptGetUserKey",
        "CryptReleaseContext",
        "DecryptFileW",
        "EncryptFileW",
        "EncryptedFileKeyInfo",
        "EqualSid",
        "FlushEfsCache",
        "FreeEncryptedFileKeyInfo",
        "FreeEncryptionCertificateHashList",
        "LookupAccountSidW",
        "QueryRecoveryAgentsOnEncryptedFile",
        "QueryUsersOnEncryptedFile",
        "RegCloseKey",
        "RegOpenKeyExW",
        "RegQueryValueExW",
        "RemoveUsersFromEncryptedFile",
        "SetUserFileEncryptionKey"
      ]
    },
    {
      "name": "kernel32.dll",
      "imports": 64,
      "functions": [
        "CloseHandle",
        "CreateDirectoryW",
        "CreateFileW",
        "DelayLoadFailureHook",
        "DeviceIoControl",
        "FindClose",
        "FindFirstFileW",
        "FindFirstVolumeW",
        "FindNextFileW",
        "FindNextVolumeW",
        "FindVolumeClose",
        "FlushFileBuffers",
        "FormatMessageW",
        "GetComputerNameW",
        "GetConsoleMode",
        "GetCurrentDirectoryW",
        "GetCurrentProcess",
        "GetCurrentProcessId",
        "GetCurrentThreadId",
        "GetDiskFreeSpaceExW",
        "GetDiskFreeSpaceW",
        "GetDriveTypeW",
        "GetFileAttributesW",
        "GetFileType",
        "GetFullPathNameW",
        "GetLastError",
        "GetModuleHandleW",
        "GetProcAddress",
        "GetProcessHeap",
        "GetStdHandle",
        "GetSystemTimeAsFileTime",
        "GetTempFileNameW",
        "GetTickCount",
        "GetVolumeInformationW",
        "GetVolumeNameForVolumeMountPointW",
        "GetVolumePathNameW",
        "HeapAlloc",
        "HeapFree",
        "HeapSetInformation",
        "LocalFree",
        "QueryDosDeviceW",
        "QueryPerformanceCounter",
        "ReadConsoleW",
        "RemoveDirectoryW",
        "ResolveDelayLoadedAPI",
        "SetConsoleMode",
        "SetCurrentDirectoryW",
        "SetEndOfFile",
        "SetErrorMode",
        "SetFilePointer",
        "SetLastError",
        "SetUnhandledExceptionFilter",
        "Sleep",
        "TerminateProcess",
        "UnhandledExceptionFilter",
        "VerSetConditionMask",
        "VerifyVersionInfoW",
        "VirtualAlloc",
        "VirtualFree",
        "WideCharToMultiByte",
        "WriteConsoleW",
        "WriteFile",
        "lstrcmpW",
        "lstrlenW"
      ]
    },
    {
      "name": "msvcrt.dll",
      "imports": 28,
      "functions": [
        "?terminate@@YAXXZ",
        "_XcptFilter",
        "__C_specific_handler",
        "__iob_func",
        "__set_app_type",
        "__setusermatherr",
        "__wgetmainargs",
        "_amsg_exit",
        "_cexit",
        "_commode",
        "_exit",
        "_fmode",
        "_get_osfhandle",
        "_initterm",
        "_putws",
        "_vsnwprintf",
        "_wcsicmp",
        "_wcsnicmp",
        "exit",
        "fgetws",
        "getchar",
        "memcpy",
        "memset",
        "printf",
        "strcmp",
        "towupper",
        "wcschr",
        "wcscmp"
      ]
    },
    {
      "name": "ntdll.dll",
      "imports": 4,
      "functions": [
        "RtlCaptureContext",
        "RtlLookupFunctionEntry",
        "RtlNtStatusToDosError",
        "RtlVirtualUnwind"
      ]
    },
    {
      "name": "rpcrt4.dll",
      "imports": 3,
      "functions": [
        "RpcStringFreeW",
        "UuidCreate",
        "UuidToStringW"
      ]
    },
    {
      "name": "user32.dll",
      "imports": 1,
      "functions": [
        "MessageBoxW"
      ]
    },
    {
      "name": "ntdsapi.dll",
      "imports": 4,
      "functions": [
        "DsBindW",
        "DsCrackNamesW",
        "DsFreeNameResultW",
        "DsUnBindW"
      ]
    },
    {
      "name": "crypt32.dll",
      "imports": 12,
      "functions": [
        "CertAddCertificateContextToStore",
        "CertCloseStore",
        "CertEnumCertificatesInStore",
        "CertFindCertificateInStore",
        "CertFreeCertificateContext",
        "CertGetCertificateContextProperty",
        "CertGetEnhancedKeyUsage",
        "CertOpenStore",
        "CryptBinaryToStringW",
        "CryptQueryObject",
        "CryptStringToBinaryW",
        "PFXExportCertStoreEx"
      ]
    },
    {
      "name": "bcrypt.dll",
      "imports": 7,
      "functions": [
        "BCryptCloseAlgorithmProvider",
        "BCryptDestroyKey",
        "BCryptEncrypt",
        "BCryptGenRandom",
        "BCryptGenerateSymmetricKey",
        "BCryptGetProperty",
        "BCryptOpenAlgorithmProvider"
      ]
    },
    {
      "name": "efsutil.dll",
      "imports": 3,
      "functions": [
        "EfsUtilCreateSelfSignedCertificate",
        "EfsUtilGetCurrentUserInformation",
        "EfsUtilGetSmartcardProviderName"
      ]
    },
    {
      "name": "feclient.dll",
      "imports": 3,
      "functions": [
        "EfsClientFreeProtectorList",
        "EfsClientGetEncryptedFileVersion",
        "EfsClientQueryProtectors"
      ]
    },
    {
      "name": "dsrole.dll",
      "imports": 2,
      "functions": [
        "DsRoleFreeMemory",
        "DsRoleGetPrimaryDomainInformation"
      ]
    }
  ],
  "ImageDLLExports": {
    "exports": 0,
    "functions": []
  },
  "ImageHashSignatures": {
    "sha2": "a6b2cfde3e3de872d9edd6a16710ed6c8ee32a0dfcf57322b27b3da8d18ae71a"
  },
  "scan": {
    "intentions": 7,
    "uniq_apis_matched": 8,
    "results": [
      {
        "intent": "Query And Discover Windows Registry Configuration Settings",
        "tag": "Discovery:T1012 - Query Registry",
        "component": "Registry",
        "inputs": 11,
        "matches": 1,
        "apis": [
          "RegQueryValueExW"
        ]
      },
      {
        "intent": "Discover Configuration Attributes/Descriptions of the Windows Enterprise Domain",
        "tag": "Reconnaissance:T1590.001 - Domain Properties (Windows Enterprise)",
        "component": "---",
        "inputs": 24,
        "matches": 1,
        "apis": [
          "DsRoleGetPrimaryDomainInformation"
        ]
      },
      {
        "intent": "Implements Features To Create/Manipulate The Windows Registry",
        "tag": "Expert Input:IBO.0008 - Create/Manipulate The Windows Registry",
        "component": "Registry",
        "inputs": 33,
        "matches": 1,
        "apis": [
          "RegOpenKeyExW"
        ]
      },
      {
        "intent": "Enumerate Files or Directories on the Target System",
        "tag": "Discovery:T1083 - File and Directory Discovery",
        "component": "Filesystem",
        "inputs": 5,
        "matches": 1,
        "apis": [
          "FindFirstFileW"
        ]
      },
      {
        "intent": "Implements Delayed Loads of DLL Resources",
        "tag": "Expert Input:IBO.0005 - Load DLL Resources With Delay During Runtime",
        "component": "---",
        "inputs": 2,
        "matches": 2,
        "apis": [
          "DelayLoadFailureHook",
          "ResolveDelayLoadedAPI"
        ]
      },
      {
        "intent": "Inject DLLs into Processes to evade defenses",
        "tag": "Defense Evasion:T1055 - Dynamic-Link Library Injection",
        "component": "Processes",
        "inputs": 4,
        "matches": 1,
        "apis": [
          "VirtualAlloc"
        ]
      },
      {
        "intent": "Implements Features For User CLI Experience",
        "tag": "Expert Input:IBO.0001 - Accepts CommandLine Arguments",
        "component": "Processes",
        "inputs": 3,
        "matches": 1,
        "apis": [
          "__wgetmainargs"
        ]
      }
    ]
  }
}