{
  "name": "secur32.dll",
  "path": "\\\\?\\C:\\Windows\\SysWOW64\\secur32.dll",
  "size": 23040,
  "is_64": false,
  "is_lib": true,
  "is_dotnet": true,
  "has_imports": true,
  "has_exports": true,
  "subsystem": 3,
  "subsystem_caption": "The Windows Character (Console UI) Subsystem",
  "libs": [
    "api-ms-win-core-delayload-l1-1-0.dll",
    "api-ms-win-core-delayload-l1-1-1.dll",
    "api-ms-win-core-errorhandling-l1-1-0.dll",
    "api-ms-win-core-heap-l2-1-0.dll",
    "api-ms-win-core-libraryloader-l1-2-0.dll",
    "api-ms-win-core-processthreads-l1-1-0.dll",
    "api-ms-win-core-profile-l1-1-0.dll",
    "api-ms-win-core-string-obsolete-l1-1-0.dll",
    "api-ms-win-core-sysinfo-l1-1-0.dll",
    "api-ms-win-security-activedirectoryclient-l1-1-0.dll",
    "ntdll.dll"
  ],
  "imports": [
    {
      "lib": "api-ms-win-core-delayload-l1-1-1.dll",
      "count": 1,
      "functions": [
        "ResolveDelayLoadedAPI"
      ]
    },
    {
      "lib": "ntdll.dll",
      "count": 26,
      "functions": [
        "NtClose",
        "NtMapViewOfSection",
        "NtOpenSection",
        "NtUnmapViewOfSection",
        "RtlAllocateHeap",
        "RtlAnsiStringToUnicodeString",
        "RtlCaptureContext",
        "RtlCopyUnicodeString",
        "RtlCreateUnicodeString",
        "RtlEqualUnicodeString",
        "RtlFreeHeap",
        "RtlFreeUnicodeString",
        "RtlGetNtProductType",
        "RtlInitAnsiString",
        "RtlInitUnicodeString",
        "RtlNtStatusToDosError",
        "RtlUnicodeStringToAnsiString",
        "RtlUpcaseUnicodeString",
        "_itow",
        "iswdigit",
        "iswspace",
        "memcpy",
        "memset",
        "wcschr",
        "wcsncmp",
        "wcsncpy_s"
      ]
    },
    {
      "lib": "api-ms-win-core-heap-l2-1-0.dll",
      "count": 2,
      "functions": [
        "LocalAlloc",
        "LocalFree"
      ]
    },
    {
      "lib": "api-ms-win-core-delayload-l1-1-0.dll",
      "count": 1,
      "functions": [
        "DelayLoadFailureHook"
      ]
    },
    {
      "lib": "api-ms-win-core-libraryloader-l1-2-0.dll",
      "count": 3,
      "functions": [
        "DisableThreadLibraryCalls",
        "GetModuleHandleW",
        "GetProcAddress"
      ]
    },
    {
      "lib": "api-ms-win-core-string-obsolete-l1-1-0.dll",
      "count": 1,
      "functions": [
        "lstrcmpW"
      ]
    },
    {
      "lib": "api-ms-win-core-profile-l1-1-0.dll",
      "count": 1,
      "functions": [
        "QueryPerformanceCounter"
      ]
    },
    {
      "lib": "api-ms-win-core-processthreads-l1-1-0.dll",
      "count": 4,
      "functions": [
        "GetCurrentProcess",
        "GetCurrentProcessId",
        "GetCurrentThreadId",
        "TerminateProcess"
      ]
    },
    {
      "lib": "api-ms-win-security-activedirectoryclient-l1-1-0.dll",
      "count": 4,
      "functions": [
        "DsBindWithSpnExW",
        "DsCrackNamesW",
        "DsFreeNameResultW",
        "DsUnBindW"
      ]
    },
    {
      "lib": "api-ms-win-core-sysinfo-l1-1-0.dll",
      "count": 3,
      "functions": [
        "GetComputerNameExW",
        "GetSystemTimeAsFileTime",
        "GetTickCount"
      ]
    },
    {
      "lib": "api-ms-win-core-errorhandling-l1-1-0.dll",
      "count": 4,
      "functions": [
        "GetLastError",
        "SetLastError",
        "SetUnhandledExceptionFilter",
        "UnhandledExceptionFilter"
      ]
    }
  ],
  "exports": {
    "count": 101,
    "functions": [
      "AcceptSecurityContext",
      "AcquireCredentialsHandleA",
      "AcquireCredentialsHandleW",
      "AddCredentialsA",
      "AddCredentialsW",
      "AddSecurityPackageA",
      "AddSecurityPackageW",
      "ApplyControlToken",
      "ChangeAccountPasswordA",
      "ChangeAccountPasswordW",
      "CloseLsaPerformanceData",
      "CollectLsaPerformanceData",
      "CompleteAuthToken",
      "CredMarshalTargetInfo",
      "CredUnmarshalTargetInfo",
      "DecryptMessage",
      "DeleteSecurityContext",
      "DeleteSecurityPackageA",
      "DeleteSecurityPackageW",
      "EncryptMessage",
      "EnumerateSecurityPackagesA",
      "EnumerateSecurityPackagesW",
      "ExportSecurityContext",
      "FreeContextBuffer",
      "FreeCredentialsHandle",
      "GetComputerObjectNameA",
      "GetComputerObjectNameW",
      "GetSecurityUserInfo",
      "GetUserNameExA",
      "GetUserNameExW",
      "ImpersonateSecurityContext",
      "ImportSecurityContextA",
      "ImportSecurityContextW",
      "InitSecurityInterfaceA",
      "InitSecurityInterfaceW",
      "InitializeSecurityContextA",
      "InitializeSecurityContextW",
      "LsaCallAuthenticationPackage",
      "LsaConnectUntrusted",
      "LsaDeregisterLogonProcess",
      "LsaEnumerateLogonSessions",
      "LsaFreeReturnBuffer",
      "LsaGetLogonSessionData",
      "LsaLogonUser",
      "LsaLookupAuthenticationPackage",
      "LsaRegisterLogonProcess",
      "LsaRegisterPolicyChangeNotification",
      "LsaUnregisterPolicyChangeNotification",
      "MakeSignature",
      "OpenLsaPerformanceData",
      "QueryContextAttributesA",
      "QueryContextAttributesW",
      "QueryCredentialsAttributesA",
      "QueryCredentialsAttributesW",
      "QuerySecurityContextToken",
      "QuerySecurityPackageInfoA",
      "QuerySecurityPackageInfoW",
      "RevertSecurityContext",
      "SaslAcceptSecurityContext",
      "SaslEnumerateProfilesA",
      "SaslEnumerateProfilesW",
      "SaslGetContextOption",
      "SaslGetProfilePackageA",
      "SaslGetProfilePackageW",
      "SaslIdentifyPackageA",
      "SaslIdentifyPackageW",
      "SaslInitializeSecurityContextA",
      "SaslInitializeSecurityContextW",
      "SaslSetContextOption",
      "SealMessage",
      "SeciAllocateAndSetCallFlags",
      "SeciAllocateAndSetIPAddress",
      "SeciFreeCallContext",
      "SecpFreeMemory",
      "SecpTranslateName",
      "SecpTranslateNameEx",
      "SetContextAttributesA",
      "SetContextAttributesW",
      "SetCredentialsAttributesA",
      "SetCredentialsAttributesW",
      "SspiCompareAuthIdentities",
      "SspiCopyAuthIdentity",
      "SspiDecryptAuthIdentity",
      "SspiEncodeAuthIdentityAsStrings",
      "SspiEncodeStringsAsAuthIdentity",
      "SspiEncryptAuthIdentity",
      "SspiExcludePackage",
      "SspiFreeAuthIdentity",
      "SspiGetTargetHostName",
      "SspiIsAuthIdentityEncrypted",
      "SspiLocalFree",
      "SspiMarshalAuthIdentity",
      "SspiPrepareForCredRead",
      "SspiPrepareForCredWrite",
      "SspiUnmarshalAuthIdentity",
      "SspiValidateAuthIdentity",
      "SspiZeroAuthIdentity",
      "TranslateNameA",
      "TranslateNameW",
      "UnsealMessage",
      "VerifySignature"
    ]
  },
  "hashes": {
    "sha2": "a074aa8c960ff9f9f609604db0b6fefdd454ceb746de6749753a551fe7b99b51",
    "ssdeep": "384:A9zuL7jiVVvNORNHzTdXaP4osxlUoLYuC/NWiOCW:A8zc2RJdqP4oLoQ/8"
  },
  "intent": {
    "intentions": 4,
    "uniq_apis_matched": 5,
    "results": [
      {
        "intent": "Discovers Configuration Attributes of the Windows Enterprise Domain",
        "tag": "Reconnaissance:T1590.001 - Domain Properties (Windows Enterprise)",
        "component": "---",
        "inputs": 24,
        "matches": 1,
        "apis": [
          "DsBindWithSpnExW"
        ]
      },
      {
        "intent": "Can Delay Loading of DLLs Until Runtime/Process Execution",
        "tag": "Expert Input:IBO.005 - Load DLL Resources With Delay During Runtime",
        "component": "Memory",
        "inputs": 2,
        "matches": 2,
        "apis": [
          "DelayLoadFailureHook",
          "ResolveDelayLoadedAPI"
        ]
      },
      {
        "intent": "Queries and Discovers General Attributes From The Target System",
        "tag": "Discovery:T1082 - System Information Discovery",
        "component": "---",
        "inputs": 3,
        "matches": 1,
        "apis": [
          "RtlGetNtProductType"
        ]
      },
      {
        "intent": "Can Terminate Processes On The Target System",
        "tag": "Expert Input:IBO.0025",
        "component": "Processes",
        "inputs": 1,
        "matches": 1,
        "apis": [
          "TerminateProcess"
        ]
      }
    ]
  },
  "os": "win10"
}