{
  "name": "utildll.dll",
  "path": "\\\\?\\C:\\Windows\\SysWOW64\\utildll.dll",
  "size": 40784,
  "is_64": false,
  "is_lib": true,
  "is_dotnet": true,
  "has_imports": true,
  "has_exports": true,
  "subsystem": 3,
  "subsystem_caption": "The Windows Character (Console UI) Subsystem",
  "libs": [
    "advapi32.dll",
    "kernel32.dll",
    "msvcrt.dll",
    "netutils.dll",
    "ntdll.dll",
    "samcli.dll",
    "user32.dll",
    "winsta.dll"
  ],
  "imports": [
    {
      "lib": "winsta.dll",
      "count": 1,
      "functions": [
        "WinStationQueryInformationW"
      ]
    },
    {
      "lib": "user32.dll",
      "count": 4,
      "functions": [
        "LoadCursorW",
        "LoadStringW",
        "MessageBoxW",
        "SetCursor"
      ]
    },
    {
      "lib": "samcli.dll",
      "count": 1,
      "functions": [
        "NetLocalGroupGetMembers"
      ]
    },
    {
      "lib": "netutils.dll",
      "count": 1,
      "functions": [
        "NetApiBufferFree"
      ]
    },
    {
      "lib": "kernel32.dll",
      "count": 38,
      "functions": [
        "CloseHandle",
        "CommConfigDialogW",
        "CreateFileW",
        "DelayLoadFailureHook",
        "FileTimeToLocalFileTime",
        "FileTimeToSystemTime",
        "FormatMessageW",
        "FreeLibrary",
        "GetCurrentProcess",
        "GetCurrentProcessId",
        "GetCurrentThreadId",
        "GetDateFormatW",
        "GetDefaultCommConfigW",
        "GetLastError",
        "GetLocalTime",
        "GetModuleHandleW",
        "GetProcAddress",
        "GetSystemTimeAsFileTime",
        "GetTickCount",
        "GetTimeFormatW",
        "GlobalAlloc",
        "GlobalFree",
        "LoadLibraryW",
        "LocalAlloc",
        "LocalFree",
        "MultiByteToWideChar",
        "QueryDosDeviceW",
        "QueryPerformanceCounter",
        "ResolveDelayLoadedAPI",
        "SetDefaultCommConfigW",
        "SetLastError",
        "SetUnhandledExceptionFilter",
        "Sleep",
        "SystemTimeToFileTime",
        "TerminateProcess",
        "UnhandledExceptionFilter",
        "WideCharToMultiByte",
        "lstrcmpiW"
      ]
    },
    {
      "lib": "ntdll.dll",
      "count": 23,
      "functions": [
        "NtQueryVolumeInformationFile",
        "RtlAllocateAndInitializeSid",
        "RtlEnterCriticalSection",
        "RtlExtendedLargeIntegerDivide",
        "RtlFreeSid",
        "RtlInitializeCriticalSection",
        "RtlLeaveCriticalSection",
        "RtlUnwind",
        "_chkstk",
        "_vsnwprintf",
        "_wcsicmp",
        "_wcslwr",
        "_wcsnicmp",
        "memcpy",
        "memcpy_s",
        "memset",
        "strstr",
        "swprintf_s",
        "vswprintf_s",
        "wcscat_s",
        "wcscpy_s",
        "wcsrchr",
        "wcsstr"
      ]
    },
    {
      "lib": "msvcrt.dll",
      "count": 7,
      "functions": [
        "_XcptFilter",
        "__iob_func",
        "_amsg_exit",
        "_initterm",
        "free",
        "fwprintf",
        "malloc"
      ]
    },
    {
      "lib": "advapi32.dll",
      "count": 16,
      "functions": [
        "CheckTokenMembership",
        "CopySid",
        "EqualSid",
        "GetLengthSid",
        "LookupAccountSidW",
        "LsaClose",
        "LsaFreeMemory",
        "LsaOpenPolicy",
        "LsaQueryInformationPolicy",
        "RegCloseKey",
        "RegEnumKeyExW",
        "RegEnumValueW",
        "RegOpenKeyExA",
        "RegOpenKeyExW",
        "RegQueryValueExA",
        "RegQueryValueExW"
      ]
    }
  ],
  "exports": {
    "count": 34,
    "functions": [
      "AsyncDeviceEnumerate",
      "CachedGetUserFromSid",
      "CalculateDiffTime",
      "CalculateElapsedTime",
      "CompareElapsedTime",
      "ConfigureModem",
      "CurrentDateTimeString",
      "DateTimeString",
      "ElapsedTimeString",
      "EnumerateMultiUserServers",
      "FormDecoratedAsyncDeviceName",
      "GetAssociatedPortName",
      "GetSystemMessageA",
      "GetSystemMessageW",
      "GetUnknownString",
      "GetUserFromSid",
      "HaveAnonymousUsersChanged",
      "InitializeAnonymousUserCompareList",
      "InstallModem",
      "IsPartOfDomain",
      "NetBIOSDeviceEnumerate",
      "NetworkDeviceEnumerate",
      "ParseDecoratedAsyncDeviceName",
      "QueryCurrentWinStation",
      "RegGetNetworkDeviceName",
      "RegGetNetworkServiceName",
      "StandardErrorMessage",
      "StrAsyncConnectState",
      "StrConnectState",
      "StrProcessState",
      "StrSdClass",
      "StrSystemWaitReason",
      "TestUserForAdmin",
      "WinEnumerateDevices"
    ]
  },
  "hashes": {
    "sha2": "325edd3adcb12713f2c50c0041cff2de1791192c9fad8e79c867179879aed306",
    "ssdeep": "768:gVMmS56ZTtkcOGfldc9L0Ug0L9fFUcMYgI1P8q8A:qMm0mtkcO6c9L0Ugcf2ilP8X"
  },
  "intent": {
    "intentions": 6,
    "uniq_apis_matched": 10,
    "results": [
      {
        "intent": "Can Create/Manipulate The Windows Registry",
        "tag": "Expert Input:IBO.008 - Create/Manipulate The Windows Registry",
        "component": "Registry",
        "inputs": 33,
        "matches": 2,
        "apis": [
          "RegOpenKeyExA",
          "RegOpenKeyExW"
        ]
      },
      {
        "intent": "Queries And Discovers Windows Registry Configuration Settings",
        "tag": "Discovery:T1012 - Query Registry",
        "component": "Registry",
        "inputs": 11,
        "matches": 2,
        "apis": [
          "RegQueryValueExA",
          "RegQueryValueExW"
        ]
      },
      {
        "intent": "Can Delay Loading of DLLs Until Runtime/Process Execution",
        "tag": "Expert Input:IBO.005 - Load DLL Resources With Delay During Runtime",
        "component": "Memory",
        "inputs": 2,
        "matches": 2,
        "apis": [
          "DelayLoadFailureHook",
          "ResolveDelayLoadedAPI"
        ]
      },
      {
        "intent": "Can Enumerate The Windows Registry",
        "tag": "Expert Input:IBO.009 - Enumerate The Windows Registry",
        "component": "Registry",
        "inputs": 6,
        "matches": 2,
        "apis": [
          "RegEnumKeyExW",
          "RegEnumValueW"
        ]
      },
      {
        "intent": "Can Access And Read Windows Tokens",
        "tag": "Expert Input:IBO.0020 - Windows Token Access",
        "component": "Privileges",
        "inputs": 4,
        "matches": 1,
        "apis": [
          "CheckTokenMembership"
        ]
      },
      {
        "intent": "Can Terminate Processes On The Target System",
        "tag": "Expert Input:IBO.0025",
        "component": "Processes",
        "inputs": 1,
        "matches": 1,
        "apis": [
          "TerminateProcess"
        ]
      }
    ]
  }
}