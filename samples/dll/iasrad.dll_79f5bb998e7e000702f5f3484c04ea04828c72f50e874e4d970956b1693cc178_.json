{
  "name": "iasrad.dll",
  "path": "\\\\?\\C:\\Windows\\SysWOW64\\iasrad.dll",
  "size": 190464,
  "is_64": false,
  "is_lib": true,
  "is_dotnet": true,
  "has_imports": true,
  "has_exports": true,
  "subsystem": 3,
  "subsystem_caption": "The Windows Character (Console UI) Subsystem",
  "libs": [
    "advapi32.dll",
    "api-ms-win-core-com-l1-1-0.dll",
    "atl.dll",
    "bcrypt.dll",
    "iassvcs.dll",
    "iphlpapi.dll",
    "kernel32.dll",
    "msvcrt.dll",
    "ntdll.dll",
    "oleaut32.dll",
    "rtutils.dll",
    "ws2_32.dll"
  ],
  "imports": [
    {
      "lib": "iphlpapi.dll",
      "count": 2,
      "functions": [
        "GetAdaptersAddresses",
        "ParseNetworkString"
      ]
    },
    {
      "lib": "rtutils.dll",
      "count": 3,
      "functions": [
        "TraceDeregisterW",
        "TraceRegisterExW",
        "TraceVprintfExA"
      ]
    },
    {
      "lib": "api-ms-win-core-com-l1-1-0.dll",
      "count": 6,
      "functions": [
        "CLSIDFromProgID",
        "CoCreateGuid",
        "CoCreateInstance",
        "CoGetClassObject",
        "CoTaskMemAlloc",
        "CoTaskMemFree"
      ]
    },
    {
      "lib": "iassvcs.dll",
      "count": 13,
      "functions": [
        "IASAdler32",
        "IASGetHostByName",
        "IASGetLocalDictionary",
        "IASGetProductLimits",
        "IASGlobalLock",
        "IASGlobalUnlock",
        "IASRadiusCrypt",
        "IASRegisterComponent",
        "IASReportEvent",
        "IASReportLicenseViolation",
        "IASReportSecurityEvent",
        "IASRequestThread",
        "IASVariantChangeType"
      ]
    },
    {
      "lib": "msvcrt.dll",
      "count": 46,
      "functions": [
        "??0exception@@QAE@ABQBD@Z",
        "??0exception@@QAE@ABV0@@Z",
        "??0exception@@QAE@XZ",
        "??1exception@@UAE@XZ",
        "??1type_info@@UAE@XZ",
        "?terminate@@YAXXZ",
        "?what@exception@@UBEPBDXZ",
        "_CxxThrowException",
        "_XcptFilter",
        "__CxxFrameHandler3",
        "__dllonexit",
        "_amsg_exit",
        "_callnewh",
        "_except_handler4_common",
        "_ftol2",
        "_initterm",
        "_itow",
        "_lock",
        "_onexit",
        "_purecall",
        "_strnicmp",
        "_ultow",
        "_unlock",
        "_wcsicmp",
        "_wcsupr_s",
        "bsearch",
        "free",
        "iswdigit",
        "malloc",
        "memcmp",
        "memcpy",
        "memcpy_s",
        "memmove",
        "memmove_s",
        "memset",
        "qsort",
        "sprintf_s",
        "swprintf_s",
        "vsprintf_s",
        "wcscat_s",
        "wcschr",
        "wcscpy_s",
        "wcscspn",
        "wcsrchr",
        "wcsspn",
        "wcstoul"
      ]
    },
    {
      "lib": "bcrypt.dll",
      "count": 4,
      "functions": [
        "BCryptCreateHash",
        "BCryptDestroyHash",
        "BCryptFinishHash",
        "BCryptHashData"
      ]
    },
    {
      "lib": "ntdll.dll",
      "count": 5,
      "functions": [
        "RtlAllocateHeap",
        "RtlFreeHeap",
        "RtlImageNtHeader",
        "RtlIpv6StringToAddressW",
        "RtlRandom"
      ]
    },
    {
      "lib": "oleaut32.dll",
      "count": 8,
      "functions": [
        "ORDINAL 150",
        "ORDINAL 162",
        "ORDINAL 2",
        "ORDINAL 201",
        "ORDINAL 6",
        "ORDINAL 7",
        "ORDINAL 8",
        "ORDINAL 9"
      ]
    },
    {
      "lib": "atl.dll",
      "count": 7,
      "functions": [
        "ORDINAL 15",
        "ORDINAL 16",
        "ORDINAL 18",
        "ORDINAL 21",
        "ORDINAL 22",
        "ORDINAL 30",
        "ORDINAL 32"
      ]
    },
    {
      "lib": "advapi32.dll",
      "count": 24,
      "functions": [
        "AddAccessAllowedAce",
        "CloseServiceHandle",
        "ConvertStringSidToSidW",
        "CreateWellKnownSid",
        "CryptAcquireContextW",
        "CryptGenRandom",
        "CryptReleaseContext",
        "GetLengthSid",
        "GetTraceEnableFlags",
        "GetTraceEnableLevel",
        "GetTraceLoggerHandle",
        "InitializeAcl",
        "InitializeSecurityDescriptor",
        "OpenSCManagerA",
        "OpenServiceA",
        "QueryServiceStatusEx",
        "RegCloseKey",
        "RegOpenKeyExW",
        "RegOpenKeyW",
        "RegQueryValueExW",
        "RegisterTraceGuidsW",
        "SetSecurityDescriptorDacl",
        "TraceMessage",
        "UnregisterTraceGuids"
      ]
    },
    {
      "lib": "ws2_32.dll",
      "count": 20,
      "functions": [
        "FreeAddrInfoW",
        "GetAddrInfoW",
        "GetNameInfoW",
        "ORDINAL 10",
        "ORDINAL 111",
        "ORDINAL 15",
        "ORDINAL 16",
        "ORDINAL 17",
        "ORDINAL 18",
        "ORDINAL 2",
        "ORDINAL 20",
        "ORDINAL 21",
        "ORDINAL 23",
        "ORDINAL 3",
        "ORDINAL 6",
        "ORDINAL 8",
        "ORDINAL 9",
        "WSARecvFrom",
        "WSASendTo",
        "WSASocketW"
      ]
    },
    {
      "lib": "kernel32.dll",
      "count": 49,
      "functions": [
        "CloseHandle",
        "CreateEventW",
        "CreateFileMappingW",
        "CreateMutexW",
        "CreateSemaphoreW",
        "DeleteCriticalSection",
        "DisableThreadLibraryCalls",
        "EnterCriticalSection",
        "FileTimeToSystemTime",
        "FormatMessageA",
        "FormatMessageW",
        "GetComputerNameExW",
        "GetComputerNameW",
        "GetCurrentProcess",
        "GetCurrentProcessId",
        "GetCurrentThreadId",
        "GetLastError",
        "GetModuleFileNameW",
        "GetModuleHandleW",
        "GetSystemInfo",
        "GetSystemTimeAsFileTime",
        "GetTickCount",
        "GlobalAlloc",
        "GlobalFree",
        "InitializeCriticalSection",
        "InitializeCriticalSectionAndSpinCount",
        "LeaveCriticalSection",
        "LocalFree",
        "MapViewOfFile",
        "MultiByteToWideChar",
        "OutputDebugStringA",
        "QueryPerformanceCounter",
        "ReleaseMutex",
        "ReleaseSemaphore",
        "ResetEvent",
        "SetEvent",
        "SetThreadStackGuarantee",
        "SetUnhandledExceptionFilter",
        "Sleep",
        "SwitchToThread",
        "TerminateProcess",
        "TryEnterCriticalSection",
        "UnhandledExceptionFilter",
        "UnmapViewOfFile",
        "VirtualAlloc",
        "VirtualProtect",
        "VirtualQuery",
        "WaitForSingleObject",
        "WideCharToMultiByte"
      ]
    }
  ],
  "exports": {
    "count": 9,
    "functions": [
      "?initialize@VSAFilter@@QAEJXZ",
      "?radiusFromIAS@VSAFilter@@QBEJPAUIAttributesRaw@@H@Z",
      "?radiusToIAS@VSAFilter@@QBEJPAEKAAVIASAttributeVector@IASTL@@@Z",
      "?radiusToIAS@VSAFilter@@QBEJPAUIAttributesRaw@@@Z",
      "?shutdown@VSAFilter@@QAEJXZ",
      "DllCanUnloadNow",
      "DllGetClassObject",
      "DllRegisterServer",
      "DllUnregisterServer"
    ]
  },
  "hashes": {
    "sha2": "79f5bb998e7e000702f5f3484c04ea04828c72f50e874e4d970956b1693cc178",
    "ssdeep": "3072:RifISEruR8RHpt5pK6Ny78+n5uMjY0iVUL174+KchGHVGz8CT+k+Be/xZMpr:ROIz6SRlplAn5uMUx81wIG1+X+Be/DM5"
  },
  "intent": {
    "intentions": 10,
    "uniq_apis_matched": 23,
    "results": [
      {
        "intent": "Can Manipulate Access Control Mechanisms",
        "tag": "Expert Input:IBO.0021 - Windows Access Control Lists",
        "component": "Privileges",
        "inputs": 15,
        "matches": 3,
        "apis": [
          "AddAccessAllowedAce",
          "InitializeAcl",
          "SetSecurityDescriptorDacl"
        ]
      },
      {
        "intent": "Can Terminate Processes On The Target System",
        "tag": "Expert Input:IBO.0025",
        "component": "Processes",
        "inputs": 1,
        "matches": 1,
        "apis": [
          "TerminateProcess"
        ]
      },
      {
        "intent": "Can Conduct Cryptographic Operations",
        "tag": "Expert Input:IBO.0022 - Windows Cryptography Facilities",
        "component": "Crypto",
        "inputs": 71,
        "matches": 7,
        "apis": [
          "BCryptCreateHash",
          "BCryptDestroyHash",
          "BCryptFinishHash",
          "BCryptHashData",
          "CryptAcquireContextW",
          "CryptGenRandom",
          "CryptReleaseContext"
        ]
      },
      {
        "intent": "Can Create/Manipulate System Services",
        "tag": "Expert Input:IBO.007 - Create/Manipulate System Services",
        "component": "Services",
        "inputs": 19,
        "matches": 1,
        "apis": [
          "CloseServiceHandle"
        ]
      },
      {
        "intent": "Can Enumerate/Discover System Services And Their Configuration Data",
        "tag": "Expert Input:IBO.006 - Enumerate System Services",
        "component": "Services",
        "inputs": 28,
        "matches": 3,
        "apis": [
          "OpenSCManagerA",
          "OpenServiceA",
          "QueryServiceStatusEx"
        ]
      },
      {
        "intent": "Queries And Discovers Windows Registry Configuration Settings",
        "tag": "Discovery:T1012 - Query Registry",
        "component": "Registry",
        "inputs": 11,
        "matches": 1,
        "apis": [
          "RegQueryValueExW"
        ]
      },
      {
        "intent": "Can Conduct DNS Queries",
        "tag": "Expert Input:IBO.0014 - Network Layer-7 DNS Usage",
        "component": "Networking",
        "inputs": 31,
        "matches": 2,
        "apis": [
          "GetAddrInfoW",
          "GetNameInfoW"
        ]
      },
      {
        "intent": "Can Transmit/Receive Data Over The Network",
        "tag": "Expert Input:IBO.0011 - Network Socket Send/Receive",
        "component": "Networking",
        "inputs": 16,
        "matches": 2,
        "apis": [
          "WSARecvFrom",
          "WSASendTo"
        ]
      },
      {
        "intent": "Discovers Network Settings On The Target System",
        "tag": "Discovery:T1016 - System Network Configuration Discovery",
        "component": "Networking",
        "inputs": 41,
        "matches": 1,
        "apis": [
          "GetAdaptersAddresses"
        ]
      },
      {
        "intent": "Can Create/Manipulate The Windows Registry",
        "tag": "Expert Input:IBO.008 - Create/Manipulate The Windows Registry",
        "component": "Registry",
        "inputs": 33,
        "matches": 2,
        "apis": [
          "RegOpenKeyExW",
          "RegOpenKeyW"
        ]
      }
    ]
  }
}