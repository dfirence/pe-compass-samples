{
  "name": "aclui.dll",
  "path": "\\\\?\\C:\\Windows\\System32\\aclui.dll",
  "size": 587264,
  "is_64": true,
  "is_lib": true,
  "is_dotnet": false,
  "has_imports": true,
  "has_exports": true,
  "subsystem": 2,
  "subsystem_caption": "The Windows Graphical User Interface (GUI) Subsystem",
  "libs": [
    "advapi32.dll",
    "gdi32.dll",
    "kernel32.dll",
    "msvcrt.dll",
    "ntdll.dll",
    "ntdsapi.dll",
    "ole32.dll",
    "oleaut32.dll",
    "shell32.dll",
    "shlwapi.dll",
    "user32.dll",
    "xmllite.dll"
  ],
  "imports": [
    {
      "lib": "user32.dll",
      "count": 70,
      "functions": [
        "CallWindowProcW",
        "ClientToScreen",
        "CreateWindowExW",
        "DefWindowProcW",
        "DestroyIcon",
        "DestroyWindow",
        "DialogBoxParamW",
        "DrawFocusRect",
        "DrawTextW",
        "EnableWindow",
        "EndDialog",
        "EnumDisplaySettingsW",
        "FrameRect",
        "GetActiveWindow",
        "GetAncestor",
        "GetClientRect",
        "GetDC",
        "GetDlgCtrlID",
        "GetDlgItem",
        "GetDlgItemTextW",
        "GetFocus",
        "GetParent",
        "GetScrollInfo",
        "GetSysColor",
        "GetSysColorBrush",
        "GetSystemMetrics",
        "GetWindow",
        "GetWindowLongPtrW",
        "GetWindowLongW",
        "GetWindowPlacement",
        "GetWindowRect",
        "InflateRect",
        "IsWindowEnabled",
        "IsWindowVisible",
        "KillTimer",
        "LoadCursorW",
        "LoadIconW",
        "LoadImageW",
        "LoadStringW",
        "MapDialogRect",
        "MapWindowPoints",
        "MessageBoxW",
        "MoveWindow",
        "OffsetRect",
        "PostMessageW",
        "RedrawWindow",
        "RegisterClassW",
        "RegisterClipboardFormatW",
        "RegisterWindowMessageW",
        "ReleaseDC",
        "ScrollWindow",
        "SendDlgItemMessageW",
        "SendMessageW",
        "SetCursor",
        "SetDlgItemTextW",
        "SetFocus",
        "SetScrollInfo",
        "SetScrollPos",
        "SetTimer",
        "SetWindowLongPtrW",
        "SetWindowLongW",
        "SetWindowPlacement",
        "SetWindowPos",
        "SetWindowTextW",
        "ShowScrollBar",
        "ShowWindow",
        "SystemParametersInfoW",
        "UnregisterClassA",
        "UnregisterClassW",
        "keybd_event"
      ]
    },
    {
      "lib": "kernel32.dll",
      "count": 93,
      "functions": [
        "AcquireSRWLockShared",
        "ActivateActCtx",
        "CheckElevationEnabled",
        "CloseHandle",
        "CloseThreadpoolWait",
        "CompareStringEx",
        "CompareStringW",
        "CreateActCtxW",
        "CreateMutexExW",
        "CreateSemaphoreExW",
        "CreateThread",
        "CreateThreadpoolWait",
        "DeactivateActCtx",
        "DebugBreak",
        "DecodePointer",
        "DelayLoadFailureHook",
        "DeleteCriticalSection",
        "DisableThreadLibraryCalls",
        "EncodePointer",
        "EnterCriticalSection",
        "FindResourceExW",
        "FindResourceW",
        "FlushInstructionCache",
        "FormatMessageW",
        "FreeLibrary",
        "FreeLibraryAndExitThread",
        "GetCurrentProcess",
        "GetCurrentProcessId",
        "GetCurrentThread",
        "GetCurrentThreadId",
        "GetLastError",
        "GetModuleFileNameA",
        "GetModuleFileNameW",
        "GetModuleHandleExW",
        "GetModuleHandleW",
        "GetProcAddress",
        "GetProcessHeap",
        "GetSystemTimeAsFileTime",
        "GetTickCount",
        "GlobalLock",
        "GlobalUnlock",
        "HeapAlloc",
        "HeapDestroy",
        "HeapFree",
        "HeapReAlloc",
        "HeapSize",
        "InitOnceExecuteOnce",
        "InitializeCriticalSection",
        "InterlockedPopEntrySList",
        "InterlockedPushEntrySList",
        "IsDebuggerPresent",
        "LeaveCriticalSection",
        "LoadLibraryExA",
        "LoadLibraryExW",
        "LoadResource",
        "LocalAlloc",
        "LocalFree",
        "LocalReAlloc",
        "LockResource",
        "MulDiv",
        "MultiByteToWideChar",
        "OpenSemaphoreW",
        "OutputDebugStringA",
        "OutputDebugStringW",
        "QueryPerformanceCounter",
        "RaiseException",
        "ReleaseActCtx",
        "ReleaseMutex",
        "ReleaseSRWLockShared",
        "ReleaseSemaphore",
        "ResolveDelayLoadedAPI",
        "RtlCaptureContext",
        "RtlLookupFunctionEntry",
        "RtlVirtualUnwind",
        "SetEvent",
        "SetLastError",
        "SetThreadpoolWait",
        "SetUnhandledExceptionFilter",
        "SizeofResource",
        "Sleep",
        "TerminateProcess",
        "TlsAlloc",
        "TlsFree",
        "TlsGetValue",
        "UnhandledExceptionFilter",
        "VirtualAlloc",
        "VirtualFree",
        "WaitForSingleObject",
        "WaitForSingleObjectEx",
        "WaitForThreadpoolWaitCallbacks",
        "lstrcmpW",
        "lstrcmpiW",
        "lstrlenW"
      ]
    },
    {
      "lib": "oleaut32.dll",
      "count": 6,
      "functions": [
        "ORDINAL 2",
        "ORDINAL 23",
        "ORDINAL 24",
        "ORDINAL 4",
        "ORDINAL 5",
        "ORDINAL 6"
      ]
    },
    {
      "lib": "xmllite.dll",
      "count": 1,
      "functions": [
        "CreateXmlReader"
      ]
    },
    {
      "lib": "ntdll.dll",
      "count": 57,
      "functions": [
        "EtwGetTraceEnableFlags",
        "EtwGetTraceEnableLevel",
        "EtwGetTraceLoggerHandle",
        "EtwRegisterTraceGuidsW",
        "EtwTraceMessage",
        "EtwUnregisterTraceGuids",
        "RtlAbsoluteToSelfRelativeSD",
        "RtlAddAccessAllowedAceEx",
        "RtlAddAccessAllowedObjectAce",
        "RtlAddAccessDeniedAceEx",
        "RtlAddAccessDeniedObjectAce",
        "RtlAddAce",
        "RtlAddAuditAccessAceEx",
        "RtlAddAuditAccessObjectAce",
        "RtlAddScopedPolicyIDAce",
        "RtlConvertSidToUnicodeString",
        "RtlCopySid",
        "RtlCreateAcl",
        "RtlCreateSecurityDescriptor",
        "RtlCreateUnicodeString",
        "RtlDeleteCriticalSection",
        "RtlEqualSid",
        "RtlEqualUnicodeString",
        "RtlFirstFreeAce",
        "RtlFreeUnicodeString",
        "RtlGetAce",
        "RtlGetControlSecurityDescriptor",
        "RtlGetDaclSecurityDescriptor",
        "RtlGetGroupSecurityDescriptor",
        "RtlGetNtProductType",
        "RtlGetOwnerSecurityDescriptor",
        "RtlGetSaclSecurityDescriptor",
        "RtlInitUnicodeString",
        "RtlInitializeCriticalSectionEx",
        "RtlInitializeSid",
        "RtlIsCapabilitySid",
        "RtlIsPackageSid",
        "RtlLengthSid",
        "RtlNtStatusToDosError",
        "RtlNtStatusToDosErrorNoTeb",
        "RtlRunOnceExecuteOnce",
        "RtlSetDaclSecurityDescriptor",
        "RtlSetGroupSecurityDescriptor",
        "RtlSetOwnerSecurityDescriptor",
        "RtlSetSaclSecurityDescriptor",
        "RtlSubAuthorityCountSid",
        "RtlSubAuthoritySid",
        "RtlValidAcl",
        "RtlValidSid",
        "WinSqmAddToStream",
        "WinSqmEndSession",
        "WinSqmIncrementDWORD",
        "WinSqmIsOptedIn",
        "WinSqmIsOptedInEx",
        "WinSqmSetDWORD",
        "WinSqmSetString",
        "WinSqmStartSession"
      ]
    },
    {
      "lib": "msvcrt.dll",
      "count": 55,
      "functions": [
        "??0exception@@QEAA@AEBQEBD@Z",
        "??0exception@@QEAA@AEBQEBDH@Z",
        "??0exception@@QEAA@AEBV0@@Z",
        "??0exception@@QEAA@XZ",
        "??1exception@@UEAA@XZ",
        "??1type_info@@UEAA@XZ",
        "?terminate@@YAXXZ",
        "?what@exception@@UEBAPEBDXZ",
        "_CxxThrowException",
        "_XcptFilter",
        "__C_specific_handler",
        "__CxxFrameHandler3",
        "__RTDynamicCast",
        "__dllonexit",
        "_amsg_exit",
        "_errno",
        "_i64tow_s",
        "_initterm",
        "_itow_s",
        "_lock",
        "_onexit",
        "_ui64tow_s",
        "_ultow",
        "_ultow_s",
        "_unlock",
        "_vsnprintf_s",
        "_vsnwprintf",
        "_wcsnicmp",
        "_wcstoi64",
        "_wcstoui64",
        "floor",
        "free",
        "iswctype",
        "iswspace",
        "malloc",
        "memcmp",
        "memcpy",
        "memcpy_s",
        "memmove",
        "memmove_s",
        "memset",
        "realloc",
        "swprintf_s",
        "wcschr",
        "wcscmp",
        "wcscpy_s",
        "wcscspn",
        "wcsncmp",
        "wcsncpy_s",
        "wcsnlen",
        "wcspbrk",
        "wcsrchr",
        "wcsspn",
        "wcstok_s",
        "wcstoul"
      ]
    },
    {
      "lib": "shell32.dll",
      "count": 3,
      "functions": [
        "ORDINAL 258",
        "ORDINAL 259",
        "ORDINAL 6"
      ]
    },
    {
      "lib": "shlwapi.dll",
      "count": 7,
      "functions": [
        "ORDINAL 12",
        "ORDINAL 165",
        "ORDINAL 219",
        "ORDINAL 628",
        "PathAppendW",
        "StrChrW",
        "StrRChrW"
      ]
    },
    {
      "lib": "gdi32.dll",
      "count": 10,
      "functions": [
        "CreateDIBSection",
        "CreateFontIndirectW",
        "DeleteObject",
        "GetDeviceCaps",
        "GetObjectW",
        "GetTextExtentPoint32W",
        "SelectObject",
        "SetBkColor",
        "SetBkMode",
        "SetTextColor"
      ]
    },
    {
      "lib": "ntdsapi.dll",
      "count": 4,
      "functions": [
        "DsBindWithSpnExW",
        "DsCrackNamesW",
        "DsFreeNameResultW",
        "DsUnBindW"
      ]
    },
    {
      "lib": "ole32.dll",
      "count": 8,
      "functions": [
        "CoCreateGuid",
        "CoCreateInstance",
        "CoGetMalloc",
        "CoInitialize",
        "CoTaskMemFree",
        "CoTaskMemRealloc",
        "CoUninitialize",
        "ReleaseStgMedium"
      ]
    },
    {
      "lib": "advapi32.dll",
      "count": 44,
      "functions": [
        "AddAccessAllowedAce",
        "AddConditionalAce",
        "AdjustTokenPrivileges",
        "AllocateAndInitializeSid",
        "CopySid",
        "DeleteAce",
        "DuplicateTokenEx",
        "EqualPrefixSid",
        "EqualSid",
        "EventRegister",
        "EventUnregister",
        "EventWrite",
        "GetAce",
        "GetLengthSid",
        "GetSecurityDescriptorControl",
        "GetSecurityDescriptorDacl",
        "GetSecurityDescriptorGroup",
        "GetSecurityDescriptorLength",
        "GetSecurityDescriptorOwner",
        "GetSecurityDescriptorSacl",
        "GetSidSubAuthority",
        "GetSidSubAuthorityCount",
        "GetWindowsAccountDomainSid",
        "InitializeAcl",
        "InitializeSecurityDescriptor",
        "IsValidAcl",
        "IsValidSecurityDescriptor",
        "IsValidSid",
        "IsWellKnownSid",
        "LookupAccountNameW",
        "LookupAccountSidW",
        "LsaClose",
        "LsaFreeMemory",
        "LsaGetAppliedCAPIDs",
        "LsaLookupSids",
        "LsaOpenPolicy",
        "LsaQueryInformationPolicy",
        "OpenProcessToken",
        "OpenThreadToken",
        "SetSecurityDescriptorDacl",
        "SetSecurityDescriptorGroup",
        "SetSecurityDescriptorOwner",
        "SetSecurityDescriptorSacl",
        "SetThreadToken"
      ]
    }
  ],
  "exports": {
    "count": 8,
    "functions": [
      "CreateSecurityPage",
      "EditConditionalAceClaims",
      "EditResourceCondition",
      "EditSecurity",
      "EditSecurityAdvanced",
      "GetLocalizedStringForCondition",
      "GetTlsIndexForClaimDictionary",
      "IID_ISecurityInformation"
    ]
  },
  "hashes": {
    "sha2": "b8d30e658b0ca2e4c04f4677d6dbeec9d782d45959e144e556ce679a20b337cb",
    "ssdeep": "12288:SkNJSC3EwoQ9Kp1UA3riVDOtydbdO/lxnR:ZnSCvApKgrYdbI/lxn"
  },
  "intent": {
    "intentions": 8,
    "uniq_apis_matched": 14,
    "results": [
      {
        "intent": "Queries and Discovers General Attributes From The Target System",
        "tag": "Discovery:T1082 - System Information Discovery",
        "component": "---",
        "inputs": 3,
        "matches": 1,
        "apis": [
          "RtlGetNtProductType"
        ]
      },
      {
        "intent": "Discovers Configuration Attributes of the Windows Enterprise Domain",
        "tag": "Reconnaissance:T1590.001 - Domain Properties (Windows Enterprise)",
        "component": "---",
        "inputs": 24,
        "matches": 1,
        "apis": [
          "DsBindWithSpnExW"
        ]
      },
      {
        "intent": "Can Access And Read Windows Tokens",
        "tag": "Expert Input:IBO.0020 - Windows Token Access",
        "component": "Privileges",
        "inputs": 4,
        "matches": 2,
        "apis": [
          "OpenProcessToken",
          "OpenThreadToken"
        ]
      },
      {
        "intent": "Can Terminate Processes On The Target System",
        "tag": "Expert Input:IBO.0025",
        "component": "Processes",
        "inputs": 1,
        "matches": 1,
        "apis": [
          "TerminateProcess"
        ]
      },
      {
        "intent": "Manipulates Windows Tokens",
        "tag": "Defense Evasion:T1134 - Access Token Manipulation",
        "component": "Privileges",
        "inputs": 4,
        "matches": 1,
        "apis": [
          "AdjustTokenPrivileges"
        ]
      },
      {
        "intent": "Can Delay Loading of DLLs Until Runtime/Process Execution",
        "tag": "Expert Input:IBO.005 - Load DLL Resources With Delay During Runtime",
        "component": "Memory",
        "inputs": 2,
        "matches": 2,
        "apis": [
          "DelayLoadFailureHook",
          "ResolveDelayLoadedAPI"
        ]
      },
      {
        "intent": "Can Manipulate Access Control Mechanisms",
        "tag": "Expert Input:IBO.0021 - Windows Access Control Lists",
        "component": "Privileges",
        "inputs": 15,
        "matches": 5,
        "apis": [
          "AddAccessAllowedAce",
          "AddConditionalAce",
          "DeleteAce",
          "InitializeAcl",
          "SetSecurityDescriptorDacl"
        ]
      },
      {
        "intent": "Creates Token To Impersonate",
        "tag": "Privilege Escalation:T1134.003 - Make and Impersonate Token",
        "component": "Privileges",
        "inputs": 2,
        "matches": 1,
        "apis": [
          "SetThreadToken"
        ]
      }
    ]
  },
  "os": "win10"
}