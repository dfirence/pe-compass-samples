{
  "name": "sechost.dll",
  "path": "\\\\?\\C:\\Windows\\SysWOW64\\sechost.dll",
  "size": 477808,
  "is_64": false,
  "is_lib": true,
  "is_dotnet": true,
  "has_imports": true,
  "has_exports": true,
  "subsystem": 3,
  "subsystem_caption": "The Windows Character (Console UI) Subsystem",
  "libs": [
    "api-ms-win-core-apiquery-l1-1-0.dll",
    "api-ms-win-core-crt-l1-1-0.dll",
    "api-ms-win-core-crt-l2-1-0.dll",
    "api-ms-win-core-debug-l1-1-0.dll",
    "api-ms-win-core-delayload-l1-1-0.dll",
    "api-ms-win-core-delayload-l1-1-1.dll",
    "api-ms-win-core-errorhandling-l1-1-0.dll",
    "api-ms-win-core-file-l1-1-0.dll",
    "api-ms-win-core-handle-l1-1-0.dll",
    "api-ms-win-core-heap-l1-1-0.dll",
    "api-ms-win-core-heap-l2-1-0.dll",
    "api-ms-win-core-io-l1-1-0.dll",
    "api-ms-win-core-libraryloader-l1-2-0.dll",
    "api-ms-win-core-localization-l1-2-0.dll",
    "api-ms-win-core-memory-l1-1-0.dll",
    "api-ms-win-core-processthreads-l1-1-0.dll",
    "api-ms-win-core-processthreads-l1-1-1.dll",
    "api-ms-win-core-registry-l1-1-0.dll",
    "api-ms-win-core-rtlsupport-l1-2-0.dll",
    "api-ms-win-core-string-l1-1-0.dll",
    "api-ms-win-core-synch-l1-1-0.dll",
    "api-ms-win-core-synch-l1-2-0.dll",
    "api-ms-win-core-sysinfo-l1-1-0.dll",
    "api-ms-win-core-threadpool-l1-2-0.dll",
    "api-ms-win-core-util-l1-1-0.dll",
    "api-ms-win-core-wow64-l1-1-1.dll",
    "api-ms-win-eventing-provider-l1-1-0.dll",
    "api-ms-win-security-base-l1-1-0.dll",
    "ntdll.dll",
    "rpcrt4.dll"
  ],
  "imports": [
    {
      "lib": "api-ms-win-core-threadpool-l1-2-0.dll",
      "count": 3,
      "functions": [
        "CloseThreadpoolWork",
        "CreateThreadpoolWork",
        "SubmitThreadpoolWork"
      ]
    },
    {
      "lib": "api-ms-win-core-io-l1-1-0.dll",
      "count": 2,
      "functions": [
        "DeviceIoControl",
        "GetOverlappedResult"
      ]
    },
    {
      "lib": "api-ms-win-core-apiquery-l1-1-0.dll",
      "count": 1,
      "functions": [
        "ApiSetQueryApiSetPresence"
      ]
    },
    {
      "lib": "api-ms-win-core-localization-l1-2-0.dll",
      "count": 1,
      "functions": [
        "FormatMessageW"
      ]
    },
    {
      "lib": "api-ms-win-core-wow64-l1-1-1.dll",
      "count": 1,
      "functions": [
        "IsWow64Process2"
      ]
    },
    {
      "lib": "rpcrt4.dll",
      "count": 33,
      "functions": [
        "I_RpcExceptionFilter",
        "I_RpcMapWin32Status",
        "NdrAsyncClientCall2",
        "NdrClientCall4",
        "RpcAsyncCancelCall",
        "RpcAsyncCompleteCall",
        "RpcAsyncInitializeHandle",
        "RpcBindingBind",
        "RpcBindingCreateW",
        "RpcBindingFree",
        "RpcBindingFromStringBindingW",
        "RpcBindingServerFromClient",
        "RpcBindingSetAuthInfoExW",
        "RpcBindingSetAuthInfoW",
        "RpcBindingSetOption",
        "RpcBindingToStringBindingW",
        "RpcImpersonateClient",
        "RpcRevertToSelf",
        "RpcRevertToSelfEx",
        "RpcServerInqCallAttributesA",
        "RpcServerRegisterIf3",
        "RpcServerUseProtseqW",
        "RpcSmDestroyClientContext",
        "RpcSsDestroyClientContext",
        "RpcSsGetContextBinding",
        "RpcStringBindingComposeW",
        "RpcStringBindingParseW",
        "RpcStringFreeW",
        "UuidCreate",
        "UuidEqual",
        "UuidFromStringW",
        "UuidIsNil",
        "UuidToStringW"
      ]
    },
    {
      "lib": "api-ms-win-core-processthreads-l1-1-0.dll",
      "count": 20,
      "functions": [
        "CreateProcessAsUserW",
        "CreateProcessW",
        "CreateThread",
        "GetCurrentProcess",
        "GetCurrentProcessId",
        "GetCurrentThread",
        "GetCurrentThreadId",
        "GetProcessTimes",
        "GetThreadPriority",
        "InitializeProcThreadAttributeList",
        "OpenProcessToken",
        "OpenThread",
        "OpenThreadToken",
        "ResumeThread",
        "SetThreadPriority",
        "TerminateThread",
        "TlsAlloc",
        "TlsGetValue",
        "TlsSetValue",
        "UpdateProcThreadAttribute"
      ]
    },
    {
      "lib": "api-ms-win-core-delayload-l1-1-0.dll",
      "count": 1,
      "functions": [
        "DelayLoadFailureHook"
      ]
    },
    {
      "lib": "api-ms-win-core-rtlsupport-l1-2-0.dll",
      "count": 1,
      "functions": [
        "RtlCompareMemory"
      ]
    },
    {
      "lib": "api-ms-win-core-libraryloader-l1-2-0.dll",
      "count": 8,
      "functions": [
        "DisableThreadLibraryCalls",
        "FreeLibrary",
        "GetModuleFileNameA",
        "GetModuleFileNameW",
        "GetModuleHandleExW",
        "GetModuleHandleW",
        "GetProcAddress",
        "LoadLibraryExW"
      ]
    },
    {
      "lib": "api-ms-win-core-errorhandling-l1-1-0.dll",
      "count": 3,
      "functions": [
        "GetLastError",
        "RaiseException",
        "SetLastError"
      ]
    },
    {
      "lib": "api-ms-win-core-processthreads-l1-1-1.dll",
      "count": 1,
      "functions": [
        "GetProcessMitigationPolicy"
      ]
    },
    {
      "lib": "api-ms-win-core-registry-l1-1-0.dll",
      "count": 9,
      "functions": [
        "RegCloseKey",
        "RegDeleteValueW",
        "RegEnumKeyExW",
        "RegNotifyChangeKeyValue",
        "RegOpenKeyExA",
        "RegOpenKeyExW",
        "RegQueryValueExA",
        "RegQueryValueExW",
        "RegSetValueExW"
      ]
    },
    {
      "lib": "ntdll.dll",
      "count": 123,
      "functions": [
        "DbgPrintEx",
        "EtwDeliverDataBlock",
        "EtwEnumerateProcessRegGuids",
        "EtwProcessPrivateLoggerRequest",
        "EtwSendNotification",
        "EtwpGetCpuSpeed",
        "LdrQueryModuleServiceTags",
        "LdrResSearchResource",
        "NtCancelIoFile",
        "NtClose",
        "NtOpenKey",
        "NtOpenProcessToken",
        "NtOpenProcessTokenEx",
        "NtOpenThreadToken",
        "NtQueryInformationFile",
        "NtQueryInformationThread",
        "NtQueryInformationToken",
        "NtQueryIntervalProfile",
        "NtQueryPerformanceCounter",
        "NtQuerySystemInformation",
        "NtQueryValueKey",
        "NtQueueApcThread",
        "NtSetEvent",
        "NtSetInformationThread",
        "NtSetIntervalProfile",
        "NtSetSystemInformation",
        "NtTerminateProcess",
        "NtTraceControl",
        "NtWaitForMultipleObjects",
        "RtlAbsoluteToSelfRelativeSD",
        "RtlAcquireSRWLockExclusive",
        "RtlAcquireSRWLockShared",
        "RtlAddAccessAllowedAce",
        "RtlAddAccessAllowedAceEx",
        "RtlAddAccessAllowedObjectAce",
        "RtlAddAccessDeniedAceEx",
        "RtlAddAccessDeniedObjectAce",
        "RtlAddAce",
        "RtlAddAuditAccessAceEx",
        "RtlAddAuditAccessObjectAce",
        "RtlAddMandatoryAce",
        "RtlAllocateAndInitializeSid",
        "RtlAllocateHeap",
        "RtlAnsiStringToUnicodeString",
        "RtlCapabilityCheck",
        "RtlCapabilityCheckForSingleSessionSku",
        "RtlCaptureContext",
        "RtlCheckTokenCapability",
        "RtlCheckTokenMembership",
        "RtlCheckTokenMembershipEx",
        "RtlCompareUnicodeString",
        "RtlConvertSidToUnicodeString",
        "RtlCopySecurityDescriptor",
        "RtlCopySid",
        "RtlCopyUnicodeString",
        "RtlCreateAcl",
        "RtlCreateSecurityDescriptor",
        "RtlCreateServiceSid",
        "RtlDecompressBufferEx",
        "RtlDeleteCriticalSection",
        "RtlDeriveCapabilitySidsFromName",
        "RtlDllShutdownInProgress",
        "RtlEqualPrefixSid",
        "RtlEqualSid",
        "RtlEqualUnicodeString",
        "RtlFirstFreeAce",
        "RtlFreeAnsiString",
        "RtlFreeHeap",
        "RtlFreeUnicodeString",
        "RtlGUIDFromString",
        "RtlGetAce",
        "RtlGetCompressionWorkSpaceSize",
        "RtlGetControlSecurityDescriptor",
        "RtlGetCurrentServiceSessionId",
        "RtlGetDaclSecurityDescriptor",
        "RtlGetGroupSecurityDescriptor",
        "RtlGetNativeSystemInformation",
        "RtlGetNtProductType",
        "RtlGetOwnerSecurityDescriptor",
        "RtlGetPersistedStateLocation",
        "RtlGetSaclSecurityDescriptor",
        "RtlInitAnsiString",
        "RtlInitUnicodeString",
        "RtlInitUnicodeStringEx",
        "RtlInitializeBitMap",
        "RtlInitializeCriticalSectionEx",
        "RtlInitializeSRWLock",
        "RtlInitializeSid",
        "RtlInterlockedClearBitRun",
        "RtlLengthRequiredSid",
        "RtlLengthSecurityDescriptor",
        "RtlLengthSid",
        "RtlMakeSelfRelativeSD",
        "RtlMultiByteToUnicodeN",
        "RtlNtStatusToDosError",
        "RtlNtStatusToDosErrorNoTeb",
        "RtlQueryPerformanceFrequency",
        "RtlQueryRegistryValueWithFallback",
        "RtlQueryTimeZoneInformation",
        "RtlQueryWnfStateData",
        "RtlReleaseSRWLockExclusive",
        "RtlReleaseSRWLockShared",
        "RtlRunOnceExecuteOnce",
        "RtlSetDaclSecurityDescriptor",
        "RtlSetGroupSecurityDescriptor",
        "RtlSetLastWin32Error",
        "RtlSetOwnerSecurityDescriptor",
        "RtlSetSaclSecurityDescriptor",
        "RtlSetThreadSubProcessTag",
        "RtlSubAuthorityCountSid",
        "RtlSubAuthoritySid",
        "RtlSubscribeWnfStateChangeNotification",
        "RtlUnhandledExceptionFilter",
        "RtlUnicodeStringToAnsiString",
        "RtlUnicodeToMultiByteSize",
        "RtlUnsubscribeWnfNotificationWaitForCompletion",
        "RtlUnsubscribeWnfStateChangeNotification",
        "RtlValidAcl",
        "RtlValidRelativeSecurityDescriptor",
        "RtlValidSid",
        "RtlxAnsiStringToUnicodeSize",
        "RtlxUnicodeStringToAnsiSize",
        "_vsnwprintf"
      ]
    },
    {
      "lib": "api-ms-win-core-util-l1-1-0.dll",
      "count": 2,
      "functions": [
        "DecodePointer",
        "EncodePointer"
      ]
    },
    {
      "lib": "api-ms-win-eventing-provider-l1-1-0.dll",
      "count": 4,
      "functions": [
        "EventRegister",
        "EventSetInformation",
        "EventUnregister",
        "EventWriteTransfer"
      ]
    },
    {
      "lib": "api-ms-win-core-handle-l1-1-0.dll",
      "count": 1,
      "functions": [
        "CloseHandle"
      ]
    },
    {
      "lib": "api-ms-win-core-debug-l1-1-0.dll",
      "count": 3,
      "functions": [
        "DebugBreak",
        "IsDebuggerPresent",
        "OutputDebugStringW"
      ]
    },
    {
      "lib": "api-ms-win-core-file-l1-1-0.dll",
      "count": 6,
      "functions": [
        "CreateFileW",
        "GetDiskFreeSpaceExW",
        "GetFileAttributesExW",
        "GetFullPathNameA",
        "GetFullPathNameW",
        "ReadFile"
      ]
    },
    {
      "lib": "api-ms-win-security-base-l1-1-0.dll",
      "count": 22,
      "functions": [
        "AddAccessAllowedAce",
        "AddAccessDeniedAce",
        "AdjustTokenGroups",
        "AdjustTokenPrivileges",
        "AllocateAndInitializeSid",
        "CreateRestrictedToken",
        "EqualDomainSid",
        "EqualSid",
        "FreeSid",
        "GetAclInformation",
        "GetLengthSid",
        "GetSecurityDescriptorDacl",
        "GetSecurityDescriptorSacl",
        "GetSidSubAuthority",
        "GetSidSubAuthorityCount",
        "GetTokenInformation",
        "InitializeSecurityDescriptor",
        "IsValidSecurityDescriptor",
        "IsValidSid",
        "SetKernelObjectSecurity",
        "SetSecurityDescriptorDacl",
        "SetSecurityDescriptorSacl"
      ]
    },
    {
      "lib": "api-ms-win-core-string-l1-1-0.dll",
      "count": 2,
      "functions": [
        "CompareStringOrdinal",
        "CompareStringW"
      ]
    },
    {
      "lib": "api-ms-win-core-crt-l2-1-0.dll",
      "count": 5,
      "functions": [
        "__dllonexit3",
        "_initterm",
        "_initterm_e",
        "_onexit",
        "_purecall"
      ]
    },
    {
      "lib": "api-ms-win-core-sysinfo-l1-1-0.dll",
      "count": 2,
      "functions": [
        "GetComputerNameExW",
        "GetSystemDirectoryW"
      ]
    },
    {
      "lib": "api-ms-win-core-heap-l2-1-0.dll",
      "count": 3,
      "functions": [
        "LocalAlloc",
        "LocalFree",
        "LocalReAlloc"
      ]
    },
    {
      "lib": "api-ms-win-core-heap-l1-1-0.dll",
      "count": 4,
      "functions": [
        "GetProcessHeap",
        "HeapAlloc",
        "HeapFree",
        "HeapReAlloc"
      ]
    },
    {
      "lib": "api-ms-win-core-synch-l1-2-0.dll",
      "count": 1,
      "functions": [
        "Sleep"
      ]
    },
    {
      "lib": "api-ms-win-core-crt-l1-1-0.dll",
      "count": 37,
      "functions": [
        "_errno",
        "_except_handler4_common",
        "_ftol2",
        "_i64tow_s",
        "_stricmp",
        "_ui64tow_s",
        "_ultow",
        "_ultow_s",
        "_vsnwprintf_s",
        "_wcsicmp",
        "_wcsnicmp",
        "_wcstoi64",
        "_wcstoui64",
        "iswctype",
        "memcmp",
        "memcpy",
        "memcpy_s",
        "memmove",
        "memmove_s",
        "memset",
        "qsort_s",
        "strchr",
        "strnlen",
        "strrchr",
        "strstr",
        "swprintf_s",
        "towlower",
        "wcscat_s",
        "wcschr",
        "wcscpy_s",
        "wcsncmp",
        "wcsncpy_s",
        "wcsnlen",
        "wcsrchr",
        "wcsstr",
        "wcstok_s",
        "wcstoul"
      ]
    },
    {
      "lib": "api-ms-win-core-memory-l1-1-0.dll",
      "count": 3,
      "functions": [
        "VirtualAllocEx",
        "VirtualFree",
        "VirtualFreeEx"
      ]
    },
    {
      "lib": "api-ms-win-core-delayload-l1-1-1.dll",
      "count": 1,
      "functions": [
        "ResolveDelayLoadedAPI"
      ]
    },
    {
      "lib": "api-ms-win-core-synch-l1-1-0.dll",
      "count": 22,
      "functions": [
        "AcquireSRWLockExclusive",
        "AcquireSRWLockShared",
        "CreateEventA",
        "CreateEventExW",
        "CreateEventW",
        "CreateMutexExW",
        "CreateSemaphoreExW",
        "EnterCriticalSection",
        "InitializeSRWLock",
        "LeaveCriticalSection",
        "OpenEventW",
        "OpenSemaphoreW",
        "ReleaseMutex",
        "ReleaseSRWLockExclusive",
        "ReleaseSRWLockShared",
        "ReleaseSemaphore",
        "ResetEvent",
        "SetEvent",
        "SleepEx",
        "WaitForMultipleObjectsEx",
        "WaitForSingleObject",
        "WaitForSingleObjectEx"
      ]
    }
  ],
  "exports": {
    "count": 217,
    "functions": [
      "AuditComputeEffectivePolicyBySid",
      "AuditEnumerateCategories",
      "AuditEnumeratePerUserPolicy",
      "AuditEnumerateSubCategories",
      "AuditFree",
      "AuditLookupCategoryNameW",
      "AuditLookupSubCategoryNameW",
      "AuditQueryGlobalSaclW",
      "AuditQueryPerUserPolicy",
      "AuditQuerySecurity",
      "AuditQuerySystemPolicy",
      "AuditSetGlobalSaclW",
      "AuditSetPerUserPolicy",
      "AuditSetSecurity",
      "AuditSetSystemPolicy",
      "BuildSecurityDescriptorForSharingAccess",
      "BuildSecurityDescriptorForSharingAccessEx",
      "CapabilityCheck",
      "CapabilityCheckForSingleSessionSku",
      "ChangeServiceConfig2A",
      "ChangeServiceConfig2W",
      "ChangeServiceConfigA",
      "ChangeServiceConfigW",
      "CloseServiceHandle",
      "CloseTrace",
      "ControlService",
      "ControlServiceExA",
      "ControlServiceExW",
      "ControlTraceA",
      "ControlTraceW",
      "ConvertSDToStringSDRootDomainW",
      "ConvertSecurityDescriptorToStringSecurityDescriptorW",
      "ConvertSidToStringSidW",
      "ConvertStringSDToSDDomainA",
      "ConvertStringSDToSDDomainW",
      "ConvertStringSDToSDRootDomainW",
      "ConvertStringSecurityDescriptorToSecurityDescriptorW",
      "ConvertStringSidToSidW",
      "CreateIsolatedProcess",
      "CreateIsolationContainer",
      "CreateServiceA",
      "CreateServiceEx",
      "CreateServiceW",
      "CredBackupCredentials",
      "CredDeleteA",
      "CredDeleteW",
      "CredEncryptAndMarshalBinaryBlob",
      "CredEnumerateA",
      "CredEnumerateW",
      "CredFindBestCredentialA",
      "CredFindBestCredentialW",
      "CredFree",
      "CredGetSessionTypes",
      "CredGetTargetInfoA",
      "CredGetTargetInfoW",
      "CredIsMarshaledCredentialW",
      "CredIsProtectedA",
      "CredIsProtectedW",
      "CredMarshalCredentialA",
      "CredMarshalCredentialW",
      "CredParseUserNameWithType",
      "CredProfileLoaded",
      "CredProfileLoadedEx",
      "CredProfileUnloaded",
      "CredProtectA",
      "CredProtectEx",
      "CredProtectW",
      "CredReadA",
      "CredReadByTokenHandle",
      "CredReadDomainCredentialsA",
      "CredReadDomainCredentialsW",
      "CredReadW",
      "CredRestoreCredentials",
      "CredUnmarshalCredentialA",
      "CredUnmarshalCredentialW",
      "CredUnprotectA",
      "CredUnprotectEx",
      "CredUnprotectW",
      "CredWriteA",
      "CredWriteDomainCredentialsA",
      "CredWriteDomainCredentialsW",
      "CredWriteW",
      "CredpConvertCredential",
      "CredpConvertOneCredentialSize",
      "CredpConvertTargetInfo",
      "CredpDecodeCredential",
      "CredpEncodeCredential",
      "CredpEncodeSecret",
      "DeleteIsolationContainer",
      "DeleteService",
      "EnableTraceEx2",
      "EnumDependentServicesW",
      "EnumServicesStatusExW",
      "EnumerateIdentityProviders",
      "EnumerateTraceGuidsEx",
      "EtwQueryRealtimeConsumer",
      "EventAccessControl",
      "EventAccessQuery",
      "EventAccessRemove",
      "FreeContainer",
      "FreeTransientObjectSecurityDescriptor",
      "GetDefaultIdentityProvider",
      "GetEmbeddedContainerIsolationPolicy",
      "GetEmbeddedImageMitigationPolicy",
      "GetIdentityProviderInfoByGUID",
      "GetIdentityProviderInfoByName",
      "GetServiceDirectory",
      "GetServiceDisplayNameW",
      "GetServiceKeyNameW",
      "GetServiceProcessToken",
      "GetServiceRegistryStateKey",
      "I_QueryTagInformation",
      "I_RegisterSvchostNotificationCallback",
      "I_ScBroadcastServiceControlMessage",
      "I_ScIsSecurityProcess",
      "I_ScPnPGetServiceName",
      "I_ScQueryServiceConfig",
      "I_ScRegisterDeviceNotification",
      "I_ScRegisterPreshutdownRestart",
      "I_ScReparseServiceDatabase",
      "I_ScRpcBindA",
      "I_ScRpcBindW",
      "I_ScSendPnPMessage",
      "I_ScSendTSMessage",
      "I_ScSetServiceBitsA",
      "I_ScSetServiceBitsW",
      "I_ScUnregisterDeviceNotification",
      "I_ScValidatePnPService",
      "LocalGetConditionForString",
      "LocalGetReferencedTokenTypesForCondition",
      "LocalGetStringForCondition",
      "LocalRpcBindingCreateWithSecurity",
      "LocalRpcBindingSetAuthInfoEx",
      "LookupAccountNameLocalA",
      "LookupAccountNameLocalW",
      "LookupAccountSidLocalA",
      "LookupAccountSidLocalW",
      "LsaAddAccountRights",
      "LsaClose",
      "LsaCreateSecret",
      "LsaDelete",
      "LsaEnumerateAccountRights",
      "LsaEnumerateAccountsWithUserRight",
      "LsaFreeMemory",
      "LsaICLookupNames",
      "LsaICLookupNamesWithCreds",
      "LsaICLookupSids",
      "LsaICLookupSidsWithCreds",
      "LsaLookupClose",
      "LsaLookupFreeMemory",
      "LsaLookupGetDomainInfo",
      "LsaLookupManageSidNameMapping",
      "LsaLookupNames2",
      "LsaLookupOpenLocalPolicy",
      "LsaLookupSids",
      "LsaLookupSids2",
      "LsaLookupTranslateNames",
      "LsaLookupTranslateSids",
      "LsaLookupUserAccountType",
      "LsaOpenPolicy",
      "LsaOpenSecret",
      "LsaQueryInformationPolicy",
      "LsaQuerySecret",
      "LsaRemoveAccountRights",
      "LsaRetrievePrivateData",
      "LsaSetInformationPolicy",
      "LsaSetSecret",
      "LsaStorePrivateData",
      "NotifyServiceStatusChange",
      "NotifyServiceStatusChangeA",
      "NotifyServiceStatusChangeW",
      "OpenSCManagerA",
      "OpenSCManagerW",
      "OpenServiceA",
      "OpenServiceW",
      "OpenTraceW",
      "ProcessTrace",
      "QueryAllTracesA",
      "QueryAllTracesW",
      "QueryLocalUserServiceName",
      "QueryServiceConfig2A",
      "QueryServiceConfig2W",
      "QueryServiceConfigA",
      "QueryServiceConfigW",
      "QueryServiceDynamicInformation",
      "QueryServiceObjectSecurity",
      "QueryServiceStatus",
      "QueryServiceStatusEx",
      "QueryTraceProcessingHandle",
      "QueryTransientObjectSecurityDescriptor",
      "QueryUserServiceName",
      "QueryUserServiceNameForContext",
      "RegisterServiceCtrlHandlerA",
      "RegisterServiceCtrlHandlerExA",
      "RegisterServiceCtrlHandlerExW",
      "RegisterServiceCtrlHandlerW",
      "RegisterTraceGuidsA",
      "ReleaseIdentityProviderEnumContext",
      "RemoveTraceCallback",
      "RpcClientCapabilityCheck",
      "SetLocalRpcServerInterfaceSecurity",
      "SetLocalRpcServerProtseqSecurity",
      "SetServiceObjectSecurity",
      "SetServiceStatus",
      "SetTraceCallback",
      "StartServiceA",
      "StartServiceCtrlDispatcherA",
      "StartServiceCtrlDispatcherW",
      "StartServiceW",
      "StartTraceA",
      "StartTraceW",
      "StopTraceW",
      "SubscribeServiceChangeNotifications",
      "TraceQueryInformation",
      "TraceSetInformation",
      "UnsubscribeServiceChangeNotifications",
      "WaitServiceState"
    ]
  },
  "hashes": {
    "sha2": "7f8e64b01c2e2012bf63b25efa6fcbebe6cf027a3322901e28185314af39a86e",
    "ssdeep": "6144:N5b6ZAWavfFjc3CK2wPnqq7SbexXaobQL/splfKBQkaPWx/Q3JPkzqxEhNa9ESLa:MPnqqeCxqlLUXfrkakUyqxGNa9E6a"
  },
  "intent": {
    "intentions": 10,
    "uniq_apis_matched": 19,
    "results": [
      {
        "intent": "Can Delay Loading of DLLs Until Runtime/Process Execution",
        "tag": "Expert Input:IBO.005 - Load DLL Resources With Delay During Runtime",
        "component": "Memory",
        "inputs": 2,
        "matches": 2,
        "apis": [
          "DelayLoadFailureHook",
          "ResolveDelayLoadedAPI"
        ]
      },
      {
        "intent": "Queries and Discovers General Attributes From The Target System",
        "tag": "Discovery:T1082 - System Information Discovery",
        "component": "---",
        "inputs": 3,
        "matches": 1,
        "apis": [
          "RtlGetNtProductType"
        ]
      },
      {
        "intent": "Queries And Discovers Windows Registry Configuration Settings",
        "tag": "Discovery:T1012 - Query Registry",
        "component": "Registry",
        "inputs": 11,
        "matches": 2,
        "apis": [
          "RegQueryValueExA",
          "RegQueryValueExW"
        ]
      },
      {
        "intent": "Can Create/Manipulate The Windows Registry",
        "tag": "Expert Input:IBO.008 - Create/Manipulate The Windows Registry",
        "component": "Registry",
        "inputs": 33,
        "matches": 4,
        "apis": [
          "RegDeleteValueW",
          "RegOpenKeyExA",
          "RegOpenKeyExW",
          "RegSetValueExW"
        ]
      },
      {
        "intent": "Can Execute or Spawn New Processes On The Target System As Another User Identity",
        "tag": "Expert Input:IBO.003 - Spawn New Process As Different User",
        "component": "Processes",
        "inputs": 2,
        "matches": 1,
        "apis": [
          "CreateProcessAsUserW"
        ]
      },
      {
        "intent": "Can Execute or Spawn New Processes On The Target System",
        "tag": "Expert Input:IBO.002 - Spawn New Process",
        "component": "Processes",
        "inputs": 7,
        "matches": 1,
        "apis": [
          "CreateProcessW"
        ]
      },
      {
        "intent": "Can Manipulate Access Control Mechanisms",
        "tag": "Expert Input:IBO.0021 - Windows Access Control Lists",
        "component": "Privileges",
        "inputs": 15,
        "matches": 3,
        "apis": [
          "AddAccessAllowedAce",
          "AddAccessDeniedAce",
          "SetSecurityDescriptorDacl"
        ]
      },
      {
        "intent": "Manipulates Windows Tokens",
        "tag": "Defense Evasion:T1134 - Access Token Manipulation",
        "component": "Privileges",
        "inputs": 4,
        "matches": 2,
        "apis": [
          "AdjustTokenGroups",
          "AdjustTokenPrivileges"
        ]
      },
      {
        "intent": "Can Access And Read Windows Tokens",
        "tag": "Expert Input:IBO.0020 - Windows Token Access",
        "component": "Privileges",
        "inputs": 4,
        "matches": 2,
        "apis": [
          "OpenProcessToken",
          "OpenThreadToken"
        ]
      },
      {
        "intent": "Can Enumerate The Windows Registry",
        "tag": "Expert Input:IBO.009 - Enumerate The Windows Registry",
        "component": "Registry",
        "inputs": 6,
        "matches": 1,
        "apis": [
          "RegEnumKeyExW"
        ]
      }
    ]
  },
  "os": "win10"
}