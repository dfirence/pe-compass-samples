{
  "name": "mfplat.dll",
  "path": "\\\\?\\C:\\Windows\\System32\\mfplat.dll",
  "size": 1813968,
  "is_64": true,
  "is_lib": true,
  "is_dotnet": false,
  "has_imports": true,
  "has_exports": true,
  "subsystem": 3,
  "subsystem_caption": "The Windows Character (Console UI) Subsystem",
  "libs": [
    "api-ms-win-core-apiquery-l1-1-0.dll",
    "api-ms-win-core-debug-l1-1-0.dll",
    "api-ms-win-core-delayload-l1-1-0.dll",
    "api-ms-win-core-delayload-l1-1-1.dll",
    "api-ms-win-core-errorhandling-l1-1-0.dll",
    "api-ms-win-core-file-l1-1-0.dll",
    "api-ms-win-core-file-l1-2-0.dll",
    "api-ms-win-core-file-l2-1-0.dll",
    "api-ms-win-core-handle-l1-1-0.dll",
    "api-ms-win-core-heap-l1-1-0.dll",
    "api-ms-win-core-heap-l2-1-0.dll",
    "api-ms-win-core-heap-obsolete-l1-1-0.dll",
    "api-ms-win-core-io-l1-1-0.dll",
    "api-ms-win-core-io-l1-1-1.dll",
    "api-ms-win-core-kernel32-legacy-l1-1-0.dll",
    "api-ms-win-core-largeinteger-l1-1-0.dll",
    "api-ms-win-core-libraryloader-l1-2-0.dll",
    "api-ms-win-core-libraryloader-l1-2-1.dll",
    "api-ms-win-core-localization-l1-2-0.dll",
    "api-ms-win-core-memory-l1-1-0.dll",
    "api-ms-win-core-memory-l1-1-1.dll",
    "api-ms-win-core-processthreads-l1-1-0.dll",
    "api-ms-win-core-processthreads-l1-1-1.dll",
    "api-ms-win-core-profile-l1-1-0.dll",
    "api-ms-win-core-psapi-l1-1-0.dll",
    "api-ms-win-core-registry-l1-1-0.dll",
    "api-ms-win-core-rtlsupport-l1-1-0.dll",
    "api-ms-win-core-shlwapi-obsolete-l1-1-0.dll",
    "api-ms-win-core-string-l1-1-0.dll",
    "api-ms-win-core-string-obsolete-l1-1-0.dll",
    "api-ms-win-core-synch-l1-1-0.dll",
    "api-ms-win-core-synch-l1-2-0.dll",
    "api-ms-win-core-sysinfo-l1-1-0.dll",
    "api-ms-win-core-sysinfo-l1-2-0.dll",
    "api-ms-win-core-threadpool-l1-2-0.dll",
    "api-ms-win-core-threadpool-legacy-l1-1-0.dll",
    "api-ms-win-core-url-l1-1-0.dll",
    "api-ms-win-core-windowserrorreporting-l1-1-0.dll",
    "api-ms-win-devices-config-l1-1-1.dll",
    "api-ms-win-eventing-classicprovider-l1-1-0.dll",
    "api-ms-win-eventing-provider-l1-1-0.dll",
    "api-ms-win-mm-time-l1-1-0.dll",
    "api-ms-win-security-sddl-l1-1-0.dll",
    "api-ms-win-shcore-obsolete-l1-1-0.dll",
    "msvcrt.dll",
    "ntdll.dll"
  ],
  "imports": [
    {
      "lib": "api-ms-win-core-localization-l1-2-0.dll",
      "count": 1,
      "functions": [
        "FormatMessageW"
      ]
    },
    {
      "lib": "api-ms-win-core-debug-l1-1-0.dll",
      "count": 3,
      "functions": [
        "DebugBreak",
        "IsDebuggerPresent",
        "OutputDebugStringW"
      ]
    },
    {
      "lib": "api-ms-win-core-string-l1-1-0.dll",
      "count": 3,
      "functions": [
        "CompareStringOrdinal",
        "MultiByteToWideChar",
        "WideCharToMultiByte"
      ]
    },
    {
      "lib": "api-ms-win-eventing-classicprovider-l1-1-0.dll",
      "count": 6,
      "functions": [
        "GetTraceEnableFlags",
        "GetTraceEnableLevel",
        "GetTraceLoggerHandle",
        "RegisterTraceGuidsW",
        "TraceMessage",
        "UnregisterTraceGuids"
      ]
    },
    {
      "lib": "api-ms-win-core-synch-l1-2-0.dll",
      "count": 4,
      "functions": [
        "InitOnceExecuteOnce",
        "Sleep",
        "SleepConditionVariableSRW",
        "WakeAllConditionVariable"
      ]
    },
    {
      "lib": "api-ms-win-core-apiquery-l1-1-0.dll",
      "count": 1,
      "functions": [
        "ApiSetQueryApiSetPresence"
      ]
    },
    {
      "lib": "api-ms-win-shcore-obsolete-l1-1-0.dll",
      "count": 1,
      "functions": [
        "SHStrDupW"
      ]
    },
    {
      "lib": "api-ms-win-core-heap-obsolete-l1-1-0.dll",
      "count": 2,
      "functions": [
        "GlobalLock",
        "GlobalUnlock"
      ]
    },
    {
      "lib": "api-ms-win-core-delayload-l1-1-0.dll",
      "count": 1,
      "functions": [
        "DelayLoadFailureHook"
      ]
    },
    {
      "lib": "api-ms-win-core-url-l1-1-0.dll",
      "count": 2,
      "functions": [
        "PathCreateFromUrlW",
        "UrlCreateFromPathW"
      ]
    },
    {
      "lib": "api-ms-win-core-sysinfo-l1-2-0.dll",
      "count": 1,
      "functions": [
        "GetNativeSystemInfo"
      ]
    },
    {
      "lib": "api-ms-win-core-rtlsupport-l1-1-0.dll",
      "count": 3,
      "functions": [
        "RtlCaptureContext",
        "RtlLookupFunctionEntry",
        "RtlVirtualUnwind"
      ]
    },
    {
      "lib": "api-ms-win-mm-time-l1-1-0.dll",
      "count": 2,
      "functions": [
        "timeBeginPeriod",
        "timeEndPeriod"
      ]
    },
    {
      "lib": "api-ms-win-core-profile-l1-1-0.dll",
      "count": 2,
      "functions": [
        "QueryPerformanceCounter",
        "QueryPerformanceFrequency"
      ]
    },
    {
      "lib": "api-ms-win-eventing-provider-l1-1-0.dll",
      "count": 5,
      "functions": [
        "EventActivityIdControl",
        "EventRegister",
        "EventSetInformation",
        "EventUnregister",
        "EventWriteTransfer"
      ]
    },
    {
      "lib": "api-ms-win-core-kernel32-legacy-l1-1-0.dll",
      "count": 1,
      "functions": [
        "RegisterWaitForSingleObject"
      ]
    },
    {
      "lib": "msvcrt.dll",
      "count": 75,
      "functions": [
        "??0exception@@QEAA@AEBQEBD@Z",
        "??0exception@@QEAA@AEBQEBDH@Z",
        "??0exception@@QEAA@AEBV0@@Z",
        "??0exception@@QEAA@XZ",
        "??1exception@@UEAA@XZ",
        "??1type_info@@UEAA@XZ",
        "?terminate@@YAXXZ",
        "?what@exception@@UEBAPEBDXZ",
        "_CxxThrowException",
        "_XcptFilter",
        "__C_specific_handler",
        "__CxxFrameHandler3",
        "__dllonexit",
        "_amsg_exit",
        "_callnewh",
        "_gcvt_s",
        "_i64toa_s",
        "_initterm",
        "_itoa_s",
        "_lock",
        "_ltoa_s",
        "_onexit",
        "_purecall",
        "_splitpath_s",
        "_strcmpi",
        "_strnicmp",
        "_ultoa_s",
        "_ultow",
        "_unlock",
        "_vsnprintf",
        "_vsnprintf_s",
        "_vsnwprintf",
        "_wcsicmp",
        "_wcslwr_s",
        "_wcsnicmp",
        "_wsplitpath_s",
        "atoi",
        "calloc",
        "cosf",
        "free",
        "iswalpha",
        "iswdigit",
        "malloc",
        "memcmp",
        "memcpy",
        "memcpy_s",
        "memmove",
        "memmove_s",
        "memset",
        "qsort",
        "rand",
        "realloc",
        "sinf",
        "sprintf_s",
        "strcat_s",
        "strchr",
        "strcpy_s",
        "strncmp",
        "strncpy_s",
        "strnlen",
        "strstr",
        "strtoul",
        "swscanf",
        "swscanf_s",
        "towlower",
        "towupper",
        "wcscat_s",
        "wcscmp",
        "wcscpy_s",
        "wcscspn",
        "wcsncmp",
        "wcsnlen",
        "wcsrchr",
        "wcsstr",
        "wcstombs_s"
      ]
    },
    {
      "lib": "api-ms-win-core-threadpool-l1-2-0.dll",
      "count": 4,
      "functions": [
        "CloseThreadpoolTimer",
        "CreateThreadpoolTimer",
        "SetThreadpoolTimer",
        "WaitForThreadpoolTimerCallbacks"
      ]
    },
    {
      "lib": "api-ms-win-core-memory-l1-1-1.dll",
      "count": 1,
      "functions": [
        "GetProcessWorkingSetSizeEx"
      ]
    },
    {
      "lib": "api-ms-win-core-synch-l1-1-0.dll",
      "count": 21,
      "functions": [
        "AcquireSRWLockExclusive",
        "AcquireSRWLockShared",
        "CreateEventExW",
        "CreateEventW",
        "CreateMutexExW",
        "CreateSemaphoreExW",
        "DeleteCriticalSection",
        "EnterCriticalSection",
        "InitializeCriticalSection",
        "InitializeCriticalSectionEx",
        "InitializeSRWLock",
        "LeaveCriticalSection",
        "OpenSemaphoreW",
        "ReleaseMutex",
        "ReleaseSRWLockExclusive",
        "ReleaseSRWLockShared",
        "ReleaseSemaphore",
        "ResetEvent",
        "SetEvent",
        "WaitForSingleObject",
        "WaitForSingleObjectEx"
      ]
    },
    {
      "lib": "api-ms-win-core-shlwapi-obsolete-l1-1-0.dll",
      "count": 1,
      "functions": [
        "StrCmpW"
      ]
    },
    {
      "lib": "api-ms-win-core-string-obsolete-l1-1-0.dll",
      "count": 2,
      "functions": [
        "lstrcmpW",
        "lstrcmpiW"
      ]
    },
    {
      "lib": "api-ms-win-core-processthreads-l1-1-1.dll",
      "count": 3,
      "functions": [
        "GetProcessMitigationPolicy",
        "IsProcessorFeaturePresent",
        "OpenProcess"
      ]
    },
    {
      "lib": "api-ms-win-core-windowserrorreporting-l1-1-0.dll",
      "count": 2,
      "functions": [
        "WerRegisterFile",
        "WerUnregisterFile"
      ]
    },
    {
      "lib": "api-ms-win-core-libraryloader-l1-2-0.dll",
      "count": 7,
      "functions": [
        "FreeLibrary",
        "GetModuleFileNameA",
        "GetModuleFileNameW",
        "GetModuleHandleExW",
        "GetModuleHandleW",
        "GetProcAddress",
        "LoadLibraryExW"
      ]
    },
    {
      "lib": "api-ms-win-core-io-l1-1-0.dll",
      "count": 3,
      "functions": [
        "CancelIoEx",
        "DeviceIoControl",
        "GetOverlappedResult"
      ]
    },
    {
      "lib": "api-ms-win-core-registry-l1-1-0.dll",
      "count": 12,
      "functions": [
        "RegCloseKey",
        "RegCreateKeyExW",
        "RegDeleteTreeW",
        "RegDeleteValueW",
        "RegEnumKeyExW",
        "RegEnumValueW",
        "RegGetValueW",
        "RegNotifyChangeKeyValue",
        "RegOpenKeyExW",
        "RegQueryInfoKeyW",
        "RegQueryValueExW",
        "RegSetValueExW"
      ]
    },
    {
      "lib": "api-ms-win-core-heap-l1-1-0.dll",
      "count": 3,
      "functions": [
        "GetProcessHeap",
        "HeapAlloc",
        "HeapFree"
      ]
    },
    {
      "lib": "api-ms-win-devices-config-l1-1-1.dll",
      "count": 9,
      "functions": [
        "CM_Get_Device_Interface_ListW",
        "CM_Get_Device_Interface_List_SizeW",
        "CM_Get_Device_Interface_PropertyW",
        "CM_Locate_DevNodeW",
        "CM_MapCrToWin32Err",
        "CM_Open_DevNode_Key",
        "CM_Open_Device_Interface_KeyW",
        "CM_Register_Notification",
        "CM_Unregister_Notification"
      ]
    },
    {
      "lib": "api-ms-win-core-heap-l2-1-0.dll",
      "count": 4,
      "functions": [
        "GlobalAlloc",
        "GlobalFree",
        "LocalAlloc",
        "LocalFree"
      ]
    },
    {
      "lib": "api-ms-win-security-sddl-l1-1-0.dll",
      "count": 1,
      "functions": [
        "ConvertStringSecurityDescriptorToSecurityDescriptorW"
      ]
    },
    {
      "lib": "api-ms-win-core-threadpool-legacy-l1-1-0.dll",
      "count": 1,
      "functions": [
        "UnregisterWaitEx"
      ]
    },
    {
      "lib": "api-ms-win-core-file-l1-1-0.dll",
      "count": 10,
      "functions": [
        "CreateFileW",
        "FlushFileBuffers",
        "GetFileAttributesExW",
        "GetFileSize",
        "GetFinalPathNameByHandleW",
        "GetFullPathNameW",
        "ReadFile",
        "SetEndOfFile",
        "SetFilePointer",
        "WriteFile"
      ]
    },
    {
      "lib": "api-ms-win-core-largeinteger-l1-1-0.dll",
      "count": 1,
      "functions": [
        "MulDiv"
      ]
    },
    {
      "lib": "api-ms-win-core-memory-l1-1-0.dll",
      "count": 7,
      "functions": [
        "CreateFileMappingW",
        "MapViewOfFile",
        "MapViewOfFileEx",
        "UnmapViewOfFile",
        "VirtualAlloc",
        "VirtualFree",
        "VirtualQueryEx"
      ]
    },
    {
      "lib": "api-ms-win-core-file-l1-2-0.dll",
      "count": 1,
      "functions": [
        "GetTempPathW"
      ]
    },
    {
      "lib": "api-ms-win-core-sysinfo-l1-1-0.dll",
      "count": 8,
      "functions": [
        "GetComputerNameExW",
        "GetSystemDirectoryA",
        "GetSystemDirectoryW",
        "GetSystemInfo",
        "GetSystemTimeAsFileTime",
        "GetTickCount",
        "GetTickCount64",
        "GetVersion"
      ]
    },
    {
      "lib": "api-ms-win-core-io-l1-1-1.dll",
      "count": 1,
      "functions": [
        "CancelSynchronousIo"
      ]
    },
    {
      "lib": "api-ms-win-core-delayload-l1-1-1.dll",
      "count": 1,
      "functions": [
        "ResolveDelayLoadedAPI"
      ]
    },
    {
      "lib": "api-ms-win-core-libraryloader-l1-2-1.dll",
      "count": 1,
      "functions": [
        "LoadLibraryA"
      ]
    },
    {
      "lib": "api-ms-win-core-errorhandling-l1-1-0.dll",
      "count": 5,
      "functions": [
        "GetLastError",
        "RaiseException",
        "SetLastError",
        "SetUnhandledExceptionFilter",
        "UnhandledExceptionFilter"
      ]
    },
    {
      "lib": "ntdll.dll",
      "count": 3,
      "functions": [
        "NtQueryInformationFile",
        "NtQueryVolumeInformationFile",
        "RtlNtStatusToDosError"
      ]
    },
    {
      "lib": "api-ms-win-core-processthreads-l1-1-0.dll",
      "count": 15,
      "functions": [
        "CreateProcessW",
        "CreateThread",
        "GetCurrentProcess",
        "GetCurrentProcessId",
        "GetCurrentThreadId",
        "GetExitCodeThread",
        "GetProcessId",
        "GetProcessTimes",
        "OpenProcessToken",
        "OpenThread",
        "TerminateProcess",
        "TlsAlloc",
        "TlsFree",
        "TlsGetValue",
        "TlsSetValue"
      ]
    },
    {
      "lib": "api-ms-win-core-psapi-l1-1-0.dll",
      "count": 3,
      "functions": [
        "K32EnumProcessModules",
        "K32GetModuleInformation",
        "K32GetProcessMemoryInfo"
      ]
    },
    {
      "lib": "api-ms-win-core-handle-l1-1-0.dll",
      "count": 2,
      "functions": [
        "CloseHandle",
        "DuplicateHandle"
      ]
    },
    {
      "lib": "api-ms-win-core-file-l2-1-0.dll",
      "count": 1,
      "functions": [
        "GetFileInformationByHandleEx"
      ]
    }
  ],
  "exports": {
    "count": 230,
    "functions": [
      "CopyPropVariant",
      "CreatePropVariant",
      "CreatePropertyStore",
      "DestroyPropVariant",
      "FormatTagFromWfx",
      "GetAMSubtypeFromD3DFormat",
      "GetD3DFormatFromMFSubtype",
      "MFAddPeriodicCallback",
      "MFAllocateSerialWorkQueue",
      "MFAllocateWorkQueue",
      "MFAllocateWorkQueueEx",
      "MFAppendCollection",
      "MFAverageTimePerFrameToFrameRate",
      "MFBeginCreateFile",
      "MFBeginGetHostByName",
      "MFBeginRegisterWorkQueueWithMMCSS",
      "MFBeginRegisterWorkQueueWithMMCSSEx",
      "MFBeginUnregisterWorkQueueWithMMCSS",
      "MFCalculateBitmapImageSize",
      "MFCalculateImageSize",
      "MFCallStackTracingClearSnapshot",
      "MFCallStackTracingLogSessionErrors",
      "MFCallStackTracingRestoreSnapshot",
      "MFCallStackTracingTakeSnapshot",
      "MFCancelCreateFile",
      "MFCancelWorkItem",
      "MFCheckEnabledViaAppService",
      "MFClearLocalMFTs",
      "MFCombineSamples",
      "MFCompareFullToPartialMediaType",
      "MFCompareSockaddrAddresses",
      "MFConvertColorInfoFromDXVA",
      "MFConvertColorInfoToDXVA",
      "MFConvertFromFP16Array",
      "MFConvertToFP16Array",
      "MFCopyImage",
      "MFCreate2DMediaBuffer",
      "MFCreate2DMediaBufferOn1DMediaBuffer",
      "MFCreateAMMediaTypeFromMFMediaType",
      "MFCreateAlignedMemoryBuffer",
      "MFCreateAlignedSharedMemoryBuffer",
      "MFCreateAsyncResult",
      "MFCreateAttributes",
      "MFCreateAudioMediaType",
      "MFCreateByteStreamHandlerAppServiceActivate",
      "MFCreateCollection",
      "MFCreateContentDecryptorContext",
      "MFCreateContentProtectionDevice",
      "MFCreateD3D12SynchronizationObject",
      "MFCreateDXGIDeviceManager",
      "MFCreateDXGISurfaceBuffer",
      "MFCreateDXSurfaceBuffer",
      "MFCreateEMEStoreObject",
      "MFCreateEventQueue",
      "MFCreateFile",
      "MFCreateFileFromHandle",
      "MFCreateLegacyMediaBufferOnMFMediaBuffer",
      "MFCreateMFByteStreamOnIStreamWithFlags",
      "MFCreateMFByteStreamOnStream",
      "MFCreateMFByteStreamOnStreamEx",
      "MFCreateMFByteStreamWrapper",
      "MFCreateMFVideoFormatFromMFMediaType",
      "MFCreateMediaBufferFromMediaType",
      "MFCreateMediaBufferWrapper",
      "MFCreateMediaEvent",
      "MFCreateMediaEventResult",
      "MFCreateMediaExtensionActivate",
      "MFCreateMediaExtensionActivateNoInit",
      "MFCreateMediaExtensionAppServiceActivate",
      "MFCreateMediaExtensionInprocActivate",
      "MFCreateMediaType",
      "MFCreateMediaTypeFromProperties",
      "MFCreateMediaTypeFromRepresentation",
      "MFCreateMemoryBuffer",
      "MFCreateMemoryBufferFromRawBuffer",
      "MFCreateMemoryStream",
      "MFCreateMuxStreamAttributes",
      "MFCreateMuxStreamMediaType",
      "MFCreateMuxStreamSample",
      "MFCreateOOPMFTProxy",
      "MFCreateOOPMFTRemote",
      "MFCreatePathFromURL",
      "MFCreatePresentationDescriptor",
      "MFCreatePropertiesFromMediaType",
      "MFCreateReusableByteStream",
      "MFCreateReusableByteStreamWithSharedLock",
      "MFCreateSample",
      "MFCreateSecureBufferAllocator",
      "MFCreateSharedMemoryMediaBufferFromMediaType",
      "MFCreateSocket",
      "MFCreateSocketListener",
      "MFCreateSourceResolver",
      "MFCreateSourceResolverInternal",
      "MFCreateStagingSurfaceWrapper",
      "MFCreateStreamDescriptor",
      "MFCreateStreamOnMFByteStream",
      "MFCreateStreamOnMFByteStreamEx",
      "MFCreateSystemTimeSource",
      "MFCreateTelemetrySession",
      "MFCreateTempFile",
      "MFCreateTrackedSample",
      "MFCreateTransformActivate",
      "MFCreateURLFromPath",
      "MFCreateUdpSockets",
      "MFCreateVideoDecryptorContext",
      "MFCreateVideoMediaType",
      "MFCreateVideoMediaTypeFromBitMapInfoHeader",
      "MFCreateVideoMediaTypeFromBitMapInfoHeaderEx",
      "MFCreateVideoMediaTypeFromSubtype",
      "MFCreateVideoMediaTypeFromVideoInfoHeader",
      "MFCreateVideoMediaTypeFromVideoInfoHeader2",
      "MFCreateVideoSampleAllocatorEx",
      "MFCreateWICBitmapBuffer",
      "MFCreateWICDecoderProxy",
      "MFCreateWaveFormatExFromMFMediaType",
      "MFDeserializeAttributesFromStream",
      "MFDeserializeEvent",
      "MFDeserializeMediaTypeFromStream",
      "MFDeserializePresentationDescriptor",
      "MFEndCreateFile",
      "MFEndGetHostByName",
      "MFEndRegisterWorkQueueWithMMCSS",
      "MFEndUnregisterWorkQueueWithMMCSS",
      "MFEnumLocalMFTRegistrations",
      "MFFrameRateToAverageTimePerFrame",
      "MFFreeAdaptersAddresses",
      "MFGetAdaptersAddresses",
      "MFGetAttributesAsBlob",
      "MFGetAttributesAsBlobSize",
      "MFGetCallStackTracingWeakReference",
      "MFGetConfigurationDWORD",
      "MFGetConfigurationPolicy",
      "MFGetConfigurationStore",
      "MFGetConfigurationString",
      "MFGetContentProtectionSystemCLSID",
      "MFGetMFTMerit",
      "MFGetNumericNameFromSockaddr",
      "MFGetPlaneSize",
      "MFGetPlatformFlags",
      "MFGetPlatformVersion",
      "MFGetPluginControl",
      "MFGetRandomNumber",
      "MFGetSockaddrFromNumericName",
      "MFGetStrideForBitmapInfoHeader",
      "MFGetSupportedMimeTypes",
      "MFGetSupportedSchemes",
      "MFGetSystemTime",
      "MFGetTimerPeriodicity",
      "MFGetUncompressedVideoFormat",
      "MFGetWorkQueueMMCSSClass",
      "MFGetWorkQueueMMCSSPriority",
      "MFGetWorkQueueMMCSSTaskId",
      "MFHasLocallyRegisteredByteStreamHandlers",
      "MFHasLocallyRegisteredSchemeHandlers",
      "MFHeapAlloc",
      "MFHeapFree",
      "MFInitAMMediaTypeFromMFMediaType",
      "MFInitAttributesFromBlob",
      "MFInitMediaTypeFromAMMediaType",
      "MFInitMediaTypeFromMFVideoFormat",
      "MFInitMediaTypeFromMPEG1VideoInfo",
      "MFInitMediaTypeFromMPEG2VideoInfo",
      "MFInitMediaTypeFromVideoInfoHeader",
      "MFInitMediaTypeFromVideoInfoHeader2",
      "MFInitMediaTypeFromWaveFormatEx",
      "MFInitVideoFormat",
      "MFInitVideoFormat_RGB",
      "MFInvalidateMFTEnumCache",
      "MFInvokeCallback",
      "MFIsBottomUpFormat",
      "MFIsContentProtectionDeviceSupported",
      "MFIsFeatureEnabled",
      "MFIsLocallyRegisteredMimeType",
      "MFIsLocallyRegisteredSchemeHandler",
      "MFJoinWorkQueue",
      "MFLockDXGIDeviceManager",
      "MFLockPlatform",
      "MFLockSharedWorkQueue",
      "MFLockWorkQueue",
      "MFMapDX9FormatToDXGIFormat",
      "MFMapDXGIFormatToDX9Format",
      "MFPlatformBigEndian",
      "MFPlatformLittleEndian",
      "MFPutWaitingWorkItem",
      "MFPutWorkItem",
      "MFPutWorkItem2",
      "MFPutWorkItemEx",
      "MFPutWorkItemEx2",
      "MFRegisterLocalByteStreamHandler",
      "MFRegisterLocalSchemeHandler",
      "MFRegisterPlatformWithMMCSS",
      "MFRemovePeriodicCallback",
      "MFScheduleWorkItem",
      "MFScheduleWorkItemEx",
      "MFSerializeAttributesToStream",
      "MFSerializeEvent",
      "MFSerializeMediaTypeToStream",
      "MFSerializePresentationDescriptor",
      "MFSetMinimumMemoryAlignment",
      "MFSetSockaddrAny",
      "MFSetWindowForContentProtection",
      "MFShutdown",
      "MFSplitSample",
      "MFStartup",
      "MFStreamDescriptorProtectMediaType",
      "MFTEnum",
      "MFTEnum2",
      "MFTEnumEx",
      "MFTGetInfo",
      "MFTRegister",
      "MFTRegisterLocal",
      "MFTRegisterLocalByCLSID",
      "MFTUnregister",
      "MFTUnregisterLocal",
      "MFTUnregisterLocalByCLSID",
      "MFTraceError",
      "MFTraceFuncEnter",
      "MFUnjoinWorkQueue",
      "MFUnlockDXGIDeviceManager",
      "MFUnlockPlatform",
      "MFUnlockWorkQueue",
      "MFUnregisterPlatformFromMMCSS",
      "MFUnwrapMediaType",
      "MFValidateMediaTypeSize",
      "MFWrapMediaType",
      "MFWrapSocket",
      "MFllMulDiv",
      "PropVariantFromStream",
      "PropVariantToStream",
      "ValidateWaveFormat"
    ]
  },
  "hashes": {
    "sha2": "a6b0e6c3d1652759ab461cad244203ba301243d73f0f07c96e482c6e42c9340b",
    "ssdeep": "24576:KM+S1dqONrtaweM9g+eVViBjh0JsB9GILftyZy5WJMGxi4oSsPku:Kq1dHrtje+eV80mbLP8vxn0P"
  },
  "intent": {
    "intentions": 9,
    "uniq_apis_matched": 16,
    "results": [
      {
        "intent": "Can Terminate Processes On The Target System",
        "tag": "Expert Input:IBO.0025",
        "component": "Processes",
        "inputs": 1,
        "matches": 1,
        "apis": [
          "TerminateProcess"
        ]
      },
      {
        "intent": "Can Enumerate The Windows Registry",
        "tag": "Expert Input:IBO.009 - Enumerate The Windows Registry",
        "component": "Registry",
        "inputs": 6,
        "matches": 2,
        "apis": [
          "RegEnumKeyExW",
          "RegEnumValueW"
        ]
      },
      {
        "intent": "Can Access And Read Windows Tokens",
        "tag": "Expert Input:IBO.0020 - Windows Token Access",
        "component": "Privileges",
        "inputs": 4,
        "matches": 1,
        "apis": [
          "OpenProcessToken"
        ]
      },
      {
        "intent": "Queries and Discovers General Attributes From The Target System",
        "tag": "Discovery:T1082 - System Information Discovery",
        "component": "---",
        "inputs": 3,
        "matches": 1,
        "apis": [
          "GetNativeSystemInfo"
        ]
      },
      {
        "intent": "Queries And Discovers Windows Registry Configuration Settings",
        "tag": "Discovery:T1012 - Query Registry",
        "component": "Registry",
        "inputs": 11,
        "matches": 3,
        "apis": [
          "RegGetValueW",
          "RegQueryInfoKeyW",
          "RegQueryValueExW"
        ]
      },
      {
        "intent": "Can Delay Loading of DLLs Until Runtime/Process Execution",
        "tag": "Expert Input:IBO.005 - Load DLL Resources With Delay During Runtime",
        "component": "Memory",
        "inputs": 2,
        "matches": 2,
        "apis": [
          "DelayLoadFailureHook",
          "ResolveDelayLoadedAPI"
        ]
      },
      {
        "intent": "Can Execute or Spawn New Processes On The Target System",
        "tag": "Expert Input:IBO.002 - Spawn New Process",
        "component": "Processes",
        "inputs": 7,
        "matches": 1,
        "apis": [
          "CreateProcessW"
        ]
      },
      {
        "intent": "Enumerates LoadedModules (DLLs) From Running Processes",
        "tag": "Discovery:T1057 - Process Discovery",
        "component": "Processes",
        "inputs": 4,
        "matches": 1,
        "apis": [
          "K32EnumProcessModules"
        ]
      },
      {
        "intent": "Can Create/Manipulate The Windows Registry",
        "tag": "Expert Input:IBO.008 - Create/Manipulate The Windows Registry",
        "component": "Registry",
        "inputs": 33,
        "matches": 4,
        "apis": [
          "RegCreateKeyExW",
          "RegDeleteValueW",
          "RegOpenKeyExW",
          "RegSetValueExW"
        ]
      }
    ]
  }
}