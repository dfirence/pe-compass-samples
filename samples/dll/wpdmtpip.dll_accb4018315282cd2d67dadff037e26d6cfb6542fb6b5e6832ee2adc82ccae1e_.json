{
  "name": "wpdmtpip.dll",
  "path": "\\\\?\\C:\\Windows\\System32\\DriverStore\\FileRepository\\wpdmtp.inf_amd64_42b97498c7087292\\WpdMtpIP.dll",
  "size": 112128,
  "is_64": true,
  "is_lib": true,
  "is_dotnet": false,
  "has_imports": true,
  "has_exports": true,
  "subsystem": 2,
  "subsystem_caption": "The Windows Graphical User Interface (GUI) Subsystem",
  "libs": [
    "advapi32.dll",
    "kernel32.dll",
    "msvcrt.dll",
    "ntdll.dll",
    "user32.dll",
    "ws2_32.dll"
  ],
  "imports": [
    {
      "lib": "user32.dll",
      "count": 2,
      "functions": [
        "CharNextW",
        "UnregisterClassA"
      ]
    },
    {
      "lib": "ntdll.dll",
      "count": 3,
      "functions": [
        "RtlCaptureContext",
        "RtlLookupFunctionEntry",
        "RtlVirtualUnwind"
      ]
    },
    {
      "lib": "ws2_32.dll",
      "count": 16,
      "functions": [
        "GetAddrInfoW",
        "ORDINAL 111",
        "ORDINAL 115",
        "ORDINAL 116",
        "ORDINAL 14",
        "ORDINAL 21",
        "ORDINAL 3",
        "ORDINAL 4",
        "ORDINAL 7",
        "WSACloseEvent",
        "WSACreateEvent",
        "WSAGetOverlappedResult",
        "WSARecv",
        "WSASend",
        "WSASocketW",
        "WSAWaitForMultipleEvents"
      ]
    },
    {
      "lib": "advapi32.dll",
      "count": 18,
      "functions": [
        "EventRegister",
        "EventSetInformation",
        "EventUnregister",
        "EventWriteTransfer",
        "GetTraceEnableFlags",
        "GetTraceEnableLevel",
        "GetTraceLoggerHandle",
        "RegCloseKey",
        "RegCreateKeyExW",
        "RegDeleteValueW",
        "RegEnumKeyExW",
        "RegOpenKeyExW",
        "RegQueryInfoKeyW",
        "RegSetValueExW",
        "RegisterTraceGuidsW",
        "TraceEvent",
        "TraceMessage",
        "UnregisterTraceGuids"
      ]
    },
    {
      "lib": "msvcrt.dll",
      "count": 29,
      "functions": [
        "??0exception@@QEAA@AEBV0@@Z",
        "??0exception@@QEAA@XZ",
        "??1exception@@UEAA@XZ",
        "??1type_info@@UEAA@XZ",
        "_CxxThrowException",
        "_XcptFilter",
        "__C_specific_handler",
        "__CxxFrameHandler3",
        "__dllonexit",
        "_amsg_exit",
        "_callnewh",
        "_errno",
        "_initterm",
        "_lock",
        "_onexit",
        "_purecall",
        "_unlock",
        "_vsnprintf_s",
        "_vsnwprintf",
        "free",
        "malloc",
        "memcpy",
        "memcpy_s",
        "memmove_s",
        "memset",
        "realloc",
        "wcscat_s",
        "wcscpy_s",
        "wcsncpy_s"
      ]
    },
    {
      "lib": "kernel32.dll",
      "count": 66,
      "functions": [
        "AcquireSRWLockExclusive",
        "CloseHandle",
        "CreateEventW",
        "CreateMutexExW",
        "CreateSemaphoreExW",
        "CreateThread",
        "DebugBreak",
        "DelayLoadFailureHook",
        "DeleteCriticalSection",
        "DisableThreadLibraryCalls",
        "EnterCriticalSection",
        "FindResourceExW",
        "FormatMessageW",
        "FreeLibrary",
        "GetComputerNameW",
        "GetCurrentProcess",
        "GetCurrentProcessId",
        "GetCurrentThreadId",
        "GetLastError",
        "GetModuleFileNameA",
        "GetModuleFileNameW",
        "GetModuleHandleExW",
        "GetModuleHandleW",
        "GetProcAddress",
        "GetProcessHeap",
        "GetSystemTimeAsFileTime",
        "GetTickCount",
        "HeapAlloc",
        "HeapDestroy",
        "HeapFree",
        "HeapReAlloc",
        "HeapSize",
        "InitOnceBeginInitialize",
        "InitOnceComplete",
        "InitializeConditionVariable",
        "InitializeCriticalSection",
        "InitializeSRWLock",
        "IsDebuggerPresent",
        "LeaveCriticalSection",
        "LoadLibraryExW",
        "LoadResource",
        "LockResource",
        "MultiByteToWideChar",
        "OpenSemaphoreW",
        "OutputDebugStringA",
        "OutputDebugStringW",
        "QueryPerformanceCounter",
        "RaiseException",
        "ReleaseMutex",
        "ReleaseSRWLockExclusive",
        "ReleaseSemaphore",
        "ResetEvent",
        "ResolveDelayLoadedAPI",
        "SetEvent",
        "SetLastError",
        "SetUnhandledExceptionFilter",
        "SizeofResource",
        "Sleep",
        "SleepConditionVariableCS",
        "TerminateProcess",
        "UnhandledExceptionFilter",
        "WaitForMultipleObjects",
        "WaitForSingleObject",
        "WaitForSingleObjectEx",
        "WakeConditionVariable",
        "lstrcmpiW"
      ]
    }
  ],
  "exports": {
    "count": 4,
    "functions": [
      "DllCanUnloadNow",
      "DllGetClassObject",
      "DllRegisterServer",
      "DllUnregisterServer"
    ]
  },
  "hashes": {
    "sha2": "accb4018315282cd2d67dadff037e26d6cfb6542fb6b5e6832ee2adc82ccae1e",
    "ssdeep": "3072:QJ71U8wgxL7C8mDP0yeFTemqxbDvMUu0:y1hwgZCmlFTemM/EU"
  },
  "intent": {
    "intentions": 6,
    "uniq_apis_matched": 11,
    "results": [
      {
        "intent": "Can Transmit/Receive Data Over The Network",
        "tag": "Expert Input:IBO.00011 - Network Socket Send/Receive",
        "component": "Networking",
        "inputs": 16,
        "matches": 2,
        "apis": [
          "WSARecv",
          "WSASend"
        ]
      },
      {
        "intent": "Can Enumerate The Windows Registry",
        "tag": "Expert Input:IBO.0009 - Enumerate The Windows Registry",
        "component": "Registry",
        "inputs": 6,
        "matches": 1,
        "apis": [
          "RegEnumKeyExW"
        ]
      },
      {
        "intent": "Can Create/Manipulate The Windows Registry",
        "tag": "Expert Input:IBO.0008 - Create/Manipulate The Windows Registry",
        "component": "Registry",
        "inputs": 33,
        "matches": 4,
        "apis": [
          "RegCreateKeyExW",
          "RegDeleteValueW",
          "RegOpenKeyExW",
          "RegSetValueExW"
        ]
      },
      {
        "intent": "Queries And Discovers Windows Registry Configuration Settings",
        "tag": "Discovery:T1012 - Query Registry",
        "component": "Registry",
        "inputs": 11,
        "matches": 1,
        "apis": [
          "RegQueryInfoKeyW"
        ]
      },
      {
        "intent": "Can Delay Loading of DLLs Until Runtime/Process Execution",
        "tag": "Expert Input:IBO.0005 - Load DLL Resources With Delay During Runtime",
        "component": "---",
        "inputs": 2,
        "matches": 2,
        "apis": [
          "DelayLoadFailureHook",
          "ResolveDelayLoadedAPI"
        ]
      },
      {
        "intent": "Can Conduct DNS Queries",
        "tag": "Expert Input:IBO.00014 - Network Layer-7 DNS Usage",
        "component": "Networking",
        "inputs": 31,
        "matches": 1,
        "apis": [
          "GetAddrInfoW"
        ]
      }
    ]
  }
}