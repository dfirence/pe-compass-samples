{
  "name": "deviceassociation.dll",
  "path": "\\\\?\\C:\\Windows\\SysWOW64\\deviceassociation.dll",
  "size": 45632,
  "is_64": false,
  "is_lib": true,
  "is_dotnet": true,
  "has_imports": true,
  "has_exports": true,
  "subsystem": 2,
  "subsystem_caption": "The Windows Graphical User Interface (GUI) Subsystem",
  "libs": [
    "api-ms-win-core-delayload-l1-1-0.dll",
    "api-ms-win-core-delayload-l1-1-1.dll",
    "api-ms-win-core-errorhandling-l1-1-0.dll",
    "api-ms-win-core-handle-l1-1-0.dll",
    "api-ms-win-core-heap-l1-1-0.dll",
    "api-ms-win-core-libraryloader-l1-2-0.dll",
    "api-ms-win-core-processthreads-l1-1-0.dll",
    "api-ms-win-core-profile-l1-1-0.dll",
    "api-ms-win-core-synch-l1-1-0.dll",
    "api-ms-win-core-synch-l1-2-0.dll",
    "api-ms-win-core-sysinfo-l1-1-0.dll",
    "api-ms-win-core-threadpool-l1-2-0.dll",
    "api-ms-win-eventing-classicprovider-l1-1-0.dll",
    "api-ms-win-eventing-provider-l1-1-0.dll",
    "msvcrt.dll",
    "ntdll.dll",
    "rpcrt4.dll"
  ],
  "imports": [
    {
      "lib": "ntdll.dll",
      "count": 1,
      "functions": [
        "RtlCompareMemory"
      ]
    },
    {
      "lib": "api-ms-win-core-heap-l1-1-0.dll",
      "count": 3,
      "functions": [
        "GetProcessHeap",
        "HeapAlloc",
        "HeapFree"
      ]
    },
    {
      "lib": "api-ms-win-eventing-classicprovider-l1-1-0.dll",
      "count": 6,
      "functions": [
        "GetTraceEnableFlags",
        "GetTraceEnableLevel",
        "GetTraceLoggerHandle",
        "RegisterTraceGuidsW",
        "TraceMessage",
        "UnregisterTraceGuids"
      ]
    },
    {
      "lib": "msvcrt.dll",
      "count": 7,
      "functions": [
        "_XcptFilter",
        "_amsg_exit",
        "_except_handler4_common",
        "_initterm",
        "free",
        "malloc",
        "memset"
      ]
    },
    {
      "lib": "api-ms-win-core-handle-l1-1-0.dll",
      "count": 1,
      "functions": [
        "CloseHandle"
      ]
    },
    {
      "lib": "api-ms-win-core-synch-l1-2-0.dll",
      "count": 3,
      "functions": [
        "Sleep",
        "SleepConditionVariableSRW",
        "WakeAllConditionVariable"
      ]
    },
    {
      "lib": "api-ms-win-core-processthreads-l1-1-0.dll",
      "count": 4,
      "functions": [
        "GetCurrentProcess",
        "GetCurrentProcessId",
        "GetCurrentThreadId",
        "TerminateProcess"
      ]
    },
    {
      "lib": "api-ms-win-core-delayload-l1-1-1.dll",
      "count": 1,
      "functions": [
        "ResolveDelayLoadedAPI"
      ]
    },
    {
      "lib": "api-ms-win-eventing-provider-l1-1-0.dll",
      "count": 1,
      "functions": [
        "EventActivityIdControl"
      ]
    },
    {
      "lib": "api-ms-win-core-delayload-l1-1-0.dll",
      "count": 1,
      "functions": [
        "DelayLoadFailureHook"
      ]
    },
    {
      "lib": "api-ms-win-core-sysinfo-l1-1-0.dll",
      "count": 2,
      "functions": [
        "GetSystemTimeAsFileTime",
        "GetTickCount"
      ]
    },
    {
      "lib": "api-ms-win-core-threadpool-l1-2-0.dll",
      "count": 6,
      "functions": [
        "CallbackMayRunLong",
        "CloseThreadpoolWait",
        "CreateThreadpoolWait",
        "SetThreadpoolWait",
        "TrySubmitThreadpoolCallback",
        "WaitForThreadpoolWaitCallbacks"
      ]
    },
    {
      "lib": "api-ms-win-core-profile-l1-1-0.dll",
      "count": 1,
      "functions": [
        "QueryPerformanceCounter"
      ]
    },
    {
      "lib": "api-ms-win-core-libraryloader-l1-2-0.dll",
      "count": 3,
      "functions": [
        "DisableThreadLibraryCalls",
        "FreeLibrary",
        "GetModuleHandleExW"
      ]
    },
    {
      "lib": "rpcrt4.dll",
      "count": 13,
      "functions": [
        "I_RpcExceptionFilter",
        "NdrAsyncClientCall2",
        "NdrClientCall4",
        "RpcAsyncCancelCall",
        "RpcAsyncCompleteCall",
        "RpcAsyncInitializeHandle",
        "RpcBindingFree",
        "RpcBindingFromStringBindingW",
        "RpcBindingSetOption",
        "RpcExceptionFilter",
        "RpcSsDestroyClientContext",
        "RpcStringBindingComposeW",
        "RpcStringFreeW"
      ]
    },
    {
      "lib": "api-ms-win-core-synch-l1-1-0.dll",
      "count": 10,
      "functions": [
        "AcquireSRWLockExclusive",
        "CreateEventW",
        "DeleteCriticalSection",
        "EnterCriticalSection",
        "InitializeCriticalSection",
        "LeaveCriticalSection",
        "ReleaseSRWLockExclusive",
        "SetEvent",
        "SleepEx",
        "WaitForSingleObject"
      ]
    },
    {
      "lib": "api-ms-win-core-errorhandling-l1-1-0.dll",
      "count": 3,
      "functions": [
        "GetLastError",
        "SetUnhandledExceptionFilter",
        "UnhandledExceptionFilter"
      ]
    }
  ],
  "exports": {
    "count": 28,
    "functions": [
      "DafAepExport",
      "DafAepImport",
      "DafChallengeDevicePresence",
      "DafCloseAssociationContext",
      "DafCloseChallengeContext",
      "DafCloseImportExportContext",
      "DafCloseInboundContext",
      "DafCreateAssociationContext",
      "DafCreateAssociationContextForApp",
      "DafCreateAssociationContextFromOobBlob",
      "DafCreateChallengeContext",
      "DafCreateDeviceChallengeContext",
      "DafCreateDeviceInterfaceChallengeContext",
      "DafCreateImportExportContext",
      "DafCreateInboundContext",
      "DafGetInboundAssociationResultForAppActivation",
      "DafMemFree",
      "DafRegisterForInboundAssociationsAppActivation",
      "DafSelectCeremony",
      "DafStartAepExport",
      "DafStartAepImport",
      "DafStartDeviceStatusNotification",
      "DafStartEnumCeremonies",
      "DafStartFinalize",
      "DafStartListenForInboundAssociations",
      "DafStartReadCeremonyData",
      "DafStartRemoveAssociation",
      "DafStartWriteCeremonyData"
    ]
  },
  "hashes": {
    "sha2": "04dd0085869b03c5165e9a744d950587649f6b8990ebccb6bac3bdfded0276f6",
    "ssdeep": "768:y7GnAIVQU4gNNuomRQpEVJQeigPBapGI1PtptJ:yoAIVQUtuhQuJQaB4PPtvJ"
  },
  "intent": {
    "intentions": 1,
    "uniq_apis_matched": 2,
    "results": [
      {
        "intent": "Has Ability To Delay Loading of DLLs Until Runtime/Process Execution",
        "tag": "Expert Input:IBO.0005 - Load DLL Resources With Delay During Runtime",
        "component": "Memory",
        "inputs": 2,
        "matches": 2,
        "apis": [
          "DelayLoadFailureHook",
          "ResolveDelayLoadedAPI"
        ]
      }
    ]
  }
}