{
  "name": "iphlpapi.dll",
  "path": "\\\\?\\C:\\Windows\\SysWOW64\\IPHLPAPI.DLL",
  "size": 196784,
  "is_64": false,
  "is_lib": true,
  "is_dotnet": true,
  "has_imports": true,
  "has_exports": true,
  "subsystem": 3,
  "subsystem_caption": "The Windows Character (Console UI) Subsystem",
  "libs": [
    "api-ms-win-core-crt-l1-1-0.dll",
    "api-ms-win-core-crt-l2-1-0.dll",
    "api-ms-win-core-delayload-l1-1-0.dll",
    "api-ms-win-core-delayload-l1-1-1.dll",
    "api-ms-win-core-errorhandling-l1-1-0.dll",
    "api-ms-win-core-handle-l1-1-0.dll",
    "api-ms-win-core-heap-l1-1-0.dll",
    "api-ms-win-core-heap-obsolete-l1-1-0.dll",
    "api-ms-win-core-io-l1-1-0.dll",
    "api-ms-win-core-libraryloader-l1-2-0.dll",
    "api-ms-win-core-localization-l1-2-0.dll",
    "api-ms-win-core-processthreads-l1-1-0.dll",
    "api-ms-win-core-processthreads-l1-1-1.dll",
    "api-ms-win-core-profile-l1-1-0.dll",
    "api-ms-win-core-registry-l1-1-0.dll",
    "api-ms-win-core-string-l1-1-0.dll",
    "api-ms-win-core-synch-l1-1-0.dll",
    "api-ms-win-core-synch-l1-2-0.dll",
    "api-ms-win-core-sysinfo-l1-1-0.dll",
    "api-ms-win-core-threadpool-l1-2-0.dll",
    "api-ms-win-core-util-l1-1-0.dll",
    "api-ms-win-eventing-classicprovider-l1-1-0.dll",
    "api-ms-win-security-base-l1-1-0.dll",
    "ntdll.dll"
  ],
  "imports": [
    {
      "lib": "api-ms-win-core-delayload-l1-1-1.dll",
      "count": 1,
      "functions": [
        "ResolveDelayLoadedAPI"
      ]
    },
    {
      "lib": "api-ms-win-core-errorhandling-l1-1-0.dll",
      "count": 4,
      "functions": [
        "GetLastError",
        "SetLastError",
        "SetUnhandledExceptionFilter",
        "UnhandledExceptionFilter"
      ]
    },
    {
      "lib": "api-ms-win-core-heap-l1-1-0.dll",
      "count": 4,
      "functions": [
        "GetProcessHeap",
        "HeapAlloc",
        "HeapFree",
        "HeapReAlloc"
      ]
    },
    {
      "lib": "api-ms-win-core-util-l1-1-0.dll",
      "count": 2,
      "functions": [
        "DecodePointer",
        "EncodePointer"
      ]
    },
    {
      "lib": "api-ms-win-core-processthreads-l1-1-0.dll",
      "count": 7,
      "functions": [
        "GetCurrentProcess",
        "GetCurrentProcessId",
        "GetCurrentThread",
        "GetCurrentThreadId",
        "OpenProcessToken",
        "QueueUserAPC",
        "TerminateProcess"
      ]
    },
    {
      "lib": "api-ms-win-core-libraryloader-l1-2-0.dll",
      "count": 6,
      "functions": [
        "DisableThreadLibraryCalls",
        "FreeLibrary",
        "GetModuleFileNameW",
        "GetModuleHandleExW",
        "GetModuleHandleW",
        "GetProcAddress"
      ]
    },
    {
      "lib": "api-ms-win-core-sysinfo-l1-1-0.dll",
      "count": 3,
      "functions": [
        "GetSystemDirectoryW",
        "GetSystemTimeAsFileTime",
        "GetTickCount"
      ]
    },
    {
      "lib": "api-ms-win-core-profile-l1-1-0.dll",
      "count": 1,
      "functions": [
        "QueryPerformanceCounter"
      ]
    },
    {
      "lib": "api-ms-win-security-base-l1-1-0.dll",
      "count": 1,
      "functions": [
        "AdjustTokenPrivileges"
      ]
    },
    {
      "lib": "api-ms-win-core-io-l1-1-0.dll",
      "count": 1,
      "functions": [
        "DeviceIoControl"
      ]
    },
    {
      "lib": "api-ms-win-core-synch-l1-2-0.dll",
      "count": 1,
      "functions": [
        "Sleep"
      ]
    },
    {
      "lib": "api-ms-win-eventing-classicprovider-l1-1-0.dll",
      "count": 6,
      "functions": [
        "GetTraceEnableFlags",
        "GetTraceEnableLevel",
        "GetTraceLoggerHandle",
        "RegisterTraceGuidsW",
        "TraceMessage",
        "UnregisterTraceGuids"
      ]
    },
    {
      "lib": "api-ms-win-core-handle-l1-1-0.dll",
      "count": 2,
      "functions": [
        "CloseHandle",
        "DuplicateHandle"
      ]
    },
    {
      "lib": "api-ms-win-core-delayload-l1-1-0.dll",
      "count": 1,
      "functions": [
        "DelayLoadFailureHook"
      ]
    },
    {
      "lib": "api-ms-win-core-synch-l1-1-0.dll",
      "count": 6,
      "functions": [
        "CreateEventW",
        "DeleteCriticalSection",
        "EnterCriticalSection",
        "InitializeCriticalSection",
        "LeaveCriticalSection",
        "SetEvent"
      ]
    },
    {
      "lib": "api-ms-win-core-threadpool-l1-2-0.dll",
      "count": 5,
      "functions": [
        "CallbackMayRunLong",
        "CloseThreadpoolWork",
        "CreateThreadpoolWork",
        "SubmitThreadpoolWork",
        "WaitForThreadpoolWorkCallbacks"
      ]
    },
    {
      "lib": "ntdll.dll",
      "count": 31,
      "functions": [
        "NtClose",
        "NtCreateFile",
        "NtDeviceIoControlFile",
        "NtOpenFile",
        "NtQueryInformationProcess",
        "NtQueryWnfStateData",
        "NtWaitForSingleObject",
        "RtlAllocateHeap",
        "RtlAnsiStringToUnicodeString",
        "RtlAppendUnicodeStringToString",
        "RtlFreeHeap",
        "RtlFreeUnicodeString",
        "RtlGUIDFromString",
        "RtlGetPersistedStateLocation",
        "RtlIdnToAscii",
        "RtlInitAnsiString",
        "RtlInitUnicodeString",
        "RtlIpv4AddressToStringA",
        "RtlIpv4StringToAddressExW",
        "RtlIpv6StringToAddressExW",
        "RtlNtStatusToDosError",
        "RtlStringFromGUID",
        "RtlSubscribeWnfStateChangeNotification",
        "RtlTimeToSecondsSince1970",
        "RtlUnicodeStringToAnsiString",
        "RtlUnsubscribeWnfNotificationWaitForCompletion",
        "ZwClose",
        "ZwCreateFile",
        "ZwDeviceIoControlFile",
        "ZwWaitForSingleObject",
        "qsort"
      ]
    },
    {
      "lib": "api-ms-win-core-processthreads-l1-1-1.dll",
      "count": 2,
      "functions": [
        "GetProcessMitigationPolicy",
        "OpenProcess"
      ]
    },
    {
      "lib": "api-ms-win-core-crt-l2-1-0.dll",
      "count": 3,
      "functions": [
        "_initterm",
        "_initterm_e",
        "time"
      ]
    },
    {
      "lib": "api-ms-win-core-string-l1-1-0.dll",
      "count": 1,
      "functions": [
        "WideCharToMultiByte"
      ]
    },
    {
      "lib": "api-ms-win-core-crt-l1-1-0.dll",
      "count": 14,
      "functions": [
        "_except_handler4_common",
        "_vsnprintf_s",
        "_vsnwprintf_s",
        "_wcsicmp",
        "_wcsnicmp",
        "_wtoi",
        "iswdigit",
        "memcmp",
        "memcpy",
        "memset",
        "qsort_s",
        "wcschr",
        "wcscpy_s",
        "wcsncmp"
      ]
    },
    {
      "lib": "api-ms-win-core-localization-l1-2-0.dll",
      "count": 1,
      "functions": [
        "FormatMessageW"
      ]
    },
    {
      "lib": "api-ms-win-core-registry-l1-1-0.dll",
      "count": 5,
      "functions": [
        "RegCloseKey",
        "RegOpenKeyExA",
        "RegOpenKeyExW",
        "RegQueryValueExA",
        "RegQueryValueExW"
      ]
    },
    {
      "lib": "api-ms-win-core-heap-obsolete-l1-1-0.dll",
      "count": 2,
      "functions": [
        "LocalAlloc",
        "LocalFree"
      ]
    }
  ],
  "exports": {
    "count": 297,
    "functions": [
      "AddIPAddress",
      "AllocateAndGetInterfaceInfoFromStack",
      "AllocateAndGetIpAddrTableFromStack",
      "CancelIPChangeNotify",
      "CancelIfTimestampConfigChange",
      "CancelMibChangeNotify2",
      "CaptureInterfaceHardwareCrossTimestamp",
      "CloseCompartment",
      "CloseGetIPPhysicalInterfaceForDestination",
      "ConvertCompartmentGuidToId",
      "ConvertCompartmentIdToGuid",
      "ConvertGuidToStringA",
      "ConvertGuidToStringW",
      "ConvertInterfaceAliasToLuid",
      "ConvertInterfaceGuidToLuid",
      "ConvertInterfaceIndexToLuid",
      "ConvertInterfaceLuidToAlias",
      "ConvertInterfaceLuidToGuid",
      "ConvertInterfaceLuidToIndex",
      "ConvertInterfaceLuidToNameA",
      "ConvertInterfaceLuidToNameW",
      "ConvertInterfaceNameToLuidA",
      "ConvertInterfaceNameToLuidW",
      "ConvertInterfacePhysicalAddressToLuid",
      "ConvertIpv4MaskToLength",
      "ConvertLengthToIpv4Mask",
      "ConvertRemoteInterfaceAliasToLuid",
      "ConvertRemoteInterfaceGuidToLuid",
      "ConvertRemoteInterfaceIndexToLuid",
      "ConvertRemoteInterfaceLuidToAlias",
      "ConvertRemoteInterfaceLuidToGuid",
      "ConvertRemoteInterfaceLuidToIndex",
      "ConvertStringToGuidA",
      "ConvertStringToGuidW",
      "ConvertStringToInterfacePhysicalAddress",
      "CreateAnycastIpAddressEntry",
      "CreateCompartment",
      "CreateIpForwardEntry",
      "CreateIpForwardEntry2",
      "CreateIpNetEntry",
      "CreateIpNetEntry2",
      "CreatePersistentTcpPortReservation",
      "CreatePersistentUdpPortReservation",
      "CreateProxyArpEntry",
      "CreateSortedAddressPairs",
      "CreateUnicastIpAddressEntry",
      "DeleteAnycastIpAddressEntry",
      "DeleteCompartment",
      "DeleteIPAddress",
      "DeleteIpForwardEntry",
      "DeleteIpForwardEntry2",
      "DeleteIpNetEntry",
      "DeleteIpNetEntry2",
      "DeletePersistentTcpPortReservation",
      "DeletePersistentUdpPortReservation",
      "DeleteProxyArpEntry",
      "DeleteUnicastIpAddressEntry",
      "DisableMediaSense",
      "EnableRouter",
      "FlushIpNetTable",
      "FlushIpNetTable2",
      "FlushIpPathTable",
      "FreeDnsSettings",
      "FreeInterfaceDnsSettings",
      "FreeMibTable",
      "GetAdapterIndex",
      "GetAdapterOrderMap",
      "GetAdaptersAddresses",
      "GetAdaptersInfo",
      "GetAnycastIpAddressEntry",
      "GetAnycastIpAddressTable",
      "GetBestInterface",
      "GetBestInterfaceEx",
      "GetBestRoute",
      "GetBestRoute2",
      "GetCurrentThreadCompartmentId",
      "GetCurrentThreadCompartmentScope",
      "GetDefaultCompartmentId",
      "GetDnsSettings",
      "GetExtendedTcpTable",
      "GetExtendedUdpTable",
      "GetFriendlyIfIndex",
      "GetIcmpStatistics",
      "GetIcmpStatisticsEx",
      "GetIfEntry",
      "GetIfEntry2",
      "GetIfEntry2Ex",
      "GetIfStackTable",
      "GetIfTable",
      "GetIfTable2",
      "GetIfTable2Ex",
      "GetInterfaceCompartmentId",
      "GetInterfaceCurrentTimestampCapabilities",
      "GetInterfaceDnsSettings",
      "GetInterfaceHardwareTimestampCapabilities",
      "GetInterfaceInfo",
      "GetInvertedIfStackTable",
      "GetIpAddrTable",
      "GetIpErrorString",
      "GetIpForwardEntry2",
      "GetIpForwardTable",
      "GetIpForwardTable2",
      "GetIpInterfaceEntry",
      "GetIpInterfaceTable",
      "GetIpNetEntry2",
      "GetIpNetTable",
      "GetIpNetTable2",
      "GetIpNetworkConnectionBandwidthEstimates",
      "GetIpPathEntry",
      "GetIpPathTable",
      "GetIpStatistics",
      "GetIpStatisticsEx",
      "GetJobCompartmentId",
      "GetMulticastIpAddressEntry",
      "GetMulticastIpAddressTable",
      "GetNetworkConnectivityHint",
      "GetNetworkConnectivityHintForInterface",
      "GetNetworkInformation",
      "GetNetworkParams",
      "GetNumberOfInterfaces",
      "GetOwnerModuleFromPidAndInfo",
      "GetOwnerModuleFromTcp6Entry",
      "GetOwnerModuleFromTcpEntry",
      "GetOwnerModuleFromUdp6Entry",
      "GetOwnerModuleFromUdpEntry",
      "GetPerAdapterInfo",
      "GetPerTcp6ConnectionEStats",
      "GetPerTcp6ConnectionStats",
      "GetPerTcpConnectionEStats",
      "GetPerTcpConnectionStats",
      "GetRTTAndHopCount",
      "GetSessionCompartmentId",
      "GetTcp6Table",
      "GetTcp6Table2",
      "GetTcpStatistics",
      "GetTcpStatisticsEx",
      "GetTcpStatisticsEx2",
      "GetTcpTable",
      "GetTcpTable2",
      "GetTeredoPort",
      "GetUdp6Table",
      "GetUdpStatistics",
      "GetUdpStatisticsEx",
      "GetUdpStatisticsEx2",
      "GetUdpTable",
      "GetUniDirectionalAdapterInfo",
      "GetUnicastIpAddressEntry",
      "GetUnicastIpAddressTable",
      "GetWPAOACSupportLevel",
      "Icmp6CreateFile",
      "Icmp6ParseReplies",
      "Icmp6SendEcho2",
      "IcmpCloseHandle",
      "IcmpCreateFile",
      "IcmpParseReplies",
      "IcmpSendEcho",
      "IcmpSendEcho2",
      "IcmpSendEcho2Ex",
      "InitializeCompartmentEntry",
      "InitializeIpForwardEntry",
      "InitializeIpInterfaceEntry",
      "InitializeUnicastIpAddressEntry",
      "InternalCleanupPersistentStore",
      "InternalCreateAnycastIpAddressEntry",
      "InternalCreateIpForwardEntry",
      "InternalCreateIpForwardEntry2",
      "InternalCreateIpNetEntry",
      "InternalCreateIpNetEntry2",
      "InternalCreateOrRefIpForwardEntry2",
      "InternalCreateUnicastIpAddressEntry",
      "InternalDeleteAnycastIpAddressEntry",
      "InternalDeleteIpForwardEntry",
      "InternalDeleteIpForwardEntry2",
      "InternalDeleteIpNetEntry",
      "InternalDeleteIpNetEntry2",
      "InternalDeleteUnicastIpAddressEntry",
      "InternalFindInterfaceByAddress",
      "InternalGetAnycastIpAddressEntry",
      "InternalGetAnycastIpAddressTable",
      "InternalGetBoundTcp6EndpointTable",
      "InternalGetBoundTcpEndpointTable",
      "InternalGetForwardIpTable2",
      "InternalGetIPPhysicalInterfaceForDestination",
      "InternalGetIfEntry2",
      "InternalGetIfTable",
      "InternalGetIfTable2",
      "InternalGetIpAddrTable",
      "InternalGetIpForwardEntry2",
      "InternalGetIpForwardTable",
      "InternalGetIpInterfaceEntry",
      "InternalGetIpInterfaceTable",
      "InternalGetIpNetEntry2",
      "InternalGetIpNetTable",
      "InternalGetIpNetTable2",
      "InternalGetMulticastIpAddressEntry",
      "InternalGetMulticastIpAddressTable",
      "InternalGetRtcSlotInformation",
      "InternalGetTcp6Table2",
      "InternalGetTcp6TableWithOwnerModule",
      "InternalGetTcp6TableWithOwnerPid",
      "InternalGetTcpTable",
      "InternalGetTcpTable2",
      "InternalGetTcpTableEx",
      "InternalGetTcpTableWithOwnerModule",
      "InternalGetTcpTableWithOwnerPid",
      "InternalGetTunnelPhysicalAdapter",
      "InternalGetUdp6TableWithOwnerModule",
      "InternalGetUdp6TableWithOwnerPid",
      "InternalGetUdpTable",
      "InternalGetUdpTableEx",
      "InternalGetUdpTableWithOwnerModule",
      "InternalGetUdpTableWithOwnerPid",
      "InternalGetUnicastIpAddressEntry",
      "InternalGetUnicastIpAddressTable",
      "InternalIcmpCreateFileEx",
      "InternalSetIfEntry",
      "InternalSetIpForwardEntry",
      "InternalSetIpForwardEntry2",
      "InternalSetIpInterfaceEntry",
      "InternalSetIpNetEntry",
      "InternalSetIpNetEntry2",
      "InternalSetIpStats",
      "InternalSetTcpEntry",
      "InternalSetTeredoPort",
      "InternalSetUnicastIpAddressEntry",
      "IpReleaseAddress",
      "IpRenewAddress",
      "LookupPersistentTcpPortReservation",
      "LookupPersistentUdpPortReservation",
      "NTPTimeToNTFileTime",
      "NTTimeToNTPTime",
      "NhGetGuidFromInterfaceName",
      "NhGetInterfaceDescriptionFromGuid",
      "NhGetInterfaceNameFromDeviceGuid",
      "NhGetInterfaceNameFromGuid",
      "NhpAllocateAndGetInterfaceInfoFromStack",
      "NotifyAddrChange",
      "NotifyCompartmentChange",
      "NotifyIfTimestampConfigChange",
      "NotifyIpInterfaceChange",
      "NotifyNetworkConnectivityHintChange",
      "NotifyRouteChange",
      "NotifyRouteChange2",
      "NotifyStableUnicastIpAddressTable",
      "NotifyTeredoPortChange",
      "NotifyUnicastIpAddressChange",
      "OpenCompartment",
      "ParseNetworkString",
      "ResolveIpNetEntry2",
      "ResolveNeighbor",
      "RestoreMediaSense",
      "SendARP",
      "SetAdapterIpAddress",
      "SetCurrentThreadCompartmentId",
      "SetCurrentThreadCompartmentScope",
      "SetDnsSettings",
      "SetIfEntry",
      "SetInterfaceDnsSettings",
      "SetIpForwardEntry",
      "SetIpForwardEntry2",
      "SetIpInterfaceEntry",
      "SetIpNetEntry",
      "SetIpNetEntry2",
      "SetIpStatistics",
      "SetIpStatisticsEx",
      "SetIpTTL",
      "SetJobCompartmentId",
      "SetNetworkInformation",
      "SetPerTcp6ConnectionEStats",
      "SetPerTcp6ConnectionStats",
      "SetPerTcpConnectionEStats",
      "SetPerTcpConnectionStats",
      "SetSessionCompartmentId",
      "SetTcpEntry",
      "SetUnicastIpAddressEntry",
      "UnenableRouter",
      "_PfAddFiltersToInterface@24",
      "_PfAddGlobalFilterToInterface@8",
      "_PfBindInterfaceToIPAddress@12",
      "_PfBindInterfaceToIndex@16",
      "_PfCreateInterface@24",
      "_PfDeleteInterface@4",
      "_PfDeleteLog@0",
      "_PfGetInterfaceStatistics@16",
      "_PfMakeLog@4",
      "_PfRebindFilters@8",
      "_PfRemoveFilterHandles@12",
      "_PfRemoveFiltersFromInterface@20",
      "_PfRemoveGlobalFilterFromInterface@8",
      "_PfSetLogBuffer@28",
      "_PfTestPacket@20",
      "_PfUnBindInterface@4",
      "do_echo_rep",
      "do_echo_req",
      "if_indextoname",
      "if_nametoindex",
      "register_icmp"
    ]
  },
  "hashes": {
    "sha2": "fe52d53b0d9966276f312eb15da23a01db52da5b608086d6c4f3c41aa6209ef5",
    "ssdeep": "3072:3vkD2uh1lBgywOYRjteymVk6iLORKmaW/iprP9kkxyEiYY9MB3N:fa2uh19wpQ5QLODviZP9hsEiV9o9"
  },
  "intent": {
    "intentions": 6,
    "uniq_apis_matched": 9,
    "results": [
      {
        "intent": "Can Terminate Processes On The Target System",
        "tag": "Expert Input:IBO.0025",
        "component": "Processes",
        "inputs": 1,
        "matches": 1,
        "apis": [
          "TerminateProcess"
        ]
      },
      {
        "intent": "Queries And Discovers Windows Registry Configuration Settings",
        "tag": "Discovery:T1012 - Query Registry",
        "component": "Registry",
        "inputs": 11,
        "matches": 2,
        "apis": [
          "RegQueryValueExA",
          "RegQueryValueExW"
        ]
      },
      {
        "intent": "Can Create/Manipulate The Windows Registry",
        "tag": "Expert Input:IBO.008 - Create/Manipulate The Windows Registry",
        "component": "Registry",
        "inputs": 33,
        "matches": 2,
        "apis": [
          "RegOpenKeyExA",
          "RegOpenKeyExW"
        ]
      },
      {
        "intent": "Can Access And Read Windows Tokens",
        "tag": "Expert Input:IBO.0020 - Windows Token Access",
        "component": "Privileges",
        "inputs": 4,
        "matches": 1,
        "apis": [
          "OpenProcessToken"
        ]
      },
      {
        "intent": "Manipulates Windows Tokens",
        "tag": "Defense Evasion:T1134 - Access Token Manipulation",
        "component": "Privileges",
        "inputs": 4,
        "matches": 1,
        "apis": [
          "AdjustTokenPrivileges"
        ]
      },
      {
        "intent": "Can Delay Loading of DLLs Until Runtime/Process Execution",
        "tag": "Expert Input:IBO.005 - Load DLL Resources With Delay During Runtime",
        "component": "Memory",
        "inputs": 2,
        "matches": 2,
        "apis": [
          "DelayLoadFailureHook",
          "ResolveDelayLoadedAPI"
        ]
      }
    ]
  }
}