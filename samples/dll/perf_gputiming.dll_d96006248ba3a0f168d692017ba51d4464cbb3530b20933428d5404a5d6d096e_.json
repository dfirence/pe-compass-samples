{
  "name": "perf_gputiming.dll",
  "path": "\\\\?\\C:\\Windows\\SysWOW64\\perf_gputiming.dll",
  "size": 271872,
  "is_64": false,
  "is_lib": true,
  "is_dotnet": true,
  "has_imports": true,
  "has_exports": true,
  "subsystem": 3,
  "subsystem_caption": "The Windows Character (Console UI) Subsystem",
  "libs": [
    "advapi32.dll",
    "d3d11.dll",
    "dxgi.dll",
    "kernel32.dll",
    "msvcrt.dll",
    "ntdll.dll",
    "user32.dll",
    "version.dll"
  ],
  "imports": [
    {
      "lib": "msvcrt.dll",
      "count": 68,
      "functions": [
        "??0bad_cast@@QAE@ABV0@@Z",
        "??0bad_cast@@QAE@PBD@Z",
        "??0exception@@QAE@ABQBD@Z",
        "??0exception@@QAE@ABV0@@Z",
        "??0exception@@QAE@XZ",
        "??1bad_cast@@UAE@XZ",
        "??1exception@@UAE@XZ",
        "??1type_info@@UAE@XZ",
        "?terminate@@YAXXZ",
        "?what@exception@@UBEPBDXZ",
        "_CxxThrowException",
        "_XcptFilter",
        "__CxxFrameHandler3",
        "___lc_codepage_func",
        "___lc_handle_func",
        "__crtLCMapStringA",
        "__dllonexit",
        "__pctype_func",
        "__uncaught_exception",
        "_amsg_exit",
        "_callnewh",
        "_except_handler4_common",
        "_fseeki64",
        "_fsopen",
        "_ftol2_sse",
        "_initterm",
        "_lock",
        "_onexit",
        "_purecall",
        "_unlock",
        "_vscwprintf",
        "_wcsdup",
        "_wcsicmp",
        "_wcslwr_s",
        "_wcsrev",
        "_wsetlocale",
        "abort",
        "atoi",
        "calloc",
        "fclose",
        "fflush",
        "fgetc",
        "fgetpos",
        "fputc",
        "free",
        "fseek",
        "fsetpos",
        "fwrite",
        "isalpha",
        "isdigit",
        "islower",
        "isupper",
        "malloc",
        "mbstowcs_s",
        "memcpy",
        "memcpy_s",
        "memmove",
        "memmove_s",
        "memset",
        "setlocale",
        "setvbuf",
        "swprintf_s",
        "ungetc",
        "vswprintf_s",
        "wcscpy_s",
        "wcsrchr",
        "wcstombs",
        "wprintf"
      ]
    },
    {
      "lib": "user32.dll",
      "count": 22,
      "functions": [
        "AdjustWindowRect",
        "CloseDesktop",
        "CreateWindowExW",
        "DefWindowProcW",
        "DestroyCursor",
        "DestroyWindow",
        "DispatchMessageW",
        "GetClientRect",
        "GetWindowLongW",
        "GetWindowRect",
        "LoadCursorW",
        "MessageBoxW",
        "MoveWindow",
        "OpenInputDesktop",
        "PeekMessageW",
        "PostQuitMessage",
        "RegisterClassExW",
        "SetThreadDesktop",
        "SetWindowLongW",
        "ShowWindow",
        "TranslateMessage",
        "UpdateWindow"
      ]
    },
    {
      "lib": "dxgi.dll",
      "count": 1,
      "functions": [
        "CreateDXGIFactory"
      ]
    },
    {
      "lib": "d3d11.dll",
      "count": 1,
      "functions": [
        "D3D11CreateDevice"
      ]
    },
    {
      "lib": "kernel32.dll",
      "count": 54,
      "functions": [
        "AcquireSRWLockExclusive",
        "CloseHandle",
        "CreateEventW",
        "CreateFileMappingW",
        "CreateFileW",
        "CreateMutexW",
        "CreateSemaphoreW",
        "CreateThread",
        "DecodePointer",
        "DelayLoadFailureHook",
        "DeleteCriticalSection",
        "EncodePointer",
        "EnterCriticalSection",
        "GetCurrentProcess",
        "GetCurrentProcessId",
        "GetCurrentThreadId",
        "GetFullPathNameW",
        "GetLastError",
        "GetProcessHeap",
        "GetSystemTimeAsFileTime",
        "GetTickCount",
        "HeapAlloc",
        "HeapDestroy",
        "HeapFree",
        "HeapReAlloc",
        "HeapSize",
        "InitializeCriticalSection",
        "InitializeCriticalSectionEx",
        "LeaveCriticalSection",
        "MapViewOfFile",
        "OpenFileMappingW",
        "QueryPerformanceCounter",
        "QueryPerformanceFrequency",
        "ReadFile",
        "ReleaseMutex",
        "ReleaseSRWLockExclusive",
        "ReleaseSemaphore",
        "ResetEvent",
        "ResolveDelayLoadedAPI",
        "ResumeThread",
        "SetEvent",
        "SetUnhandledExceptionFilter",
        "Sleep",
        "SleepConditionVariableSRW",
        "TerminateProcess",
        "UnhandledExceptionFilter",
        "UnmapViewOfFile",
        "WaitForMultipleObjects",
        "WaitForMultipleObjectsEx",
        "WaitForSingleObject",
        "WaitForSingleObjectEx",
        "WakeAllConditionVariable",
        "WideCharToMultiByte",
        "WriteFile"
      ]
    },
    {
      "lib": "ntdll.dll",
      "count": 1,
      "functions": [
        "RtlLengthSid"
      ]
    },
    {
      "lib": "version.dll",
      "count": 3,
      "functions": [
        "GetFileVersionInfoSizeW",
        "GetFileVersionInfoW",
        "VerQueryValueW"
      ]
    },
    {
      "lib": "advapi32.dll",
      "count": 4,
      "functions": [
        "EventRegister",
        "EventUnregister",
        "EventWrite",
        "IsValidSid"
      ]
    }
  ],
  "exports": {
    "count": 14,
    "functions": [
      "CleanUpViewerSyncObjects",
      "CreateCallbackSync",
      "CreateETWViewerSynchronizer",
      "CreateViewerSync",
      "DesktopDuplicationProvider",
      "DisplayFeatureSupport",
      "DllCanUnloadNow",
      "DllGetClassObject",
      "DllRegisterServer",
      "DllUnregisterServer",
      "GetFeatureSupport",
      "GetInfosourceVersion",
      "GetMarkerNameTable",
      "UpdateZoomInfo"
    ]
  },
  "hashes": {
    "sha2": "d96006248ba3a0f168d692017ba51d4464cbb3530b20933428d5404a5d6d096e",
    "ssdeep": "6144:kCTcElBxqzumbqzhYbN/Z/d3xCkdkx065Raxz20XV:kCTcMUzutzhYhgkdkSQaxK0XV"
  },
  "intent": {
    "intentions": 1,
    "uniq_apis_matched": 2,
    "results": [
      {
        "intent": "Can Delay Loading of DLLs Until Runtime/Process Execution",
        "tag": "Expert Input:IBO.0005 - Load DLL Resources With Delay During Runtime",
        "component": "---",
        "inputs": 2,
        "matches": 2,
        "apis": [
          "DelayLoadFailureHook",
          "ResolveDelayLoadedAPI"
        ]
      }
    ]
  }
}