{
  "name": "wsnmp32.dll",
  "path": "\\\\?\\C:\\Windows\\SysWOW64\\wsnmp32.dll",
  "size": 52736,
  "is_64": false,
  "is_lib": true,
  "is_dotnet": true,
  "has_imports": true,
  "has_exports": true,
  "subsystem": 3,
  "subsystem_caption": "The Windows Character (Console UI) Subsystem",
  "libs": [
    "api-ms-win-security-base-l1-1-0.dll",
    "iphlpapi.dll",
    "kernel32.dll",
    "msvcrt.dll",
    "ws2_32.dll"
  ],
  "imports": [
    {
      "lib": "api-ms-win-security-base-l1-1-0.dll",
      "count": 7,
      "functions": [
        "AddAccessAllowedAce",
        "AllocateAndInitializeSid",
        "FreeSid",
        "GetLengthSid",
        "InitializeAcl",
        "InitializeSecurityDescriptor",
        "SetSecurityDescriptorDacl"
      ]
    },
    {
      "lib": "msvcrt.dll",
      "count": 19,
      "functions": [
        "_XcptFilter",
        "_amsg_exit",
        "_beginthreadex",
        "_endthreadex",
        "_errno",
        "_except_handler4_common",
        "_initterm",
        "_strupr",
        "_ultoa",
        "atoi",
        "atol",
        "free",
        "malloc",
        "memcmp",
        "memcpy",
        "memset",
        "strchr",
        "strtok",
        "strtoul"
      ]
    },
    {
      "lib": "iphlpapi.dll",
      "count": 2,
      "functions": [
        "GetAdaptersAddresses",
        "GetBestInterfaceEx"
      ]
    },
    {
      "lib": "kernel32.dll",
      "count": 37,
      "functions": [
        "CloseHandle",
        "CreateEventA",
        "CreateFileA",
        "CreateIoCompletionPort",
        "DelayLoadFailureHook",
        "DeleteCriticalSection",
        "DisableThreadLibraryCalls",
        "EnterCriticalSection",
        "GetCurrentProcess",
        "GetCurrentProcessId",
        "GetCurrentThreadId",
        "GetLastError",
        "GetOverlappedResult",
        "GetPrivateProfileStringA",
        "GetQueuedCompletionStatus",
        "GetSystemTimeAsFileTime",
        "GetTickCount",
        "GetVersionExA",
        "GlobalAlloc",
        "GlobalFree",
        "InitializeCriticalSection",
        "LeaveCriticalSection",
        "PostQueuedCompletionStatus",
        "QueryPerformanceCounter",
        "ReadFile",
        "ResetEvent",
        "ResolveDelayLoadedAPI",
        "SetEvent",
        "SetNamedPipeHandleState",
        "SetUnhandledExceptionFilter",
        "Sleep",
        "TerminateProcess",
        "UnhandledExceptionFilter",
        "WaitForMultipleObjectsEx",
        "WaitForSingleObject",
        "WaitNamedPipeA",
        "lstrlenA"
      ]
    },
    {
      "lib": "ws2_32.dll",
      "count": 26,
      "functions": [
        "ORDINAL 10",
        "ORDINAL 111",
        "ORDINAL 112",
        "ORDINAL 115",
        "ORDINAL 116",
        "ORDINAL 15",
        "ORDINAL 17",
        "ORDINAL 18",
        "ORDINAL 2",
        "ORDINAL 20",
        "ORDINAL 21",
        "ORDINAL 23",
        "ORDINAL 3",
        "ORDINAL 9",
        "WSAAddressToStringA",
        "WSACloseEvent",
        "WSACreateEvent",
        "WSAEnumNetworkEvents",
        "WSAEventSelect",
        "WSAIoctl",
        "WSASendMsg",
        "WSAStringToAddressA",
        "WSAWaitForMultipleEvents",
        "freeaddrinfo",
        "getaddrinfo",
        "getnameinfo"
      ]
    }
  ],
  "exports": {
    "count": 51,
    "functions": [
      "SnmpCancelMsg",
      "SnmpCleanup",
      "SnmpCleanupEx",
      "SnmpClose",
      "SnmpContextToStr",
      "SnmpCountVbl",
      "SnmpCreatePdu",
      "SnmpCreateSession",
      "SnmpCreateVbl",
      "SnmpDecodeMsg",
      "SnmpDeleteVb",
      "SnmpDuplicatePdu",
      "SnmpDuplicateVbl",
      "SnmpEncodeMsg",
      "SnmpEntityToStr",
      "SnmpFreeContext",
      "SnmpFreeDescriptor",
      "SnmpFreeEntity",
      "SnmpFreePdu",
      "SnmpFreeVbl",
      "SnmpGetLastError",
      "SnmpGetPduData",
      "SnmpGetRetransmitMode",
      "SnmpGetRetry",
      "SnmpGetTimeout",
      "SnmpGetTranslateMode",
      "SnmpGetVb",
      "SnmpGetVendorInfo",
      "SnmpListen",
      "SnmpListenEx",
      "SnmpOidCompare",
      "SnmpOidCopy",
      "SnmpOidToStr",
      "SnmpOpen",
      "SnmpRecvMsg",
      "SnmpRegister",
      "SnmpSendMsg",
      "SnmpSetPduData",
      "SnmpSetPort",
      "SnmpSetRetransmitMode",
      "SnmpSetRetry",
      "SnmpSetTimeout",
      "SnmpSetTranslateMode",
      "SnmpSetVb",
      "SnmpStartup",
      "SnmpStartupEx",
      "SnmpStrToContext",
      "SnmpStrToEntity",
      "SnmpStrToOid",
      "_SnmpConveyAgentAddress@4",
      "_SnmpSetAgentAddress@4"
    ]
  },
  "hashes": {
    "sha2": "9be85dc241f99304d12b2a14279bf19e97aa44976c757717f36e22aaa46fe780",
    "ssdeep": "768:3N25J0rKnvikd+txfJcLB6DAushsbRzIvrUxmg8zSevzpDDUwIY:MCQXeoBzut2USmevzpHUwl"
  },
  "intent": {
    "intentions": 6,
    "uniq_apis_matched": 13,
    "results": [
      {
        "intent": "Has Ability To Conduct DNS Queries",
        "tag": "Expert Input:IBO.00014 - Network Layer-7 DNS Usage",
        "component": "Networking",
        "inputs": 31,
        "matches": 2,
        "apis": [
          "getaddrinfo",
          "getnameinfo"
        ]
      },
      {
        "intent": "Has Ability To Delay Loading of DLLs Until Runtime/Process Execution",
        "tag": "Expert Input:IBO.0005 - Load DLL Resources With Delay During Runtime",
        "component": "Memory",
        "inputs": 2,
        "matches": 2,
        "apis": [
          "DelayLoadFailureHook",
          "ResolveDelayLoadedAPI"
        ]
      },
      {
        "intent": "Has Ability To Work With The TCP Network Protocol",
        "tag": "Expert Input:IBO.00012 - Network TCP Sockets",
        "component": "Networking",
        "inputs": 15,
        "matches": 3,
        "apis": [
          "WSAAddressToStringA",
          "WSAStringToAddressA",
          "freeaddrinfo"
        ]
      },
      {
        "intent": "Has Ability To Manipulate Access Control Mechanisms",
        "tag": "Expert Input:IBO.00021 - Windows Access Control Lists",
        "component": "Privileges",
        "inputs": 15,
        "matches": 3,
        "apis": [
          "AddAccessAllowedAce",
          "InitializeAcl",
          "SetSecurityDescriptorDacl"
        ]
      },
      {
        "intent": "Has Ability To Communicate via NamedPipes",
        "tag": "Expert Input:IBO.0004 - Implement Named Pipes",
        "component": "Processes",
        "inputs": 13,
        "matches": 1,
        "apis": [
          "SetNamedPipeHandleState"
        ]
      },
      {
        "intent": "Discovers Network Settings On The Target System",
        "tag": "Discovery:T1016 - System Network Configuration Discovery",
        "component": "Networking",
        "inputs": 41,
        "matches": 2,
        "apis": [
          "GetAdaptersAddresses",
          "GetBestInterfaceEx"
        ]
      }
    ]
  }
}