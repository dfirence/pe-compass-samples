{
  "name": "ws2_32.dll",
  "path": "\\\\?\\C:\\Windows\\SysWOW64\\ws2_32.dll",
  "size": 397728,
  "is_64": false,
  "is_lib": true,
  "is_dotnet": true,
  "has_imports": true,
  "has_exports": true,
  "subsystem": 3,
  "subsystem_caption": "The Windows Character (Console UI) Subsystem",
  "libs": [
    "api-ms-win-core-apiquery-l1-1-0.dll",
    "api-ms-win-core-crt-l1-1-0.dll",
    "api-ms-win-core-crt-l2-1-0.dll",
    "api-ms-win-core-debug-l1-1-0.dll",
    "api-ms-win-core-delayload-l1-1-0.dll",
    "api-ms-win-core-delayload-l1-1-1.dll",
    "api-ms-win-core-errorhandling-l1-1-0.dll",
    "api-ms-win-core-file-l1-1-0.dll",
    "api-ms-win-core-handle-l1-1-0.dll",
    "api-ms-win-core-heap-l1-1-0.dll",
    "api-ms-win-core-heap-l2-1-0.dll",
    "api-ms-win-core-io-l1-1-0.dll",
    "api-ms-win-core-kernel32-legacy-l1-1-0.dll",
    "api-ms-win-core-libraryloader-l1-2-0.dll",
    "api-ms-win-core-processenvironment-l1-1-0.dll",
    "api-ms-win-core-processthreads-l1-1-0.dll",
    "api-ms-win-core-processthreads-l1-1-1.dll",
    "api-ms-win-core-profile-l1-1-0.dll",
    "api-ms-win-core-registry-l1-1-0.dll",
    "api-ms-win-core-string-l1-1-0.dll",
    "api-ms-win-core-string-obsolete-l1-1-0.dll",
    "api-ms-win-core-synch-l1-1-0.dll",
    "api-ms-win-core-synch-l1-2-0.dll",
    "api-ms-win-core-sysinfo-l1-1-0.dll",
    "api-ms-win-core-threadpool-l1-2-0.dll",
    "api-ms-win-core-util-l1-1-0.dll",
    "api-ms-win-core-wow64-l1-1-0.dll",
    "api-ms-win-eventing-provider-l1-1-0.dll",
    "api-ms-win-security-base-l1-1-0.dll",
    "ntdll.dll",
    "rpcrt4.dll"
  ],
  "imports": [
    {
      "lib": "api-ms-win-core-errorhandling-l1-1-0.dll",
      "count": 4,
      "functions": [
        "GetLastError",
        "SetLastError",
        "SetUnhandledExceptionFilter",
        "UnhandledExceptionFilter"
      ]
    },
    {
      "lib": "api-ms-win-security-base-l1-1-0.dll",
      "count": 18,
      "functions": [
        "AddAccessAllowedAce",
        "AddAccessDeniedAce",
        "AllocateAndInitializeSid",
        "CheckTokenMembership",
        "CopySid",
        "EqualSid",
        "FreeSid",
        "GetAce",
        "GetAclInformation",
        "GetLengthSid",
        "GetSecurityDescriptorDacl",
        "GetTokenInformation",
        "ImpersonateLoggedOnUser",
        "InitializeAcl",
        "InitializeSecurityDescriptor",
        "IsValidSid",
        "RevertToSelf",
        "SetSecurityDescriptorDacl"
      ]
    },
    {
      "lib": "api-ms-win-core-registry-l1-1-0.dll",
      "count": 14,
      "functions": [
        "RegCloseKey",
        "RegCreateKeyExA",
        "RegCreateKeyExW",
        "RegDeleteKeyExA",
        "RegDeleteTreeA",
        "RegEnumKeyExA",
        "RegGetKeySecurity",
        "RegNotifyChangeKeyValue",
        "RegOpenKeyExA",
        "RegOpenKeyExW",
        "RegQueryValueExA",
        "RegQueryValueExW",
        "RegSetValueExA",
        "RegSetValueExW"
      ]
    },
    {
      "lib": "api-ms-win-core-libraryloader-l1-2-0.dll",
      "count": 11,
      "functions": [
        "FreeLibrary",
        "FreeLibraryAndExitThread",
        "GetModuleFileNameA",
        "GetModuleFileNameW",
        "GetModuleHandleA",
        "GetModuleHandleExA",
        "GetProcAddress",
        "LoadLibraryExA",
        "LoadLibraryExW",
        "LoadStringA",
        "LoadStringW"
      ]
    },
    {
      "lib": "api-ms-win-core-io-l1-1-0.dll",
      "count": 1,
      "functions": [
        "DeviceIoControl"
      ]
    },
    {
      "lib": "api-ms-win-core-delayload-l1-1-0.dll",
      "count": 1,
      "functions": [
        "DelayLoadFailureHook"
      ]
    },
    {
      "lib": "api-ms-win-eventing-provider-l1-1-0.dll",
      "count": 4,
      "functions": [
        "EventRegister",
        "EventSetInformation",
        "EventUnregister",
        "EventWriteTransfer"
      ]
    },
    {
      "lib": "rpcrt4.dll",
      "count": 19,
      "functions": [
        "I_RpcBindingInqTransportType",
        "NdrAsyncServerCall",
        "NdrServerCall2",
        "RpcAsyncCompleteCall",
        "RpcBindingInqObject",
        "RpcBindingVectorFree",
        "RpcEpRegisterW",
        "RpcEpUnregister",
        "RpcImpersonateClient",
        "RpcRevertToSelf",
        "RpcRevertToSelfEx",
        "RpcServerInqBindings",
        "RpcServerInqCallAttributesW",
        "RpcServerListen",
        "RpcServerRegisterIfEx",
        "RpcServerUnregisterIf",
        "RpcServerUnregisterIfEx",
        "RpcServerUseProtseqW",
        "UuidCreate"
      ]
    },
    {
      "lib": "api-ms-win-core-delayload-l1-1-1.dll",
      "count": 1,
      "functions": [
        "ResolveDelayLoadedAPI"
      ]
    },
    {
      "lib": "api-ms-win-core-sysinfo-l1-1-0.dll",
      "count": 6,
      "functions": [
        "GetComputerNameExA",
        "GetComputerNameExW",
        "GetSystemDirectoryA",
        "GetSystemInfo",
        "GetSystemTimeAsFileTime",
        "GetTickCount"
      ]
    },
    {
      "lib": "api-ms-win-core-crt-l1-1-0.dll",
      "count": 23,
      "functions": [
        "__isascii",
        "_except_handler4_common",
        "_stricmp",
        "_vsnprintf_s",
        "_vsnwprintf_s",
        "_wcsicmp",
        "_wcsnicmp",
        "atoi",
        "isspace",
        "memcmp",
        "memcpy",
        "memcpy_s",
        "memset",
        "sprintf_s",
        "strchr",
        "strcpy_s",
        "strrchr",
        "strtoul",
        "towupper",
        "wcschr",
        "wcscpy_s",
        "wcsncmp",
        "wcsstr"
      ]
    },
    {
      "lib": "api-ms-win-core-debug-l1-1-0.dll",
      "count": 1,
      "functions": [
        "OutputDebugStringA"
      ]
    },
    {
      "lib": "api-ms-win-core-crt-l2-1-0.dll",
      "count": 6,
      "functions": [
        "__dllonexit3",
        "_initterm",
        "_initterm_e",
        "_onexit",
        "exit",
        "hgets"
      ]
    },
    {
      "lib": "ntdll.dll",
      "count": 42,
      "functions": [
        "EtwEventEnabled",
        "EtwEventRegister",
        "EtwEventUnregister",
        "EtwEventWrite",
        "EtwGetTraceEnableFlags",
        "EtwGetTraceEnableLevel",
        "EtwGetTraceLoggerHandle",
        "EtwRegisterTraceGuidsW",
        "EtwTraceMessage",
        "EtwTraceMessageVa",
        "EtwUnregisterTraceGuids",
        "NtClose",
        "NtCreateFile",
        "NtCreateNamedPipeFile",
        "NtDelayExecution",
        "NtDeviceIoControlFile",
        "NtFsControlFile",
        "NtLoadDriver",
        "NtOpenFile",
        "NtQueryDirectoryFile",
        "NtWaitForSingleObject",
        "RtlAdjustPrivilege",
        "RtlAllocateHeap",
        "RtlCompareMemory",
        "RtlFreeHeap",
        "RtlGetNtProductType",
        "RtlImpersonateSelf",
        "RtlInitUnicodeString",
        "RtlInitUnicodeStringEx",
        "RtlIpv4AddressToStringExA",
        "RtlIpv4AddressToStringExW",
        "RtlIpv4StringToAddressA",
        "RtlIpv4StringToAddressW",
        "RtlIpv6AddressToStringExA",
        "RtlIpv6AddressToStringExW",
        "RtlIpv6StringToAddressA",
        "RtlIpv6StringToAddressExW",
        "RtlIpv6StringToAddressW",
        "RtlNtStatusToDosError",
        "RtlUnhandledExceptionFilter",
        "RtlUnicodeStringToInteger",
        "WinSqmIsOptedIn"
      ]
    },
    {
      "lib": "api-ms-win-core-profile-l1-1-0.dll",
      "count": 1,
      "functions": [
        "QueryPerformanceCounter"
      ]
    },
    {
      "lib": "api-ms-win-core-synch-l1-2-0.dll",
      "count": 5,
      "functions": [
        "InitOnceExecuteOnce",
        "InitializeConditionVariable",
        "Sleep",
        "SleepConditionVariableCS",
        "WakeAllConditionVariable"
      ]
    },
    {
      "lib": "api-ms-win-core-wow64-l1-1-0.dll",
      "count": 1,
      "functions": [
        "IsWow64Process"
      ]
    },
    {
      "lib": "api-ms-win-core-synch-l1-1-0.dll",
      "count": 14,
      "functions": [
        "CreateEventA",
        "CreateEventW",
        "CreateMutexA",
        "DeleteCriticalSection",
        "EnterCriticalSection",
        "InitializeCriticalSection",
        "InitializeCriticalSectionAndSpinCount",
        "LeaveCriticalSection",
        "ReleaseMutex",
        "ResetEvent",
        "SetEvent",
        "TryEnterCriticalSection",
        "WaitForMultipleObjectsEx",
        "WaitForSingleObject"
      ]
    },
    {
      "lib": "api-ms-win-core-util-l1-1-0.dll",
      "count": 2,
      "functions": [
        "DecodePointer",
        "EncodePointer"
      ]
    },
    {
      "lib": "api-ms-win-core-apiquery-l1-1-0.dll",
      "count": 1,
      "functions": [
        "ApiSetQueryApiSetPresence"
      ]
    },
    {
      "lib": "api-ms-win-core-handle-l1-1-0.dll",
      "count": 3,
      "functions": [
        "CloseHandle",
        "DuplicateHandle",
        "GetHandleInformation"
      ]
    },
    {
      "lib": "api-ms-win-core-processenvironment-l1-1-0.dll",
      "count": 5,
      "functions": [
        "ExpandEnvironmentStringsA",
        "ExpandEnvironmentStringsW",
        "GetCommandLineW",
        "GetEnvironmentVariableA",
        "GetEnvironmentVariableW"
      ]
    },
    {
      "lib": "api-ms-win-core-file-l1-1-0.dll",
      "count": 1,
      "functions": [
        "CreateFileA"
      ]
    },
    {
      "lib": "api-ms-win-core-string-obsolete-l1-1-0.dll",
      "count": 2,
      "functions": [
        "lstrcmpA",
        "lstrlenA"
      ]
    },
    {
      "lib": "api-ms-win-core-threadpool-l1-2-0.dll",
      "count": 5,
      "functions": [
        "CloseThreadpoolTimer",
        "CreateThreadpoolTimer",
        "SetThreadpoolTimer",
        "TrySubmitThreadpoolCallback",
        "WaitForThreadpoolTimerCallbacks"
      ]
    },
    {
      "lib": "api-ms-win-core-processthreads-l1-1-1.dll",
      "count": 1,
      "functions": [
        "GetProcessMitigationPolicy"
      ]
    },
    {
      "lib": "api-ms-win-core-heap-l1-1-0.dll",
      "count": 5,
      "functions": [
        "GetProcessHeap",
        "HeapAlloc",
        "HeapDestroy",
        "HeapFree",
        "HeapReAlloc"
      ]
    },
    {
      "lib": "api-ms-win-core-heap-l2-1-0.dll",
      "count": 4,
      "functions": [
        "GlobalAlloc",
        "GlobalFree",
        "LocalAlloc",
        "LocalFree"
      ]
    },
    {
      "lib": "api-ms-win-core-string-l1-1-0.dll",
      "count": 2,
      "functions": [
        "MultiByteToWideChar",
        "WideCharToMultiByte"
      ]
    },
    {
      "lib": "api-ms-win-core-kernel32-legacy-l1-1-0.dll",
      "count": 1,
      "functions": [
        "PulseEvent"
      ]
    },
    {
      "lib": "api-ms-win-core-processthreads-l1-1-0.dll",
      "count": 17,
      "functions": [
        "CreateThread",
        "GetCurrentProcess",
        "GetCurrentProcessId",
        "GetCurrentThread",
        "GetCurrentThreadId",
        "OpenProcessToken",
        "OpenThreadToken",
        "QueueUserAPC",
        "ResumeThread",
        "SetThreadToken",
        "SwitchToThread",
        "TerminateProcess",
        "TerminateThread",
        "TlsAlloc",
        "TlsFree",
        "TlsGetValue",
        "TlsSetValue"
      ]
    }
  ],
  "exports": {
    "count": 180,
    "functions": [
      "FreeAddrInfoEx",
      "FreeAddrInfoExW",
      "FreeAddrInfoW",
      "GetAddrInfoExA",
      "GetAddrInfoExCancel",
      "GetAddrInfoExOverlappedResult",
      "GetAddrInfoExW",
      "GetAddrInfoW",
      "GetHostNameW",
      "GetNameInfoW",
      "InetNtopW",
      "InetPtonW",
      "SetAddrInfoExA",
      "SetAddrInfoExW",
      "WEP",
      "WPUCompleteOverlappedRequest",
      "WPUGetProviderPathEx",
      "WSAAccept",
      "WSAAddressToStringA",
      "WSAAddressToStringW",
      "WSAAdvertiseProvider",
      "WSAAsyncGetHostByAddr",
      "WSAAsyncGetHostByName",
      "WSAAsyncGetProtoByName",
      "WSAAsyncGetProtoByNumber",
      "WSAAsyncGetServByName",
      "WSAAsyncGetServByPort",
      "WSAAsyncSelect",
      "WSACancelAsyncRequest",
      "WSACancelBlockingCall",
      "WSACleanup",
      "WSACloseEvent",
      "WSAConnect",
      "WSAConnectByList",
      "WSAConnectByNameA",
      "WSAConnectByNameW",
      "WSACreateEvent",
      "WSADuplicateSocketA",
      "WSADuplicateSocketW",
      "WSAEnumNameSpaceProvidersA",
      "WSAEnumNameSpaceProvidersExA",
      "WSAEnumNameSpaceProvidersExW",
      "WSAEnumNameSpaceProvidersW",
      "WSAEnumNetworkEvents",
      "WSAEnumProtocolsA",
      "WSAEnumProtocolsW",
      "WSAEventSelect",
      "WSAGetLastError",
      "WSAGetOverlappedResult",
      "WSAGetQOSByName",
      "WSAGetServiceClassInfoA",
      "WSAGetServiceClassInfoW",
      "WSAGetServiceClassNameByClassIdA",
      "WSAGetServiceClassNameByClassIdW",
      "WSAHtonl",
      "WSAHtons",
      "WSAInstallServiceClassA",
      "WSAInstallServiceClassW",
      "WSAIoctl",
      "WSAIsBlocking",
      "WSAJoinLeaf",
      "WSALookupServiceBeginA",
      "WSALookupServiceBeginW",
      "WSALookupServiceEnd",
      "WSALookupServiceNextA",
      "WSALookupServiceNextW",
      "WSANSPIoctl",
      "WSANtohl",
      "WSANtohs",
      "WSAPoll",
      "WSAProviderCompleteAsyncCall",
      "WSAProviderConfigChange",
      "WSARecv",
      "WSARecvDisconnect",
      "WSARecvFrom",
      "WSARemoveServiceClass",
      "WSAResetEvent",
      "WSASend",
      "WSASendDisconnect",
      "WSASendMsg",
      "WSASendTo",
      "WSASetBlockingHook",
      "WSASetEvent",
      "WSASetLastError",
      "WSASetServiceA",
      "WSASetServiceW",
      "WSASocketA",
      "WSASocketW",
      "WSAStartup",
      "WSAStringToAddressA",
      "WSAStringToAddressW",
      "WSAUnadvertiseProvider",
      "WSAUnhookBlockingHook",
      "WSAWaitForMultipleEvents",
      "WSApSetPostRoutine",
      "WSCDeinstallProvider",
      "WSCDeinstallProviderEx",
      "WSCEnableNSProvider",
      "WSCEnumProtocols",
      "WSCEnumProtocolsEx",
      "WSCGetApplicationCategory",
      "WSCGetApplicationCategoryEx",
      "WSCGetProviderInfo",
      "WSCGetProviderPath",
      "WSCInstallNameSpace",
      "WSCInstallNameSpaceEx",
      "WSCInstallNameSpaceEx2",
      "WSCInstallProvider",
      "WSCInstallProviderAndChains",
      "WSCInstallProviderEx",
      "WSCSetApplicationCategory",
      "WSCSetApplicationCategoryEx",
      "WSCSetProviderInfo",
      "WSCUnInstallNameSpace",
      "WSCUnInstallNameSpaceEx2",
      "WSCUpdateProvider",
      "WSCUpdateProviderEx",
      "WSCWriteNameSpaceOrder",
      "WSCWriteProviderOrder",
      "WSCWriteProviderOrderEx",
      "WahCloseApcHelper",
      "WahCloseHandleHelper",
      "WahCloseNotificationHandleHelper",
      "WahCloseSocketHandle",
      "WahCloseThread",
      "WahCompleteRequest",
      "WahCreateHandleContextTable",
      "WahCreateNotificationHandle",
      "WahCreateSocketHandle",
      "WahDestroyHandleContextTable",
      "WahDisableNonIFSHandleSupport",
      "WahEnableNonIFSHandleSupport",
      "WahEnumerateHandleContexts",
      "WahInsertHandleContext",
      "WahNotifyAllProcesses",
      "WahOpenApcHelper",
      "WahOpenCurrentThread",
      "WahOpenHandleHelper",
      "WahOpenNotificationHandleHelper",
      "WahQueueUserApc",
      "WahReferenceContextByHandle",
      "WahRemoveHandleContext",
      "WahWaitForNotification",
      "WahWriteLSPEvent",
      "__WSAFDIsSet",
      "accept",
      "bind",
      "closesocket",
      "connect",
      "freeaddrinfo",
      "getaddrinfo",
      "gethostbyaddr",
      "gethostbyname",
      "gethostname",
      "getnameinfo",
      "getpeername",
      "getprotobyname",
      "getprotobynumber",
      "getservbyname",
      "getservbyport",
      "getsockname",
      "getsockopt",
      "htonl",
      "htons",
      "inet_addr",
      "inet_ntoa",
      "inet_ntop",
      "inet_pton",
      "ioctlsocket",
      "listen",
      "ntohl",
      "ntohs",
      "recv",
      "recvfrom",
      "select",
      "send",
      "sendto",
      "setsockopt",
      "shutdown",
      "socket"
    ]
  },
  "hashes": {
    "sha2": "93db7c9699594caa19490280842fbebec3877278c92128b92e63d75fcd01397a",
    "ssdeep": "12288:PDCOy/psISIHbl9f/mnmO/5Se71RpNJmq3CrP:RyRznmnp5SedNJBCL"
  },
  "intent": {
    "intentions": 9,
    "uniq_apis_matched": 22,
    "results": [
      {
        "intent": "Steals Tokens To Impersonate Windows Identities",
        "tag": "Privilege Escalation:T1134.001 - Token Impersonation/Theft",
        "component": "Privileges",
        "inputs": 5,
        "matches": 1,
        "apis": [
          "ImpersonateLoggedOnUser"
        ]
      },
      {
        "intent": "Can Delay Loading of DLLs Until Runtime/Process Execution",
        "tag": "Expert Input:IBO.0005 - Load DLL Resources With Delay During Runtime",
        "component": "---",
        "inputs": 2,
        "matches": 2,
        "apis": [
          "DelayLoadFailureHook",
          "ResolveDelayLoadedAPI"
        ]
      },
      {
        "intent": "Queries And Discovers Windows Registry Configuration Settings",
        "tag": "Discovery:T1012 - Query Registry",
        "component": "Registry",
        "inputs": 11,
        "matches": 2,
        "apis": [
          "RegQueryValueExA",
          "RegQueryValueExW"
        ]
      },
      {
        "intent": "Can Create/Manipulate The Windows Registry",
        "tag": "Expert Input:IBO.0008 - Create/Manipulate The Windows Registry",
        "component": "Registry",
        "inputs": 33,
        "matches": 7,
        "apis": [
          "RegCreateKeyExA",
          "RegCreateKeyExW",
          "RegDeleteKeyExA",
          "RegOpenKeyExA",
          "RegOpenKeyExW",
          "RegSetValueExA",
          "RegSetValueExW"
        ]
      },
      {
        "intent": "Queries and Discovers General Attributes From The Target System",
        "tag": "Discovery:T1082 - System Information Discovery",
        "component": "---",
        "inputs": 3,
        "matches": 1,
        "apis": [
          "RtlGetNtProductType"
        ]
      },
      {
        "intent": "Creates Token To Impersonate",
        "tag": "Privilege Escalation:T1134.003 - Make and Impersonate Token",
        "component": "Privileges",
        "inputs": 2,
        "matches": 1,
        "apis": [
          "SetThreadToken"
        ]
      },
      {
        "intent": "Can Enumerate The Windows Registry",
        "tag": "Expert Input:IBO.0009 - Enumerate The Windows Registry",
        "component": "Registry",
        "inputs": 6,
        "matches": 1,
        "apis": [
          "RegEnumKeyExA"
        ]
      },
      {
        "intent": "Can Access And Read Windows Tokens",
        "tag": "Expert Input:IBO.00020 - Windows Token Access",
        "component": "Privileges",
        "inputs": 4,
        "matches": 3,
        "apis": [
          "CheckTokenMembership",
          "OpenProcessToken",
          "OpenThreadToken"
        ]
      },
      {
        "intent": "Can Manipulate Access Control Mechanisms",
        "tag": "Expert Input:IBO.00021 - Windows Access Control Lists",
        "component": "Privileges",
        "inputs": 15,
        "matches": 4,
        "apis": [
          "AddAccessAllowedAce",
          "AddAccessDeniedAce",
          "InitializeAcl",
          "SetSecurityDescriptorDacl"
        ]
      }
    ]
  }
}