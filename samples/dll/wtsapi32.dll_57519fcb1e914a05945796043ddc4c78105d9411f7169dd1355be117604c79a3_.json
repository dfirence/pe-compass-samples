{
  "name": "wtsapi32.dll",
  "path": "\\\\?\\C:\\Windows\\SysWOW64\\wtsapi32.dll",
  "size": 52664,
  "is_64": false,
  "is_lib": true,
  "is_dotnet": true,
  "has_imports": true,
  "has_exports": true,
  "subsystem": 3,
  "subsystem_caption": "The Windows Character (Console UI) Subsystem",
  "libs": [
    "api-ms-win-core-delayload-l1-1-0.dll",
    "api-ms-win-core-delayload-l1-1-1.dll",
    "api-ms-win-core-errorhandling-l1-1-0.dll",
    "api-ms-win-core-file-l1-1-0.dll",
    "api-ms-win-core-handle-l1-1-0.dll",
    "api-ms-win-core-heap-l2-1-0.dll",
    "api-ms-win-core-io-l1-1-0.dll",
    "api-ms-win-core-io-l1-1-1.dll",
    "api-ms-win-core-processthreads-l1-1-0.dll",
    "api-ms-win-core-profile-l1-1-0.dll",
    "api-ms-win-core-registry-l1-1-0.dll",
    "api-ms-win-core-string-l1-1-0.dll",
    "api-ms-win-core-synch-l1-1-0.dll",
    "api-ms-win-core-synch-l1-2-0.dll",
    "api-ms-win-core-sysinfo-l1-1-0.dll",
    "msvcrt.dll",
    "ntdll.dll"
  ],
  "imports": [
    {
      "lib": "api-ms-win-core-io-l1-1-1.dll",
      "count": 1,
      "functions": [
        "CancelIo"
      ]
    },
    {
      "lib": "api-ms-win-core-string-l1-1-0.dll",
      "count": 1,
      "functions": [
        "WideCharToMultiByte"
      ]
    },
    {
      "lib": "ntdll.dll",
      "count": 7,
      "functions": [
        "NtDeviceIoControlFile",
        "NtWaitForSingleObject",
        "RtlAdjustPrivilege",
        "RtlMultiByteToUnicodeN",
        "RtlNtStatusToDosError",
        "RtlUnicodeToMultiByteN",
        "RtlUnicodeToMultiByteSize"
      ]
    },
    {
      "lib": "api-ms-win-core-errorhandling-l1-1-0.dll",
      "count": 4,
      "functions": [
        "GetLastError",
        "SetLastError",
        "SetUnhandledExceptionFilter",
        "UnhandledExceptionFilter"
      ]
    },
    {
      "lib": "api-ms-win-core-synch-l1-2-0.dll",
      "count": 1,
      "functions": [
        "Sleep"
      ]
    },
    {
      "lib": "api-ms-win-core-registry-l1-1-0.dll",
      "count": 4,
      "functions": [
        "RegCloseKey",
        "RegOpenKeyExW",
        "RegQueryValueExW",
        "RegSetValueExW"
      ]
    },
    {
      "lib": "api-ms-win-core-handle-l1-1-0.dll",
      "count": 1,
      "functions": [
        "CloseHandle"
      ]
    },
    {
      "lib": "api-ms-win-core-processthreads-l1-1-0.dll",
      "count": 7,
      "functions": [
        "GetCurrentProcess",
        "GetCurrentProcessId",
        "GetCurrentThread",
        "GetCurrentThreadId",
        "OpenProcessToken",
        "OpenThreadToken",
        "TerminateProcess"
      ]
    },
    {
      "lib": "api-ms-win-core-file-l1-1-0.dll",
      "count": 2,
      "functions": [
        "ReadFile",
        "WriteFile"
      ]
    },
    {
      "lib": "api-ms-win-core-delayload-l1-1-0.dll",
      "count": 1,
      "functions": [
        "DelayLoadFailureHook"
      ]
    },
    {
      "lib": "msvcrt.dll",
      "count": 11,
      "functions": [
        "_XcptFilter",
        "_amsg_exit",
        "_except_handler4_common",
        "_initterm",
        "_wcsupr",
        "free",
        "malloc",
        "memcpy",
        "memcpy_s",
        "memset",
        "swscanf"
      ]
    },
    {
      "lib": "api-ms-win-core-synch-l1-1-0.dll",
      "count": 1,
      "functions": [
        "WaitForSingleObject"
      ]
    },
    {
      "lib": "api-ms-win-core-delayload-l1-1-1.dll",
      "count": 1,
      "functions": [
        "ResolveDelayLoadedAPI"
      ]
    },
    {
      "lib": "api-ms-win-core-io-l1-1-0.dll",
      "count": 1,
      "functions": [
        "GetOverlappedResult"
      ]
    },
    {
      "lib": "api-ms-win-core-sysinfo-l1-1-0.dll",
      "count": 2,
      "functions": [
        "GetSystemTimeAsFileTime",
        "GetTickCount"
      ]
    },
    {
      "lib": "api-ms-win-core-profile-l1-1-0.dll",
      "count": 1,
      "functions": [
        "QueryPerformanceCounter"
      ]
    },
    {
      "lib": "api-ms-win-core-heap-l2-1-0.dll",
      "count": 3,
      "functions": [
        "LocalAlloc",
        "LocalFree",
        "LocalReAlloc"
      ]
    }
  ],
  "exports": {
    "count": 69,
    "functions": [
      "IsInteractiveUserSession",
      "QueryActiveSession",
      "QueryUserToken",
      "RegisterUsertokenForNoWinlogon",
      "WTSCloseServer",
      "WTSConnectSessionA",
      "WTSConnectSessionW",
      "WTSCreateListenerA",
      "WTSCreateListenerW",
      "WTSDisconnectSession",
      "WTSEnableChildSessions",
      "WTSEnumerateListenersA",
      "WTSEnumerateListenersW",
      "WTSEnumerateProcessesA",
      "WTSEnumerateProcessesExA",
      "WTSEnumerateProcessesExW",
      "WTSEnumerateProcessesW",
      "WTSEnumerateServersA",
      "WTSEnumerateServersW",
      "WTSEnumerateSessionsA",
      "WTSEnumerateSessionsExA",
      "WTSEnumerateSessionsExW",
      "WTSEnumerateSessionsW",
      "WTSFreeMemory",
      "WTSFreeMemoryExA",
      "WTSFreeMemoryExW",
      "WTSGetChildSessionId",
      "WTSGetListenerSecurityA",
      "WTSGetListenerSecurityW",
      "WTSIsChildSessionsEnabled",
      "WTSLogoffSession",
      "WTSOpenServerA",
      "WTSOpenServerExA",
      "WTSOpenServerExW",
      "WTSOpenServerW",
      "WTSQueryListenerConfigA",
      "WTSQueryListenerConfigW",
      "WTSQuerySessionInformationA",
      "WTSQuerySessionInformationW",
      "WTSQueryUserConfigA",
      "WTSQueryUserConfigW",
      "WTSQueryUserToken",
      "WTSRegisterSessionNotification",
      "WTSRegisterSessionNotificationEx",
      "WTSSendMessageA",
      "WTSSendMessageW",
      "WTSSetListenerSecurityA",
      "WTSSetListenerSecurityW",
      "WTSSetRenderHint",
      "WTSSetSessionInformationA",
      "WTSSetSessionInformationW",
      "WTSSetUserConfigA",
      "WTSSetUserConfigW",
      "WTSShutdownSystem",
      "WTSStartRemoteControlSessionA",
      "WTSStartRemoteControlSessionW",
      "WTSStopRemoteControlSession",
      "WTSTerminateProcess",
      "WTSUnRegisterSessionNotification",
      "WTSUnRegisterSessionNotificationEx",
      "WTSVirtualChannelClose",
      "WTSVirtualChannelOpen",
      "WTSVirtualChannelOpenEx",
      "WTSVirtualChannelPurgeInput",
      "WTSVirtualChannelPurgeOutput",
      "WTSVirtualChannelQuery",
      "WTSVirtualChannelRead",
      "WTSVirtualChannelWrite",
      "WTSWaitSystemEvent"
    ]
  },
  "hashes": {
    "sha2": "57519fcb1e914a05945796043ddc4c78105d9411f7169dd1355be117604c79a3",
    "ssdeep": "1536:xJPK/mFR/+hdaWMDxYVxGlXvDq9okz3PN6:zPK+FsdUDAxGFLq9o0g"
  },
  "intent": {
    "intentions": 5,
    "uniq_apis_matched": 8,
    "results": [
      {
        "intent": "Can Create/Manipulate The Windows Registry",
        "tag": "Expert Input:IBO.0008 - Create/Manipulate The Windows Registry",
        "component": "Registry",
        "inputs": 33,
        "matches": 2,
        "apis": [
          "RegOpenKeyExW",
          "RegSetValueExW"
        ]
      },
      {
        "intent": "Queries And Discovers Windows Registry Configuration Settings",
        "tag": "Discovery:T1012 - Query Registry",
        "component": "Registry",
        "inputs": 11,
        "matches": 1,
        "apis": [
          "RegQueryValueExW"
        ]
      },
      {
        "intent": "Can Terminate Processes On The Target System",
        "tag": "Expert Input:IBO.0025",
        "component": "---",
        "inputs": 1,
        "matches": 1,
        "apis": [
          "TerminateProcess"
        ]
      },
      {
        "intent": "Can Delay Loading of DLLs Until Runtime/Process Execution",
        "tag": "Expert Input:IBO.0005 - Load DLL Resources With Delay During Runtime",
        "component": "Memory",
        "inputs": 2,
        "matches": 2,
        "apis": [
          "DelayLoadFailureHook",
          "ResolveDelayLoadedAPI"
        ]
      },
      {
        "intent": "Can Access And Read Windows Tokens",
        "tag": "Expert Input:IBO.00020 - Windows Token Access",
        "component": "Privileges",
        "inputs": 4,
        "matches": 2,
        "apis": [
          "OpenProcessToken",
          "OpenThreadToken"
        ]
      }
    ]
  }
}