{
  "name": "msvidctl.dll",
  "path": "\\\\?\\C:\\Windows\\System32\\MSVidCtl.dll",
  "size": 3452416,
  "is_64": true,
  "is_lib": true,
  "is_dotnet": false,
  "has_imports": true,
  "has_exports": true,
  "subsystem": 2,
  "subsystem_caption": "The Windows Graphical User Interface (GUI) Subsystem",
  "libs": [
    "advapi32.dll",
    "gdi32.dll",
    "kernel32.dll",
    "msvcrt.dll",
    "ole32.dll",
    "oleaut32.dll",
    "rpcrt4.dll",
    "shlwapi.dll",
    "slc.dll",
    "user32.dll"
  ],
  "imports": [
    {
      "lib": "rpcrt4.dll",
      "count": 23,
      "functions": [
        "CStdStubBuffer_AddRef",
        "CStdStubBuffer_Connect",
        "CStdStubBuffer_CountRefs",
        "CStdStubBuffer_DebugServerQueryInterface",
        "CStdStubBuffer_DebugServerRelease",
        "CStdStubBuffer_Disconnect",
        "CStdStubBuffer_Invoke",
        "CStdStubBuffer_IsIIDSupported",
        "CStdStubBuffer_QueryInterface",
        "IUnknown_AddRef_Proxy",
        "IUnknown_QueryInterface_Proxy",
        "IUnknown_Release_Proxy",
        "NdrCStdStubBuffer2_Release",
        "NdrCStdStubBuffer_Release",
        "NdrClientCall3",
        "NdrDllCanUnloadNow",
        "NdrDllGetClassObject",
        "NdrDllRegisterProxy",
        "NdrDllUnregisterProxy",
        "NdrOleAllocate",
        "NdrOleFree",
        "NdrStubCall3",
        "NdrStubForwardingFunction"
      ]
    },
    {
      "lib": "msvcrt.dll",
      "count": 53,
      "functions": [
        "??0exception@@QEAA@AEBQEBD@Z",
        "??0exception@@QEAA@AEBQEBDH@Z",
        "??0exception@@QEAA@AEBV0@@Z",
        "??0exception@@QEAA@XZ",
        "??1exception@@UEAA@XZ",
        "??1type_info@@UEAA@XZ",
        "??8type_info@@QEBAHAEBV0@@Z",
        "?terminate@@YAXXZ",
        "?what@exception@@UEBAPEBDXZ",
        "_CxxThrowException",
        "_XcptFilter",
        "__C_specific_handler",
        "__CxxFrameHandler3",
        "__dllonexit",
        "_amsg_exit",
        "_callnewh",
        "_errno",
        "_initterm",
        "_itow",
        "_lock",
        "_onexit",
        "_purecall",
        "_ui64tow",
        "_unlock",
        "_vsnprintf",
        "_vsnwprintf",
        "_wcsicmp",
        "_wcsnicmp",
        "_wsplitpath_s",
        "_wtoi",
        "floor",
        "free",
        "iswalpha",
        "iswdigit",
        "iswspace",
        "malloc",
        "memcmp",
        "memcpy",
        "memcpy_s",
        "memmove",
        "memmove_s",
        "memset",
        "realloc",
        "swscanf",
        "wcscat_s",
        "wcscmp",
        "wcscpy_s",
        "wcscspn",
        "wcsncmp",
        "wcsnlen",
        "wcsstr",
        "wcstol",
        "wcstoul"
      ]
    },
    {
      "lib": "advapi32.dll",
      "count": 20,
      "functions": [
        "CryptAcquireContextW",
        "CryptCreateHash",
        "CryptDestroyHash",
        "CryptGenRandom",
        "CryptGetHashParam",
        "CryptHashData",
        "CryptReleaseContext",
        "InitializeSecurityDescriptor",
        "RegCloseKey",
        "RegCreateKeyExW",
        "RegDeleteValueW",
        "RegEnumKeyExW",
        "RegEnumValueW",
        "RegOpenKeyExW",
        "RegQueryInfoKeyW",
        "RegQueryValueExW",
        "RegQueryValueW",
        "RegSetValueExW",
        "RegSetValueW",
        "SetSecurityDescriptorDacl"
      ]
    },
    {
      "lib": "slc.dll",
      "count": 1,
      "functions": [
        "SLGetWindowsInformationDWORD"
      ]
    },
    {
      "lib": "kernel32.dll",
      "count": 89,
      "functions": [
        "AcquireSRWLockExclusive",
        "CloseHandle",
        "CreateEventW",
        "CreateFileW",
        "CreateMutexW",
        "CreateThread",
        "DebugBreak",
        "DecodePointer",
        "DecodeSystemPointer",
        "DeleteCriticalSection",
        "DeviceIoControl",
        "DisableThreadLibraryCalls",
        "DuplicateHandle",
        "EncodePointer",
        "EncodeSystemPointer",
        "EnterCriticalSection",
        "ExpandEnvironmentStringsW",
        "FindResourceW",
        "FlushInstructionCache",
        "FormatMessageW",
        "FreeLibrary",
        "GetCurrentProcess",
        "GetCurrentProcessId",
        "GetCurrentThreadId",
        "GetDriveTypeW",
        "GetLastError",
        "GetLocalTime",
        "GetLocaleInfoW",
        "GetModuleFileNameW",
        "GetModuleHandleW",
        "GetProcAddress",
        "GetProcessHeap",
        "GetSystemDirectoryW",
        "GetSystemInfo",
        "GetSystemTimeAsFileTime",
        "GetTempPathW",
        "GetTickCount",
        "GetTickCount64",
        "GetVersionExW",
        "GlobalAlloc",
        "GlobalLock",
        "GlobalUnlock",
        "HeapAlloc",
        "HeapDestroy",
        "HeapFree",
        "InitializeCriticalSection",
        "InterlockedPopEntrySList",
        "InterlockedPushEntrySList",
        "IsValidLocale",
        "LeaveCriticalSection",
        "LoadLibraryExA",
        "LoadLibraryExW",
        "LoadLibraryW",
        "LoadResource",
        "LockResource",
        "MultiByteToWideChar",
        "OutputDebugStringA",
        "OutputDebugStringW",
        "QueryPerformanceCounter",
        "RaiseException",
        "ReleaseMutex",
        "ReleaseSRWLockExclusive",
        "ResetEvent",
        "RtlCaptureContext",
        "RtlLookupFunctionEntry",
        "RtlVirtualUnwind",
        "SetEvent",
        "SetLastError",
        "SetThreadExecutionState",
        "SetUnhandledExceptionFilter",
        "SizeofResource",
        "Sleep",
        "SleepConditionVariableSRW",
        "TerminateProcess",
        "UnhandledExceptionFilter",
        "VirtualAlloc",
        "VirtualFree",
        "VirtualProtect",
        "VirtualQuery",
        "WaitForMultipleObjects",
        "WaitForSingleObject",
        "WakeAllConditionVariable",
        "WideCharToMultiByte",
        "WriteFile",
        "lstrcmpiW",
        "lstrcpyW",
        "lstrcpynW",
        "lstrlenA",
        "lstrlenW"
      ]
    },
    {
      "lib": "shlwapi.dll",
      "count": 2,
      "functions": [
        "PathCreateFromUrlW",
        "UrlIsW"
      ]
    },
    {
      "lib": "user32.dll",
      "count": 54,
      "functions": [
        "BeginPaint",
        "CallWindowProcW",
        "CharNextW",
        "CharPrevW",
        "CopyRect",
        "CreateWindowExW",
        "DefWindowProcW",
        "DestroyAcceleratorTable",
        "DestroyWindow",
        "DispatchMessageW",
        "EndPaint",
        "EqualRect",
        "FillRect",
        "GetClassInfoExW",
        "GetClientRect",
        "GetDC",
        "GetDesktopWindow",
        "GetFocus",
        "GetKeyState",
        "GetParent",
        "GetWindowLongPtrW",
        "GetWindowRect",
        "IntersectRect",
        "InvalidateRect",
        "IsChild",
        "IsWindow",
        "KillTimer",
        "LoadCursorW",
        "LoadImageW",
        "LoadStringW",
        "MapWindowPoints",
        "MsgWaitForMultipleObjectsEx",
        "OffsetRect",
        "PeekMessageW",
        "PostMessageW",
        "PostThreadMessageW",
        "PtInRect",
        "RegisterClassExW",
        "ReleaseCapture",
        "ReleaseDC",
        "SendMessageW",
        "SetCapture",
        "SetCursor",
        "SetFocus",
        "SetTimer",
        "SetWindowLongPtrW",
        "SetWindowPos",
        "SetWindowRgn",
        "ShowWindow",
        "SystemParametersInfoW",
        "TranslateMessage",
        "UnionRect",
        "wsprintfW",
        "wvsprintfW"
      ]
    },
    {
      "lib": "ole32.dll",
      "count": 42,
      "functions": [
        "CLSIDFromString",
        "CoCreateFreeThreadedMarshaler",
        "CoCreateInstance",
        "CoGetMalloc",
        "CoInitializeEx",
        "CoTaskMemAlloc",
        "CoTaskMemFree",
        "CoTaskMemRealloc",
        "CoUninitialize",
        "CoWaitForMultipleHandles",
        "CreateBindCtx",
        "CreateDataAdviseHolder",
        "CreateItemMoniker",
        "CreateOleAdviseHolder",
        "GetRunningObjectTable",
        "HDC_UserFree",
        "HDC_UserFree64",
        "HDC_UserMarshal",
        "HDC_UserMarshal64",
        "HDC_UserSize",
        "HDC_UserSize64",
        "HDC_UserUnmarshal",
        "HDC_UserUnmarshal64",
        "HWND_UserFree",
        "HWND_UserFree64",
        "HWND_UserMarshal",
        "HWND_UserMarshal64",
        "HWND_UserSize",
        "HWND_UserSize64",
        "HWND_UserUnmarshal",
        "HWND_UserUnmarshal64",
        "MkParseDisplayName",
        "OleLoadFromStream",
        "OleRegEnumVerbs",
        "OleRegGetMiscStatus",
        "OleRegGetUserType",
        "OleSaveToStream",
        "ProgIDFromCLSID",
        "ReadClassStm",
        "StringFromCLSID",
        "StringFromGUID2",
        "WriteClassStm"
      ]
    },
    {
      "lib": "gdi32.dll",
      "count": 15,
      "functions": [
        "CloseMetaFile",
        "CreateCompatibleDC",
        "CreateDIBitmap",
        "CreateMetaFileW",
        "CreateRectRgnIndirect",
        "CreateSolidBrush",
        "DeleteDC",
        "DeleteMetaFile",
        "DeleteObject",
        "GetDeviceCaps",
        "RestoreDC",
        "SaveDC",
        "SelectObject",
        "SetWindowExtEx",
        "SetWindowOrgEx"
      ]
    },
    {
      "lib": "oleaut32.dll",
      "count": 48,
      "functions": [
        "BSTR_UserFree64",
        "BSTR_UserMarshal64",
        "BSTR_UserSize64",
        "BSTR_UserUnmarshal64",
        "LPSAFEARRAY_UserFree64",
        "LPSAFEARRAY_UserMarshal64",
        "LPSAFEARRAY_UserSize64",
        "LPSAFEARRAY_UserUnmarshal64",
        "ORDINAL 10",
        "ORDINAL 12",
        "ORDINAL 147",
        "ORDINAL 149",
        "ORDINAL 15",
        "ORDINAL 150",
        "ORDINAL 16",
        "ORDINAL 161",
        "ORDINAL 162",
        "ORDINAL 163",
        "ORDINAL 176",
        "ORDINAL 2",
        "ORDINAL 201",
        "ORDINAL 202",
        "ORDINAL 23",
        "ORDINAL 24",
        "ORDINAL 277",
        "ORDINAL 283",
        "ORDINAL 284",
        "ORDINAL 285",
        "ORDINAL 286",
        "ORDINAL 287",
        "ORDINAL 288",
        "ORDINAL 289",
        "ORDINAL 290",
        "ORDINAL 291",
        "ORDINAL 292",
        "ORDINAL 293",
        "ORDINAL 294",
        "ORDINAL 4",
        "ORDINAL 417",
        "ORDINAL 419",
        "ORDINAL 6",
        "ORDINAL 7",
        "ORDINAL 8",
        "ORDINAL 9",
        "VARIANT_UserFree64",
        "VARIANT_UserMarshal64",
        "VARIANT_UserSize64",
        "VARIANT_UserUnmarshal64"
      ]
    }
  ],
  "exports": {
    "count": 5,
    "functions": [
      "DllCanUnloadNow",
      "DllGetClassObject",
      "DllRegisterServer",
      "DllUnregisterServer",
      "GetProxyDllInfo"
    ]
  },
  "hashes": {
    "sha2": "6679297f7e7f17ef37f48fa25f070d78e76324d167aa8b961d85327321e58754",
    "ssdeep": "49152:GRVfgoQrkv0BzBQLW6Ki8gT3lZhrnxySgnpO91MmIusURfvxmtdl:GRVfgoQrkv0BVi8gT3r9xyS1jzfvx"
  },
  "intent": {
    "intentions": 6,
    "uniq_apis_matched": 19,
    "results": [
      {
        "intent": "Can Terminate Processes On The Target System",
        "tag": "Expert Input:IBO.0025",
        "component": "Processes",
        "inputs": 1,
        "matches": 1,
        "apis": [
          "TerminateProcess"
        ]
      },
      {
        "intent": "Can Conduct Cryptographic Operations",
        "tag": "Expert Input:IBO.0022 - Windows Cryptography Facilities",
        "component": "Crypto",
        "inputs": 71,
        "matches": 7,
        "apis": [
          "CryptAcquireContextW",
          "CryptCreateHash",
          "CryptDestroyHash",
          "CryptGenRandom",
          "CryptGetHashParam",
          "CryptHashData",
          "CryptReleaseContext"
        ]
      },
      {
        "intent": "Can Enumerate The Windows Registry",
        "tag": "Expert Input:IBO.009 - Enumerate The Windows Registry",
        "component": "Registry",
        "inputs": 6,
        "matches": 2,
        "apis": [
          "RegEnumKeyExW",
          "RegEnumValueW"
        ]
      },
      {
        "intent": "Can Create/Manipulate The Windows Registry",
        "tag": "Expert Input:IBO.008 - Create/Manipulate The Windows Registry",
        "component": "Registry",
        "inputs": 33,
        "matches": 5,
        "apis": [
          "RegCreateKeyExW",
          "RegDeleteValueW",
          "RegOpenKeyExW",
          "RegSetValueExW",
          "RegSetValueW"
        ]
      },
      {
        "intent": "Can Manipulate Access Control Mechanisms",
        "tag": "Expert Input:IBO.0021 - Windows Access Control Lists",
        "component": "Privileges",
        "inputs": 15,
        "matches": 1,
        "apis": [
          "SetSecurityDescriptorDacl"
        ]
      },
      {
        "intent": "Queries And Discovers Windows Registry Configuration Settings",
        "tag": "Discovery:T1012 - Query Registry",
        "component": "Registry",
        "inputs": 11,
        "matches": 3,
        "apis": [
          "RegQueryInfoKeyW",
          "RegQueryValueExW",
          "RegQueryValueW"
        ]
      }
    ]
  }
}