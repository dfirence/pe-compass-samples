{
  "name": "fxsutility.dll",
  "path": "\\\\?\\C:\\Windows\\System32\\FXSUTILITY.dll",
  "size": 186368,
  "type": "win-pe",
  "is_64": true,
  "is_lib": true,
  "is_dotnet": false,
  "has_imports": true,
  "has_exports": true,
  "subsystem": 3,
  "subsystem_caption": "The Windows Character (Console UI) Subsystem",
  "libs": [
    "aclui.dll",
    "advapi32.dll",
    "fxsapi.dll",
    "kernel32.dll",
    "msvcrt.dll",
    "ole32.dll",
    "oleaut32.dll",
    "rpcrt4.dll",
    "shell32.dll",
    "shlwapi.dll",
    "user32.dll",
    "winspool.drv"
  ],
  "imports": [
    {
      "lib": "oleaut32.dll",
      "count": 4,
      "functions": [
        "ORDINAL 186",
        "ORDINAL 2",
        "ORDINAL 277",
        "ORDINAL 6"
      ]
    },
    {
      "lib": "shell32.dll",
      "count": 4,
      "functions": [
        "SHBrowseForFolderW",
        "SHCreateDirectoryExW",
        "SHGetMalloc",
        "SHGetPathFromIDListW"
      ]
    },
    {
      "lib": "kernel32.dll",
      "count": 61,
      "functions": [
        "ActivateActCtx",
        "CloseHandle",
        "CompareStringW",
        "CreateActCtxW",
        "CreateProcessW",
        "DeactivateActCtx",
        "DeleteCriticalSection",
        "DisableThreadLibraryCalls",
        "EnterCriticalSection",
        "ExpandEnvironmentStringsA",
        "ExpandEnvironmentStringsW",
        "FindResourceExW",
        "FreeLibrary",
        "GetCurrentProcess",
        "GetCurrentProcessId",
        "GetCurrentThread",
        "GetCurrentThreadId",
        "GetFileAttributesW",
        "GetFullPathNameW",
        "GetLastError",
        "GetLocalTime",
        "GetLocaleInfoEx",
        "GetLocaleInfoW",
        "GetModuleFileNameW",
        "GetModuleHandleW",
        "GetProcAddress",
        "GetProcessHeap",
        "GetSystemInfo",
        "GetSystemTimeAsFileTime",
        "GetTickCount",
        "GetUserPreferredUILanguages",
        "GetVersionExW",
        "HeapAlloc",
        "HeapDestroy",
        "HeapFree",
        "InitializeCriticalSection",
        "LeaveCriticalSection",
        "LoadLibraryExA",
        "LoadLibraryExW",
        "LoadLibraryW",
        "LoadResource",
        "LocalAlloc",
        "LocalFree",
        "MultiByteToWideChar",
        "OutputDebugStringW",
        "QueryPerformanceCounter",
        "ReleaseActCtx",
        "RtlCaptureContext",
        "RtlLookupFunctionEntry",
        "RtlVirtualUnwind",
        "SetLastError",
        "SetUnhandledExceptionFilter",
        "SizeofResource",
        "Sleep",
        "TerminateProcess",
        "UnhandledExceptionFilter",
        "VirtualAlloc",
        "VirtualProtect",
        "VirtualQuery",
        "lstrcmpiW",
        "lstrcpynW"
      ]
    },
    {
      "lib": "advapi32.dll",
      "count": 36,
      "functions": [
        "AdjustTokenPrivileges",
        "AllocateAndInitializeSid",
        "ChangeServiceConfigW",
        "CloseServiceHandle",
        "ControlService",
        "ConvertStringSecurityDescriptorToSecurityDescriptorW",
        "DuplicateTokenEx",
        "EnumDependentServicesW",
        "FreeSid",
        "GetNamedSecurityInfoW",
        "GetSecurityDescriptorControl",
        "GetSecurityDescriptorLength",
        "LookupPrivilegeValueW",
        "MakeSelfRelativeSD",
        "MapGenericMask",
        "OpenProcessToken",
        "OpenSCManagerW",
        "OpenServiceW",
        "OpenThreadToken",
        "QueryServiceStatus",
        "RegCloseKey",
        "RegCreateKeyExW",
        "RegDeleteValueW",
        "RegEnumKeyExW",
        "RegEnumValueW",
        "RegOpenKeyExA",
        "RegOpenKeyExW",
        "RegQueryInfoKeyW",
        "RegQueryValueExA",
        "RegQueryValueExW",
        "RegSetValueExW",
        "SetEntriesInAclW",
        "SetNamedSecurityInfoW",
        "SetThreadToken",
        "StartServiceW",
        "TraceMessage"
      ]
    },
    {
      "lib": "rpcrt4.dll",
      "count": 19,
      "functions": [
        "CStdStubBuffer_AddRef",
        "CStdStubBuffer_Connect",
        "CStdStubBuffer_CountRefs",
        "CStdStubBuffer_DebugServerQueryInterface",
        "CStdStubBuffer_DebugServerRelease",
        "CStdStubBuffer_Disconnect",
        "CStdStubBuffer_Invoke",
        "CStdStubBuffer_IsIIDSupported",
        "CStdStubBuffer_QueryInterface",
        "IUnknown_AddRef_Proxy",
        "IUnknown_QueryInterface_Proxy",
        "IUnknown_Release_Proxy",
        "NdrCStdStubBuffer_Release",
        "NdrDllCanUnloadNow",
        "NdrDllGetClassObject",
        "NdrDllRegisterProxy",
        "NdrDllUnregisterProxy",
        "NdrOleAllocate",
        "NdrOleFree"
      ]
    },
    {
      "lib": "aclui.dll",
      "count": 1,
      "functions": [
        "ORDINAL 1"
      ]
    },
    {
      "lib": "winspool.drv",
      "count": 1,
      "functions": [
        "EnumPrintersW"
      ]
    },
    {
      "lib": "ole32.dll",
      "count": 15,
      "functions": [
        "CoCreateInstance",
        "CoInitialize",
        "CoInitializeEx",
        "CoTaskMemAlloc",
        "CoTaskMemFree",
        "CoTaskMemRealloc",
        "CoUninitialize",
        "HWND_UserFree",
        "HWND_UserFree64",
        "HWND_UserMarshal",
        "HWND_UserMarshal64",
        "HWND_UserSize",
        "HWND_UserSize64",
        "HWND_UserUnmarshal",
        "HWND_UserUnmarshal64"
      ]
    },
    {
      "lib": "shlwapi.dll",
      "count": 6,
      "functions": [
        "PathFileExistsW",
        "PathIsNetworkPathW",
        "PathIsRelativeW",
        "PathMakePrettyW",
        "SHAutoComplete",
        "StrChrW"
      ]
    },
    {
      "lib": "fxsapi.dll",
      "count": 18,
      "functions": [
        "FaxAccessCheckEx2",
        "FaxCheckValidFaxFolder",
        "FaxClose",
        "FaxConnectFaxServerW",
        "FaxEnumPortsExW",
        "FaxFreeBuffer",
        "FaxGetExtensionDataW",
        "FaxGetGeneralConfiguration",
        "FaxGetOutboxConfiguration",
        "FaxGetRoutingInfoW",
        "FaxGetSecurityEx2",
        "FaxOpenPort",
        "FaxSetExtensionDataW",
        "FaxSetGeneralConfiguration",
        "FaxSetOutboxConfiguration",
        "FaxSetPortExW",
        "FaxSetRoutingInfoW",
        "FaxSetSecurityEx2"
      ]
    },
    {
      "lib": "msvcrt.dll",
      "count": 25,
      "functions": [
        "??0exception@@QEAA@AEBQEBDH@Z",
        "??0exception@@QEAA@AEBV0@@Z",
        "??1exception@@UEAA@XZ",
        "??1type_info@@UEAA@XZ",
        "?what@exception@@UEBAPEBDXZ",
        "_CxxThrowException",
        "_XcptFilter",
        "__C_specific_handler",
        "__CxxFrameHandler3",
        "_amsg_exit",
        "_callnewh",
        "_initterm",
        "_purecall",
        "_vsnwprintf",
        "_wsplitpath_s",
        "free",
        "iswspace",
        "malloc",
        "memcmp",
        "memcpy",
        "memset",
        "realloc",
        "wcscat_s",
        "wcschr",
        "wcscmp"
      ]
    },
    {
      "lib": "user32.dll",
      "count": 29,
      "functions": [
        "CallWindowProcW",
        "CharNextW",
        "CharPrevW",
        "CheckDlgButton",
        "DialogBoxParamW",
        "EnableWindow",
        "EndDialog",
        "FindWindowW",
        "GetDlgItem",
        "GetDlgItemInt",
        "GetDlgItemTextW",
        "GetParent",
        "GetWindowLongPtrW",
        "GetWindowTextLengthW",
        "GetWindowTextW",
        "IsDlgButtonChecked",
        "LoadStringW",
        "MessageBoxW",
        "PostMessageW",
        "SendDlgItemMessageW",
        "SendMessageW",
        "SetActiveWindow",
        "SetDlgItemInt",
        "SetDlgItemTextW",
        "SetFocus",
        "SetWindowLongPtrW",
        "SetWindowPos",
        "SetWindowTextW",
        "ShowWindow"
      ]
    }
  ],
  "exports": {
    "count": 7,
    "functions": [
      "CanSendToFaxRecipient",
      "DllCanUnloadNow",
      "DllGetClassObject",
      "DllRegisterServer",
      "DllUnregisterServer",
      "GetProxyDllInfo",
      "SendToFaxRecipient"
    ]
  },
  "hashes": {
    "sha2": "8b607a508dd3bd254c3699aba88683eec187038f83dc291239b80181e50c35d4",
    "ssdeep": "3072:RFYrFsH6llFKJz/5M63cXzQNc4lPV5FMtRHE3VQlOeNHZky:RYFxlF2z/5M63cXzAZP+RH2aOeNHC"
  },
  "intent": {
    "intentions": 9,
    "uniq_apis_matched": 22,
    "results": [
      {
        "intent": "Manipulates Windows Tokens",
        "tag": "Defense Evasion:T1134 - Access Token Manipulation",
        "component": "Privileges",
        "inputs": 4,
        "matches": 1,
        "apis": [
          "AdjustTokenPrivileges"
        ]
      },
      {
        "intent": "Can Create/Manipulate System Services",
        "tag": "Expert Input:IBO.0007 - Create/Manipulate System Services",
        "component": "Services",
        "inputs": 19,
        "matches": 3,
        "apis": [
          "CloseServiceHandle",
          "ControlService",
          "StartServiceW"
        ]
      },
      {
        "intent": "Queries And Discovers Windows Registry Configuration Settings",
        "tag": "Discovery:T1012 - Query Registry",
        "component": "Registry",
        "inputs": 11,
        "matches": 3,
        "apis": [
          "RegQueryInfoKeyW",
          "RegQueryValueExA",
          "RegQueryValueExW"
        ]
      },
      {
        "intent": "Can Access And Read Windows Tokens",
        "tag": "Expert Input:IBO.00020 - Windows Token Access",
        "component": "Privileges",
        "inputs": 4,
        "matches": 2,
        "apis": [
          "OpenProcessToken",
          "OpenThreadToken"
        ]
      },
      {
        "intent": "Can Enumerate The Windows Registry",
        "tag": "Expert Input:IBO.0009 - Enumerate The Windows Registry",
        "component": "Registry",
        "inputs": 6,
        "matches": 2,
        "apis": [
          "RegEnumKeyExW",
          "RegEnumValueW"
        ]
      },
      {
        "intent": "Can Execute or Spawn New Processes On The Target System",
        "tag": "Expert Input:IBO.0002 - Spawn New Process",
        "component": "Processes",
        "inputs": 7,
        "matches": 1,
        "apis": [
          "CreateProcessw"
        ]
      },
      {
        "intent": "Creates Token To Impersonate",
        "tag": "Privilege Escalation:T1134.003 - Make and Impersonate Token",
        "component": "Privileges",
        "inputs": 2,
        "matches": 1,
        "apis": [
          "SetThreadToken"
        ]
      },
      {
        "intent": "Can Create/Manipulate The Windows Registry",
        "tag": "Expert Input:IBO.0008 - Create/Manipulate The Windows Registry",
        "component": "Registry",
        "inputs": 33,
        "matches": 5,
        "apis": [
          "RegCreateKeyExW",
          "RegDeleteValueW",
          "RegOpenKeyExA",
          "RegOpenKeyExW",
          "RegSetValueExW"
        ]
      },
      {
        "intent": "Can Enumerate/Discover System Services And Their Configuration Data",
        "tag": "Expert Input:IBO.0006 - Enumerate System Services",
        "component": "Services",
        "inputs": 28,
        "matches": 4,
        "apis": [
          "EnumDependentServicesW",
          "OpenSCManagerW",
          "OpenServiceW",
          "QueryServiceStatus"
        ]
      }
    ]
  }
}