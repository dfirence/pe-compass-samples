{
  "name": "fwremotesvr.dll",
  "path": "\\\\?\\C:\\Windows\\SysWOW64\\FwRemoteSvr.dll",
  "size": 58880,
  "is_64": false,
  "is_lib": true,
  "is_dotnet": true,
  "has_imports": true,
  "has_exports": true,
  "subsystem": 3,
  "subsystem_caption": "The Windows Character (Console UI) Subsystem",
  "libs": [
    "api-ms-win-core-delayload-l1-1-0.dll",
    "api-ms-win-core-delayload-l1-1-1.dll",
    "api-ms-win-core-errorhandling-l1-1-0.dll",
    "api-ms-win-core-heap-l2-1-0.dll",
    "api-ms-win-core-processthreads-l1-1-0.dll",
    "api-ms-win-core-profile-l1-1-0.dll",
    "api-ms-win-core-synch-l1-2-0.dll",
    "api-ms-win-core-sysinfo-l1-1-0.dll",
    "api-ms-win-eventing-classicprovider-l1-1-0.dll",
    "api-ms-win-security-base-l1-1-0.dll",
    "firewallapi.dll",
    "fwbase.dll",
    "msvcrt.dll",
    "rpcrt4.dll"
  ],
  "imports": [
    {
      "lib": "api-ms-win-core-errorhandling-l1-1-0.dll",
      "count": 3,
      "functions": [
        "GetLastError",
        "SetUnhandledExceptionFilter",
        "UnhandledExceptionFilter"
      ]
    },
    {
      "lib": "fwbase.dll",
      "count": 6,
      "functions": [
        "FwAlloc",
        "FwCloseHandle",
        "FwFree",
        "FwHResultToWindowsError",
        "FwSizeTMultiply",
        "FwStringCopy"
      ]
    },
    {
      "lib": "msvcrt.dll",
      "count": 7,
      "functions": [
        "_XcptFilter",
        "_amsg_exit",
        "_except_handler4_common",
        "_initterm",
        "free",
        "malloc",
        "memset"
      ]
    },
    {
      "lib": "firewallapi.dll",
      "count": 46,
      "functions": [
        "FWAddAuthenticationSet",
        "FWAddConnectionSecurityRule",
        "FWAddCryptoSet",
        "FWAddFirewallRule",
        "FWAddMainModeRule",
        "FWClosePolicyStore",
        "FWDeleteAllAuthenticationSets",
        "FWDeleteAllConnectionSecurityRules",
        "FWDeleteAllCryptoSets",
        "FWDeleteAllFirewallRules",
        "FWDeleteAllMainModeRules",
        "FWDeleteAuthenticationSet",
        "FWDeleteConnectionSecurityRule",
        "FWDeleteCryptoSet",
        "FWDeleteFirewallRule",
        "FWDeleteMainModeRule",
        "FWDeletePhase1SAs",
        "FWDeletePhase2SAs",
        "FWEnumAdapters",
        "FWEnumAuthenticationSets",
        "FWEnumConnectionSecurityRules",
        "FWEnumCryptoSets",
        "FWEnumFirewallRules",
        "FWEnumMainModeRules",
        "FWEnumNetworks",
        "FWEnumPhase1SAs",
        "FWEnumPhase2SAs",
        "FWEnumProducts",
        "FWGetConfig",
        "FWGetConfig2",
        "FWGetGlobalConfig",
        "FWGetGlobalConfig2",
        "FWOpenPolicyStore",
        "FWQueryAuthenticationSets",
        "FWQueryConnectionSecurityRules",
        "FWQueryCryptoSets",
        "FWQueryFirewallRules",
        "FWQueryMainModeRules",
        "FWRestoreDefaults",
        "FWSetAuthenticationSet",
        "FWSetConfig",
        "FWSetConnectionSecurityRule",
        "FWSetCryptoSet",
        "FWSetFirewallRule",
        "FWSetGlobalConfig",
        "FWSetMainModeRule"
      ]
    },
    {
      "lib": "api-ms-win-core-processthreads-l1-1-0.dll",
      "count": 6,
      "functions": [
        "GetCurrentProcess",
        "GetCurrentProcessId",
        "GetCurrentThread",
        "GetCurrentThreadId",
        "OpenThreadToken",
        "TerminateProcess"
      ]
    },
    {
      "lib": "api-ms-win-core-synch-l1-2-0.dll",
      "count": 1,
      "functions": [
        "Sleep"
      ]
    },
    {
      "lib": "api-ms-win-core-delayload-l1-1-0.dll",
      "count": 1,
      "functions": [
        "DelayLoadFailureHook"
      ]
    },
    {
      "lib": "api-ms-win-eventing-classicprovider-l1-1-0.dll",
      "count": 1,
      "functions": [
        "TraceMessage"
      ]
    },
    {
      "lib": "api-ms-win-core-sysinfo-l1-1-0.dll",
      "count": 2,
      "functions": [
        "GetSystemTimeAsFileTime",
        "GetTickCount"
      ]
    },
    {
      "lib": "rpcrt4.dll",
      "count": 17,
      "functions": [
        "I_RpcBindingIsClientLocal",
        "NdrServerCall2",
        "RpcBindingInqAuthClientW",
        "RpcBindingToStringBindingW",
        "RpcBindingVectorFree",
        "RpcEpRegisterW",
        "RpcEpUnregister",
        "RpcImpersonateClient",
        "RpcRevertToSelf",
        "RpcServerInqBindings",
        "RpcServerInqDefaultPrincNameW",
        "RpcServerRegisterAuthInfoW",
        "RpcServerRegisterIf3",
        "RpcServerUnregisterIfEx",
        "RpcServerUseProtseqW",
        "RpcStringBindingParseW",
        "RpcStringFreeW"
      ]
    },
    {
      "lib": "api-ms-win-core-delayload-l1-1-1.dll",
      "count": 1,
      "functions": [
        "ResolveDelayLoadedAPI"
      ]
    },
    {
      "lib": "api-ms-win-security-base-l1-1-0.dll",
      "count": 1,
      "functions": [
        "AccessCheck"
      ]
    },
    {
      "lib": "api-ms-win-core-heap-l2-1-0.dll",
      "count": 1,
      "functions": [
        "LocalFree"
      ]
    },
    {
      "lib": "api-ms-win-core-profile-l1-1-0.dll",
      "count": 1,
      "functions": [
        "QueryPerformanceCounter"
      ]
    }
  ],
  "exports": {
    "count": 2,
    "functions": [
      "FwRpcAPIsInitialize",
      "FwRpcAPIsShutdown"
    ]
  },
  "hashes": {
    "sha2": "395413808d68fc1b3f8c324614783cf0e96ec40af0f5dc4e4d9b39998e82b668",
    "ssdeep": "1536:ByCFS8nTu9H8H3W8URo8DOdk0oy3Uhc4TZbsrxDVuyIHk6k+x:8CM8nTu9H8H3W8UKqOdk093UhcuZbeDg"
  },
  "intent": {
    "intentions": 2,
    "uniq_apis_matched": 3,
    "results": [
      {
        "intent": "Has Ability To Delay Loading of DLLs Until Runtime/Process Execution",
        "tag": "Expert Input:IBO.0005 - Load DLL Resources With Delay During Runtime",
        "component": "Memory",
        "inputs": 2,
        "matches": 2,
        "apis": [
          "DelayLoadFailureHook",
          "ResolveDelayLoadedAPI"
        ]
      },
      {
        "intent": "Has Ability To Access And Read Windows Tokens",
        "tag": "Expert Input:IBO.00020 - Windows Token Access",
        "component": "Privileges",
        "inputs": 4,
        "matches": 1,
        "apis": [
          "OpenThreadToken"
        ]
      }
    ]
  }
}