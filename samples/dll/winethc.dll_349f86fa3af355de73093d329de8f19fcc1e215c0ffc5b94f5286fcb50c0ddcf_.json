{
  "name": "winethc.dll",
  "path": "\\\\?\\C:\\Windows\\System32\\winethc.dll",
  "size": 93184,
  "is_64": true,
  "is_lib": true,
  "is_dotnet": false,
  "has_imports": true,
  "has_exports": true,
  "subsystem": 2,
  "subsystem_caption": "The Windows Graphical User Interface (GUI) Subsystem",
  "libs": [
    "advapi32.dll",
    "api-ms-win-core-com-l1-1-0.dll",
    "dnsapi.dll",
    "kernel32.dll",
    "msvcrt.dll",
    "nlaapi.dll",
    "ntdll.dll",
    "oleaut32.dll",
    "shlwapi.dll",
    "user32.dll",
    "winhttp.dll",
    "wininet.dll",
    "ws2_32.dll"
  ],
  "imports": [
    {
      "lib": "dnsapi.dll",
      "count": 2,
      "functions": [
        "DnsFreeProxyName",
        "DnsGetProxyInformation"
      ]
    },
    {
      "lib": "api-ms-win-core-com-l1-1-0.dll",
      "count": 6,
      "functions": [
        "CoCreateGuid",
        "CoCreateInstance",
        "CoTaskMemAlloc",
        "CoTaskMemFree",
        "CoTaskMemRealloc",
        "StringFromGUID2"
      ]
    },
    {
      "lib": "ws2_32.dll",
      "count": 13,
      "functions": [
        "FreeAddrInfoW",
        "GetAddrInfoW",
        "ORDINAL 10",
        "ORDINAL 111",
        "ORDINAL 115",
        "ORDINAL 116",
        "ORDINAL 151",
        "ORDINAL 18",
        "ORDINAL 2",
        "ORDINAL 23",
        "ORDINAL 3",
        "ORDINAL 4",
        "ORDINAL 9"
      ]
    },
    {
      "lib": "wininet.dll",
      "count": 4,
      "functions": [
        "InternetCrackUrlW",
        "InternetGetConnectedStateExW",
        "InternetInitializeAutoProxyDll",
        "InternetSetOptionW"
      ]
    },
    {
      "lib": "oleaut32.dll",
      "count": 7,
      "functions": [
        "ORDINAL 161",
        "ORDINAL 163",
        "ORDINAL 186",
        "ORDINAL 2",
        "ORDINAL 277",
        "ORDINAL 6",
        "ORDINAL 7"
      ]
    },
    {
      "lib": "user32.dll",
      "count": 7,
      "functions": [
        "CharNextW",
        "CloseDesktop",
        "CreateDesktopW",
        "GetThreadDesktop",
        "LoadStringW",
        "SetThreadDesktop",
        "UnregisterClassA"
      ]
    },
    {
      "lib": "kernel32.dll",
      "count": 49,
      "functions": [
        "AcquireSRWLockExclusive",
        "CloseHandle",
        "CreateThread",
        "DeleteCriticalSection",
        "DisableThreadLibraryCalls",
        "EnterCriticalSection",
        "ExpandEnvironmentStringsW",
        "FindResourceExW",
        "FreeLibrary",
        "GetCurrentProcess",
        "GetCurrentProcessId",
        "GetCurrentThread",
        "GetCurrentThreadId",
        "GetExitCodeProcess",
        "GetLastError",
        "GetModuleFileNameA",
        "GetModuleFileNameW",
        "GetModuleHandleW",
        "GetProcAddress",
        "GetProcessHeap",
        "GetSystemTimeAsFileTime",
        "GetThreadLocale",
        "GetTickCount",
        "GlobalAlloc",
        "GlobalFree",
        "HeapAlloc",
        "HeapDestroy",
        "HeapFree",
        "HeapReAlloc",
        "HeapSize",
        "InitializeCriticalSection",
        "LeaveCriticalSection",
        "LoadLibraryExW",
        "LoadResource",
        "LocalAlloc",
        "MultiByteToWideChar",
        "OutputDebugStringA",
        "QueryPerformanceCounter",
        "RaiseException",
        "ReleaseSRWLockExclusive",
        "SetThreadLocale",
        "SetUnhandledExceptionFilter",
        "SizeofResource",
        "Sleep",
        "TerminateProcess",
        "UnhandledExceptionFilter",
        "WaitForSingleObject",
        "WaitForSingleObjectEx",
        "lstrcmpiW"
      ]
    },
    {
      "lib": "nlaapi.dll",
      "count": 8,
      "functions": [
        "NlaAddToTypeSet",
        "NlaCloseQuery",
        "NlaCreateTypeSet",
        "NlaDeleteDataSet",
        "NlaDeleteTypeSet",
        "NlaOpenQuery",
        "NlaQueryNetData",
        "NlaQueryNetSignatures"
      ]
    },
    {
      "lib": "advapi32.dll",
      "count": 21,
      "functions": [
        "CreateProcessWithTokenW",
        "DuplicateTokenEx",
        "EventActivityIdControl",
        "EventProviderEnabled",
        "EventRegister",
        "EventSetInformation",
        "EventUnregister",
        "EventWrite",
        "EventWriteTransfer",
        "GetLengthSid",
        "GetTokenInformation",
        "IsValidSid",
        "OpenThreadToken",
        "RegCloseKey",
        "RegCreateKeyExW",
        "RegDeleteValueW",
        "RegEnumKeyExW",
        "RegOpenKeyExW",
        "RegQueryInfoKeyW",
        "RegSetValueExW",
        "SetThreadToken"
      ]
    },
    {
      "lib": "msvcrt.dll",
      "count": 30,
      "functions": [
        "_XcptFilter",
        "__C_specific_handler",
        "__dllonexit",
        "_amsg_exit",
        "_callnewh",
        "_errno",
        "_initterm",
        "_lock",
        "_onexit",
        "_purecall",
        "_unlock",
        "_vscwprintf",
        "_vsnwprintf",
        "_wtoi",
        "free",
        "iswdigit",
        "malloc",
        "memcpy",
        "memcpy_s",
        "memmove",
        "memset",
        "realloc",
        "toupper",
        "vswprintf_s",
        "wcscat_s",
        "wcscmp",
        "wcscpy_s",
        "wcsncmp",
        "wcsncpy_s",
        "wcsnlen"
      ]
    },
    {
      "lib": "shlwapi.dll",
      "count": 1,
      "functions": [
        "PathIsUNCW"
      ]
    },
    {
      "lib": "winhttp.dll",
      "count": 14,
      "functions": [
        "WinHttpCloseHandle",
        "WinHttpConnect",
        "WinHttpCrackUrl",
        "WinHttpDetectAutoProxyConfigUrl",
        "WinHttpGetDefaultProxyConfiguration",
        "WinHttpGetIEProxyConfigForCurrentUser",
        "WinHttpGetProxyForUrl",
        "WinHttpOpen",
        "WinHttpOpenRequest",
        "WinHttpQueryHeaders",
        "WinHttpReceiveResponse",
        "WinHttpSendRequest",
        "WinHttpSetOption",
        "WinHttpSetStatusCallback"
      ]
    },
    {
      "lib": "ntdll.dll",
      "count": 7,
      "functions": [
        "RtlCaptureContext",
        "RtlIpv4StringToAddressExW",
        "RtlIpv4StringToAddressW",
        "RtlIpv6StringToAddressExW",
        "RtlIpv6StringToAddressW",
        "RtlLookupFunctionEntry",
        "RtlVirtualUnwind"
      ]
    }
  ],
  "exports": {
    "count": 6,
    "functions": [
      "DllCanUnloadNow",
      "DllGetClassObject",
      "DllRegisterServer",
      "DllUnregisterServer",
      "ForceProxyDetectionOnNextRun",
      "SetAutoDetectProxyFlagForUser"
    ]
  },
  "hashes": {
    "sha2": "349f86fa3af355de73093d329de8f19fcc1e215c0ffc5b94f5286fcb50c0ddcf",
    "ssdeep": "1536:/YNLQQ4D8YuvCLFPQRy5RXUIJHMTqlyAx0oE1/FzeG0KLSAn/EMdhRfuvbW6:ygGoUIhMee/FzeGd7/xh2vbW6"
  },
  "intent": {
    "intentions": 10,
    "uniq_apis_matched": 18,
    "results": [
      {
        "intent": "Queries And Discovers Windows Registry Configuration Settings",
        "tag": "Discovery:T1012 - Query Registry",
        "component": "Registry",
        "inputs": 11,
        "matches": 1,
        "apis": [
          "RegQueryInfoKeyW"
        ]
      },
      {
        "intent": "Can Create/Manipulate The Windows Registry",
        "tag": "Expert Input:IBO.008 - Create/Manipulate The Windows Registry",
        "component": "Registry",
        "inputs": 33,
        "matches": 4,
        "apis": [
          "RegCreateKeyExW",
          "RegDeleteValueW",
          "RegOpenKeyExW",
          "RegSetValueExW"
        ]
      },
      {
        "intent": "Can Terminate Processes On The Target System",
        "tag": "Expert Input:IBO.0025",
        "component": "Processes",
        "inputs": 1,
        "matches": 1,
        "apis": [
          "TerminateProcess"
        ]
      },
      {
        "intent": "Connects Over HTTP, HTTPS To Download Content On The Target System",
        "tag": "Command And Control:T1105 - Ingress Tool Transfer",
        "component": "Networking",
        "inputs": 21,
        "matches": 5,
        "apis": [
          "InternetCrackUrlW",
          "WinHttpConnect",
          "WinHttpGetProxyForUrl",
          "WinHttpOpenRequest",
          "WinHttpSendRequest"
        ]
      },
      {
        "intent": "Can Conduct DNS Queries",
        "tag": "Expert Input:IBO.0014 - Network Layer-7 DNS Usage",
        "component": "Networking",
        "inputs": 31,
        "matches": 1,
        "apis": [
          "GetAddrInfoW"
        ]
      },
      {
        "intent": "Executes Application with Token Of Another Identity",
        "tag": "Privilege Escalation:T1134.002 - Create Process With Token",
        "component": "Identities",
        "inputs": 2,
        "matches": 1,
        "apis": [
          "CreateProcessWithTokenW"
        ]
      },
      {
        "intent": "Can Enumerate The Windows Registry",
        "tag": "Expert Input:IBO.009 - Enumerate The Windows Registry",
        "component": "Registry",
        "inputs": 6,
        "matches": 1,
        "apis": [
          "RegEnumKeyExW"
        ]
      },
      {
        "intent": "Creates Token To Impersonate",
        "tag": "Privilege Escalation:T1134.003 - Make and Impersonate Token",
        "component": "Privileges",
        "inputs": 2,
        "matches": 1,
        "apis": [
          "SetThreadToken"
        ]
      },
      {
        "intent": "Can Discover Network Proxy Configuration",
        "tag": "Expert Input:IBO.0017 - Network Layer-7 HTTP",
        "component": "Networking",
        "inputs": 2,
        "matches": 2,
        "apis": [
          "WinHttpGetDefaultProxyConfiguration",
          "WinHttpGetIEProxyConfigForCurrentUser"
        ]
      },
      {
        "intent": "Can Access And Read Windows Tokens",
        "tag": "Expert Input:IBO.0020 - Windows Token Access",
        "component": "Privileges",
        "inputs": 4,
        "matches": 1,
        "apis": [
          "OpenThreadToken"
        ]
      }
    ]
  },
  "os": "win10"
}