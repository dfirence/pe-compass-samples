{
  "name": "vpnclientpsprovider.dll",
  "path": "\\\\?\\C:\\Windows\\System32\\wbem\\vpnclientpsprovider.dll",
  "size": 638976,
  "is_64": true,
  "is_lib": true,
  "is_dotnet": false,
  "has_imports": true,
  "has_exports": true,
  "subsystem": 3,
  "subsystem_caption": "The Windows Character (Console UI) Subsystem",
  "libs": [
    "advapi32.dll",
    "api-ms-win-core-com-l1-1-0.dll",
    "crypt32.dll",
    "dnsapi.dll",
    "eappcfg.dll",
    "kernel32.dll",
    "mi.dll",
    "msvcrt.dll",
    "netutils.dll",
    "ntdll.dll",
    "oleaut32.dll",
    "rasapi32.dll",
    "shell32.dll",
    "user32.dll",
    "wkscli.dll",
    "ws2_32.dll"
  ],
  "imports": [
    {
      "lib": "user32.dll",
      "count": 2,
      "functions": [
        "GetUserObjectSecurity",
        "LoadStringW"
      ]
    },
    {
      "lib": "api-ms-win-core-com-l1-1-0.dll",
      "count": 6,
      "functions": [
        "CoCreateInstance",
        "CoCreateInstanceEx",
        "CoInitializeEx",
        "CoTaskMemFree",
        "CoUninitialize",
        "StringFromGUID2"
      ]
    },
    {
      "lib": "rasapi32.dll",
      "count": 19,
      "functions": [
        "GetAutoTriggerProfileInfo",
        "IsActiveAutoTriggerConnection",
        "RasDeleteEntryW",
        "RasEnumConnectionsW",
        "RasEnumEntriesW",
        "RasFreeEntryAdvancedProperties",
        "RasGetAutoTriggerConnectStatus",
        "RasGetConnectStatusW",
        "RasGetCustomAuthDataW",
        "RasGetEntryAdvancedProperties",
        "RasGetEntryHrasconnW",
        "RasGetEntryPropertiesW",
        "RasGetErrorStringW",
        "RasGetNapStatus",
        "RasSetCredentialsW",
        "RasSetCustomAuthDataW",
        "RasSetEntryAdvancedProperties",
        "RasSetEntryPropertiesW",
        "RasValidateEntryNameW"
      ]
    },
    {
      "lib": "advapi32.dll",
      "count": 31,
      "functions": [
        "AddAccessAllowedAce",
        "AddAce",
        "ConvertSidToStringSidW",
        "CopySid",
        "CreateWellKnownSid",
        "DuplicateToken",
        "DuplicateTokenEx",
        "EventRegister",
        "EventUnregister",
        "EventWriteTransfer",
        "GetAce",
        "GetAclInformation",
        "GetLengthSid",
        "GetSecurityDescriptorDacl",
        "GetTokenInformation",
        "GetTraceEnableFlags",
        "GetTraceEnableLevel",
        "GetTraceLoggerHandle",
        "ImpersonateLoggedOnUser",
        "InitializeAcl",
        "InitializeSecurityDescriptor",
        "OpenProcessToken",
        "OpenThreadToken",
        "RegCloseKey",
        "RegGetValueW",
        "RegOpenKeyExW",
        "RegisterTraceGuidsW",
        "RevertToSelf",
        "SetSecurityDescriptorDacl",
        "TraceMessage",
        "UnregisterTraceGuids"
      ]
    },
    {
      "lib": "mi.dll",
      "count": 1,
      "functions": [
        "mi_clientFT_V1"
      ]
    },
    {
      "lib": "kernel32.dll",
      "count": 39,
      "functions": [
        "CloseHandle",
        "DelayLoadFailureHook",
        "DeleteCriticalSection",
        "DisableThreadLibraryCalls",
        "EnterCriticalSection",
        "ExpandEnvironmentStringsW",
        "FormatMessageW",
        "FreeLibrary",
        "GetCurrentProcess",
        "GetCurrentProcessId",
        "GetCurrentThread",
        "GetCurrentThreadId",
        "GetLastError",
        "GetProcAddress",
        "GetProcessHeap",
        "GetSystemDirectoryW",
        "GetSystemTimeAsFileTime",
        "GetThreadPreferredUILanguages",
        "GetTickCount",
        "HeapAlloc",
        "HeapFree",
        "InitializeCriticalSectionEx",
        "LeaveCriticalSection",
        "LoadLibraryExW",
        "LocalFree",
        "LocaleNameToLCID",
        "PackageNameAndPublisherIdFromFamilyName",
        "QueryPerformanceCounter",
        "ResolveDelayLoadedAPI",
        "RtlCaptureContext",
        "RtlLookupFunctionEntry",
        "RtlVirtualUnwind",
        "SetThreadPreferredUILanguages",
        "SetUnhandledExceptionFilter",
        "Sleep",
        "TerminateProcess",
        "UnhandledExceptionFilter",
        "WideCharToMultiByte",
        "lstrcmpiW"
      ]
    },
    {
      "lib": "ws2_32.dll",
      "count": 2,
      "functions": [
        "InetNtopW",
        "InetPtonW"
      ]
    },
    {
      "lib": "dnsapi.dll",
      "count": 1,
      "functions": [
        "DnsValidateName_W"
      ]
    },
    {
      "lib": "msvcrt.dll",
      "count": 38,
      "functions": [
        "??0exception@@QEAA@AEBQEBD@Z",
        "??0exception@@QEAA@AEBQEBDH@Z",
        "??0exception@@QEAA@AEBV0@@Z",
        "??1exception@@UEAA@XZ",
        "??1type_info@@UEAA@XZ",
        "??3@YAXPEAX@Z",
        "??_V@YAXPEAX@Z",
        "?terminate@@YAXXZ",
        "?what@exception@@UEBAPEBDXZ",
        "_CxxThrowException",
        "_XcptFilter",
        "__C_specific_handler",
        "__CxxFrameHandler3",
        "__dllonexit",
        "_amsg_exit",
        "_callnewh",
        "_errno",
        "_initterm",
        "_lock",
        "_onexit",
        "_unlock",
        "_vsnwprintf",
        "_wcsdup",
        "_wcsicmp",
        "_wtoi",
        "free",
        "iswdigit",
        "malloc",
        "memcpy",
        "memcpy_s",
        "memmove",
        "memset",
        "swprintf_s",
        "wcscat_s",
        "wcschr",
        "wcscpy_s",
        "wcsncmp",
        "wcstok_s"
      ]
    },
    {
      "lib": "netutils.dll",
      "count": 1,
      "functions": [
        "NetApiBufferFree"
      ]
    },
    {
      "lib": "ntdll.dll",
      "count": 3,
      "functions": [
        "RtlIpv4AddressToStringW",
        "RtlIpv4StringToAddressW",
        "RtlIpv6StringToAddressW"
      ]
    },
    {
      "lib": "eappcfg.dll",
      "count": 6,
      "functions": [
        "EapHostPeerConfigBlob2Xml",
        "EapHostPeerConfigXml2Blob",
        "EapHostPeerCreateMethodConfiguration",
        "EapHostPeerFreeErrorMemory",
        "EapHostPeerFreeMemory",
        "EapHostPeerGetMethods"
      ]
    },
    {
      "lib": "oleaut32.dll",
      "count": 5,
      "functions": [
        "ORDINAL 2",
        "ORDINAL 6",
        "ORDINAL 7",
        "ORDINAL 8",
        "ORDINAL 9"
      ]
    },
    {
      "lib": "shell32.dll",
      "count": 1,
      "functions": [
        "SHGetKnownFolderPath"
      ]
    },
    {
      "lib": "crypt32.dll",
      "count": 7,
      "functions": [
        "CertCloseStore",
        "CertCreateCertificateContext",
        "CertFindCertificateInStore",
        "CertFreeCertificateContext",
        "CertGetCertificateContextProperty",
        "CertOpenStore",
        "CryptFindOIDInfo"
      ]
    },
    {
      "lib": "wkscli.dll",
      "count": 1,
      "functions": [
        "NetGetJoinInformation"
      ]
    }
  ],
  "exports": {
    "count": 7,
    "functions": [
      "DllCanUnloadNow",
      "DllGetClassObject",
      "DllMain",
      "DllRegisterServer",
      "DllUnregisterServer",
      "GetProviderClassID",
      "MI_Main"
    ]
  },
  "hashes": {
    "sha2": "d915ba9853a7b2bdf7ce9656083b7383a1e8f2c0fa1ec01e90451013a50efea3",
    "ssdeep": "12288:1uc8KM4KlKlBk5Dx9Kbl22cDiJaZsF8PopP7q58Yd:Dc5Dik2cDizFcotm58Y"
  },
  "intent": {
    "intentions": 9,
    "uniq_apis_matched": 16,
    "results": [
      {
        "intent": "Can Work With The TCP Network Protocol",
        "tag": "Expert Input:IBO.0012 - Network TCP Sockets",
        "component": "Networking",
        "inputs": 15,
        "matches": 2,
        "apis": [
          "InetNtopW",
          "InetPtonW"
        ]
      },
      {
        "intent": "Can Manipulate Access Control Mechanisms",
        "tag": "Expert Input:IBO.0021 - Windows Access Control Lists",
        "component": "Privileges",
        "inputs": 15,
        "matches": 4,
        "apis": [
          "AddAccessAllowedAce",
          "AddAce",
          "InitializeAcl",
          "SetSecurityDescriptorDacl"
        ]
      },
      {
        "intent": "Can Create/Manipulate The Windows Registry",
        "tag": "Expert Input:IBO.008 - Create/Manipulate The Windows Registry",
        "component": "Registry",
        "inputs": 33,
        "matches": 1,
        "apis": [
          "RegOpenKeyExW"
        ]
      },
      {
        "intent": "Can Terminate Processes On The Target System",
        "tag": "Expert Input:IBO.0025",
        "component": "Processes",
        "inputs": 1,
        "matches": 1,
        "apis": [
          "TerminateProcess"
        ]
      },
      {
        "intent": "Can Access And Read Windows Tokens",
        "tag": "Expert Input:IBO.0020 - Windows Token Access",
        "component": "Privileges",
        "inputs": 4,
        "matches": 2,
        "apis": [
          "OpenProcessToken",
          "OpenThreadToken"
        ]
      },
      {
        "intent": "Queries And Discovers Windows Registry Configuration Settings",
        "tag": "Discovery:T1012 - Query Registry",
        "component": "Registry",
        "inputs": 11,
        "matches": 1,
        "apis": [
          "RegGetValueW"
        ]
      },
      {
        "intent": "Can Delay Loading of DLLs Until Runtime/Process Execution",
        "tag": "Expert Input:IBO.005 - Load DLL Resources With Delay During Runtime",
        "component": "Memory",
        "inputs": 2,
        "matches": 2,
        "apis": [
          "DelayLoadFailureHook",
          "ResolveDelayLoadedAPI"
        ]
      },
      {
        "intent": "Steals Tokens To Impersonate Windows Identities",
        "tag": "Privilege Escalation:T1134.001 - Token Impersonation/Theft",
        "component": "Privileges",
        "inputs": 5,
        "matches": 2,
        "apis": [
          "DuplicateToken",
          "ImpersonateLoggedOnUser"
        ]
      },
      {
        "intent": "Can Conduct DNS Queries",
        "tag": "Expert Input:IBO.0014 - Network Layer-7 DNS Usage",
        "component": "Networking",
        "inputs": 31,
        "matches": 1,
        "apis": [
          "DnsValidateName_W"
        ]
      }
    ]
  },
  "os": "win10"
}