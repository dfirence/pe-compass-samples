{
  "name": "omadmagent.dll",
  "path": "\\\\?\\C:\\Windows\\System32\\OmaDmAgent.dll",
  "size": 211456,
  "is_64": true,
  "is_lib": true,
  "is_dotnet": false,
  "has_imports": true,
  "has_exports": true,
  "subsystem": 3,
  "subsystem_caption": "The Windows Character (Console UI) Subsystem",
  "libs": [
    "advapi32.dll",
    "api-ms-win-core-winrt-error-l1-1-0.dll",
    "api-ms-win-core-winrt-l1-1-0.dll",
    "api-ms-win-core-winrt-string-l1-1-0.dll",
    "dmcmnutils.dll",
    "dmenrollengine.dll",
    "kernel32.dll",
    "mdmregistration.dll",
    "mi.dll",
    "msvcp110_win.dll",
    "msvcrt.dll",
    "ole32.dll",
    "oleaut32.dll",
    "omadmapi.dll",
    "rpcrt4.dll",
    "shell32.dll",
    "shlwapi.dll",
    "sppc.dll",
    "urlmon.dll",
    "wsclient.dll",
    "wtsapi32.dll"
  ],
  "imports": [
    {
      "lib": "api-ms-win-core-winrt-error-l1-1-0.dll",
      "count": 2,
      "functions": [
        "RoOriginateError",
        "RoTransformError"
      ]
    },
    {
      "lib": "urlmon.dll",
      "count": 1,
      "functions": [
        "IsValidURL"
      ]
    },
    {
      "lib": "wtsapi32.dll",
      "count": 1,
      "functions": [
        "WTSQueryUserToken"
      ]
    },
    {
      "lib": "dmenrollengine.dll",
      "count": 3,
      "functions": [
        "GetEnrollmentSID",
        "GetEnrollmentType",
        "ORDINAL 10"
      ]
    },
    {
      "lib": "api-ms-win-core-winrt-l1-1-0.dll",
      "count": 4,
      "functions": [
        "RoActivateInstance",
        "RoGetActivationFactory",
        "RoInitialize",
        "RoUninitialize"
      ]
    },
    {
      "lib": "api-ms-win-core-winrt-string-l1-1-0.dll",
      "count": 4,
      "functions": [
        "WindowsCreateString",
        "WindowsCreateStringReference",
        "WindowsDeleteString",
        "WindowsGetStringRawBuffer"
      ]
    },
    {
      "lib": "advapi32.dll",
      "count": 27,
      "functions": [
        "CheckTokenMembership",
        "ConvertSidToStringSidW",
        "CopySid",
        "CreateProcessAsUserW",
        "EventRegister",
        "EventSetInformation",
        "EventUnregister",
        "EventWriteTransfer",
        "GetLengthSid",
        "GetTokenInformation",
        "ImpersonateLoggedOnUser",
        "OpenProcessToken",
        "OpenThreadToken",
        "RegCloseKey",
        "RegCreateKeyExW",
        "RegDeleteKeyExW",
        "RegDeleteValueW",
        "RegEnumKeyExW",
        "RegEnumValueW",
        "RegGetValueW",
        "RegOpenCurrentUser",
        "RegOpenKeyExW",
        "RegQueryInfoKeyW",
        "RegQueryValueExW",
        "RegSetValueExW",
        "RevertToSelf",
        "TraceMessage"
      ]
    },
    {
      "lib": "mdmregistration.dll",
      "count": 2,
      "functions": [
        "IsDeviceRegisteredWithManagement",
        "UnregisterDeviceWithManagement"
      ]
    },
    {
      "lib": "dmcmnutils.dll",
      "count": 6,
      "functions": [
        "DmGetActiveUserSid",
        "DmGetCurrentUserSid",
        "DmGetUserTokenFromSid",
        "DmImpersonate",
        "DmRevertToSelf",
        "OmaDmRegistryGetDWORD"
      ]
    },
    {
      "lib": "msvcp110_win.dll",
      "count": 34,
      "functions": [
        "??0?$basic_ios@DU?$char_traits@D@std@@@std@@IEAA@XZ",
        "??0?$basic_istream@DU?$char_traits@D@std@@@std@@QEAA@PEAV?$basic_streambuf@DU?$char_traits@D@std@@@1@_N@Z",
        "??0?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAA@XZ",
        "??0_Lockit@std@@QEAA@H@Z",
        "??1?$basic_ios@DU?$char_traits@D@std@@@std@@UEAA@XZ",
        "??1?$basic_istream@DU?$char_traits@D@std@@@std@@UEAA@XZ",
        "??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UEAA@XZ",
        "??1_Lockit@std@@QEAA@XZ",
        "??Bid@locale@std@@QEAA_KXZ",
        "?_Add_vtordisp1@?$basic_istream@DU?$char_traits@D@std@@@std@@UEAAXXZ",
        "?_Add_vtordisp2@?$basic_ios@DU?$char_traits@D@std@@@std@@UEAAXXZ",
        "?_BADOFF@std@@3_JB",
        "?_Fiopen@std@@YAPEAU_iobuf@@PEBGHH@Z",
        "?_Getcat@?$codecvt@DDH@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z",
        "?_Getgloballocale@locale@std@@CAPEAV_Locimp@12@XZ",
        "?_Gndec@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAPEADXZ",
        "?_Init@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAXXZ",
        "?_Lock@?$basic_streambuf@DU?$char_traits@D@std@@@std@@UEAAXXZ",
        "?_Syserror_map@std@@YAPEBDH@Z",
        "?_Unlock@?$basic_streambuf@DU?$char_traits@D@std@@@std@@UEAAXXZ",
        "?_Winerror_map@std@@YAPEBDH@Z",
        "?_Xbad_alloc@std@@YAXXZ",
        "?_Xlength_error@std@@YAXPEBD@Z",
        "?_Xout_of_range@std@@YAXPEBD@Z",
        "?always_noconv@codecvt_base@std@@QEBA_NXZ",
        "?getloc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEBA?AVlocale@2@XZ",
        "?id@?$codecvt@DDH@std@@2V0locale@2@A",
        "?in@?$codecvt@DDH@std@@QEBAHAEAHPEBD1AEAPEBDPEAD3AEAPEAD@Z",
        "?out@?$codecvt@DDH@std@@QEBAHAEAHPEBD1AEAPEBDPEAD3AEAPEAD@Z",
        "?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z",
        "?showmanyc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAA_JXZ",
        "?unshift@?$codecvt@DDH@std@@QEBAHAEAHPEAD1AEAPEAD@Z",
        "?xsgetn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAA_JPEAD_J@Z",
        "?xsputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAA_JPEBD_J@Z"
      ]
    },
    {
      "lib": "wsclient.dll",
      "count": 3,
      "functions": [
        "WSLicenseClose",
        "WSLicenseInstallLicense",
        "WSLicenseOpen"
      ]
    },
    {
      "lib": "rpcrt4.dll",
      "count": 3,
      "functions": [
        "RpcStringFreeW",
        "UuidFromStringW",
        "UuidToStringW"
      ]
    },
    {
      "lib": "sppc.dll",
      "count": 5,
      "functions": [
        "SLClose",
        "SLGetLicensingStatusInformation",
        "SLGetProductSkuInformation",
        "SLGetSLIDList",
        "SLOpen"
      ]
    },
    {
      "lib": "kernel32.dll",
      "count": 58,
      "functions": [
        "AcquireSRWLockExclusive",
        "AcquireSRWLockShared",
        "CloseHandle",
        "CreateEventW",
        "CreateFileW",
        "CreateMutexExW",
        "CreateSemaphoreExW",
        "CreateThread",
        "DebugBreak",
        "DeleteCriticalSection",
        "DeleteFileW",
        "DisableThreadLibraryCalls",
        "EnterCriticalSection",
        "ExpandEnvironmentStringsW",
        "FormatMessageW",
        "GetCurrentProcess",
        "GetCurrentProcessId",
        "GetCurrentThread",
        "GetCurrentThreadId",
        "GetLastError",
        "GetModuleFileNameA",
        "GetModuleHandleExW",
        "GetModuleHandleW",
        "GetProcAddress",
        "GetProcessHeap",
        "GetSystemDirectoryW",
        "GetSystemTimeAsFileTime",
        "GetTickCount",
        "HeapAlloc",
        "HeapFree",
        "InitializeCriticalSection",
        "InitializeSRWLock",
        "IsDebuggerPresent",
        "LeaveCriticalSection",
        "LocalAlloc",
        "LocalFree",
        "OpenSemaphoreW",
        "OutputDebugStringW",
        "QueryPerformanceCounter",
        "RaiseException",
        "ReleaseMutex",
        "ReleaseSRWLockExclusive",
        "ReleaseSRWLockShared",
        "ReleaseSemaphore",
        "RtlCaptureContext",
        "RtlLookupFunctionEntry",
        "RtlVirtualUnwind",
        "SetEvent",
        "SetLastError",
        "SetUnhandledExceptionFilter",
        "Sleep",
        "TerminateProcess",
        "UnhandledExceptionFilter",
        "WTSGetActiveConsoleSessionId",
        "WaitForSingleObject",
        "WaitForSingleObjectEx",
        "WideCharToMultiByte",
        "WriteFile"
      ]
    },
    {
      "lib": "msvcrt.dll",
      "count": 53,
      "functions": [
        "??0bad_cast@@QEAA@AEBV0@@Z",
        "??0bad_cast@@QEAA@PEBD@Z",
        "??0exception@@QEAA@AEBV0@@Z",
        "??0exception@@QEAA@XZ",
        "??1bad_cast@@UEAA@XZ",
        "??1exception@@UEAA@XZ",
        "??1type_info@@UEAA@XZ",
        "??3@YAXPEAX@Z",
        "??_V@YAXPEAX@Z",
        "?terminate@@YAXXZ",
        "_CxxThrowException",
        "_XcptFilter",
        "__C_specific_handler",
        "__CxxFrameHandler3",
        "__dllonexit",
        "_amsg_exit",
        "_callnewh",
        "_fseeki64",
        "_initterm",
        "_lock",
        "_onexit",
        "_purecall",
        "_snwprintf_s",
        "_unlock",
        "_vsnprintf_s",
        "_vsnwprintf",
        "_wcsicmp",
        "_wcsnicmp",
        "_wtoi",
        "fclose",
        "fflush",
        "fgetc",
        "fgetpos",
        "fputc",
        "free",
        "fsetpos",
        "fwrite",
        "malloc",
        "memcpy",
        "memcpy_s",
        "memmove",
        "memmove_s",
        "memset",
        "realloc",
        "setvbuf",
        "toupper",
        "towlower",
        "ungetc",
        "wcscmp",
        "wcscpy_s",
        "wcsncmp",
        "wcstol",
        "wcstoul"
      ]
    },
    {
      "lib": "ole32.dll",
      "count": 10,
      "functions": [
        "CLSIDFromString",
        "CoCreateGuid",
        "CoCreateInstance",
        "CoGetApartmentType",
        "CoInitializeEx",
        "CoSetProxyBlanket",
        "CoTaskMemAlloc",
        "CoTaskMemFree",
        "CoUninitialize",
        "StringFromGUID2"
      ]
    },
    {
      "lib": "oleaut32.dll",
      "count": 2,
      "functions": [
        "ORDINAL 2",
        "ORDINAL 6"
      ]
    },
    {
      "lib": "mi.dll",
      "count": 1,
      "functions": [
        "MI_Application_InitializeV1"
      ]
    },
    {
      "lib": "omadmapi.dll",
      "count": 2,
      "functions": [
        "ORDINAL 34",
        "ORDINAL 44"
      ]
    },
    {
      "lib": "shell32.dll",
      "count": 3,
      "functions": [
        "SHCreateDirectoryExW",
        "SHGetFolderPathW",
        "SHGetSpecialFolderPathW"
      ]
    },
    {
      "lib": "shlwapi.dll",
      "count": 2,
      "functions": [
        "SHCreateStreamOnFileEx",
        "UrlUnescapeW"
      ]
    }
  ],
  "exports": {
    "count": 2,
    "functions": [
      "OmaDmRunPostSessionWork",
      "ResourceManagerUninstallWmiApp"
    ]
  },
  "hashes": {
    "sha2": "685dc66adeca3f48ca8df278eeb49abe8b7445deb42366da3118034cef2c8f4f",
    "ssdeep": "6144:9ZUcJDBOJasRS4MyRfUMriZFZ8Wd+T3W:wKCS4tNEBd+6"
  },
  "intent": {
    "intentions": 8,
    "uniq_apis_matched": 18,
    "results": [
      {
        "intent": "Can Execute or Spawn New Processes On The Target System As Another User Identity",
        "tag": "Expert Input:IBO.0003 - Spawn New Process As Different User",
        "component": "Processes",
        "inputs": 2,
        "matches": 1,
        "apis": [
          "CreateProcessAsUserW"
        ]
      },
      {
        "intent": "Can Create/Manipulate The Windows Registry",
        "tag": "Expert Input:IBO.0008 - Create/Manipulate The Windows Registry",
        "component": "Registry",
        "inputs": 33,
        "matches": 6,
        "apis": [
          "RegCreateKeyExW",
          "RegDeleteKeyExW",
          "RegDeleteValueW",
          "RegOpenCurrentUser",
          "RegOpenKeyExW",
          "RegSetValueExW"
        ]
      },
      {
        "intent": "Can Terminate Processes On The Target System",
        "tag": "Expert Input:IBO.0025",
        "component": "---",
        "inputs": 1,
        "matches": 1,
        "apis": [
          "TerminateProcess"
        ]
      },
      {
        "intent": "Deletes Files From Disk Potentially Erasing Important Evidence To Cover Attack Activity",
        "tag": "Defense Evasion:T1070.004 - File Deletion",
        "component": "Filesystem",
        "inputs": 2,
        "matches": 1,
        "apis": [
          "DeleteFileW"
        ]
      },
      {
        "intent": "Steals Tokens To Impersonate Windows Identities",
        "tag": "Privilege Escalation:T1134.001 - Token Impersonation/Theft",
        "component": "Privileges",
        "inputs": 5,
        "matches": 1,
        "apis": [
          "ImpersonateLoggedOnUser"
        ]
      },
      {
        "intent": "Can Enumerate The Windows Registry",
        "tag": "Expert Input:IBO.0009 - Enumerate The Windows Registry",
        "component": "Registry",
        "inputs": 6,
        "matches": 2,
        "apis": [
          "RegEnumKeyExW",
          "RegEnumValueW"
        ]
      },
      {
        "intent": "Queries And Discovers Windows Registry Configuration Settings",
        "tag": "Discovery:T1012 - Query Registry",
        "component": "Registry",
        "inputs": 11,
        "matches": 3,
        "apis": [
          "RegGetValueW",
          "RegQueryInfoKeyW",
          "RegQueryValueExW"
        ]
      },
      {
        "intent": "Can Access And Read Windows Tokens",
        "tag": "Expert Input:IBO.00020 - Windows Token Access",
        "component": "Privileges",
        "inputs": 4,
        "matches": 3,
        "apis": [
          "CheckTokenMembership",
          "OpenProcessToken",
          "OpenThreadToken"
        ]
      }
    ]
  }
}