{
  "name": "tcpipcfg.dll",
  "path": "\\\\?\\C:\\Windows\\System32\\tcpipcfg.dll",
  "size": 242688,
  "is_64": true,
  "is_lib": true,
  "is_dotnet": false,
  "has_imports": true,
  "has_exports": true,
  "subsystem": 2,
  "subsystem_caption": "The Windows Graphical User Interface (GUI) Subsystem",
  "libs": [
    "advapi32.dll",
    "api-ms-win-core-com-l1-1-0.dll",
    "api-ms-win-core-string-l2-1-0.dll",
    "dhcpcsvc.dll",
    "dnsapi.dll",
    "gdi32.dll",
    "iphlpapi.dll",
    "kernel32.dll",
    "msvcrt.dll",
    "netsetupapi.dll",
    "nsi.dll",
    "ntdll.dll",
    "oleaut32.dll",
    "rpcrt4.dll",
    "shell32.dll",
    "winnsi.dll"
  ],
  "imports": [
    {
      "lib": "ntdll.dll",
      "count": 7,
      "functions": [
        "RtlCaptureContext",
        "RtlIpv4AddressToStringW",
        "RtlIpv4StringToAddressExW",
        "RtlIpv6AddressToStringW",
        "RtlLookupFunctionEntry",
        "RtlVirtualUnwind",
        "WinSqmSetDWORD"
      ]
    },
    {
      "lib": "winnsi.dll",
      "count": 1,
      "functions": [
        "NsiRpcSetAllParameters"
      ]
    },
    {
      "lib": "advapi32.dll",
      "count": 41,
      "functions": [
        "AddAccessAllowedAceEx",
        "AddAccessDeniedAceEx",
        "AdjustTokenPrivileges",
        "AllocateAndInitializeSid",
        "CloseServiceHandle",
        "ControlService",
        "ConvertSecurityDescriptorToStringSecurityDescriptorW",
        "ConvertSidToStringSidW",
        "ConvertStringSecurityDescriptorToSecurityDescriptorW",
        "ConvertStringSidToSidW",
        "EqualSid",
        "FreeSid",
        "GetAce",
        "GetAclInformation",
        "GetLengthSid",
        "GetSecurityDescriptorControl",
        "GetSecurityDescriptorDacl",
        "GetTokenInformation",
        "InitializeAcl",
        "IsValidAcl",
        "IsValidSid",
        "MakeAbsoluteSD",
        "MakeSelfRelativeSD",
        "OpenProcessToken",
        "OpenSCManagerW",
        "OpenServiceW",
        "OpenThreadToken",
        "QueryServiceStatus",
        "RegCloseKey",
        "RegCreateKeyExW",
        "RegDeleteKeyW",
        "RegDeleteValueW",
        "RegEnumKeyExW",
        "RegGetKeySecurity",
        "RegOpenKeyExW",
        "RegQueryInfoKeyW",
        "RegQueryValueExW",
        "RegRestoreKeyW",
        "RegSetKeySecurity",
        "RegSetValueExW",
        "SetSecurityDescriptorDacl"
      ]
    },
    {
      "lib": "oleaut32.dll",
      "count": 1,
      "functions": [
        "ORDINAL 64"
      ]
    },
    {
      "lib": "rpcrt4.dll",
      "count": 3,
      "functions": [
        "MesEncodeDynBufferHandleCreate",
        "MesHandleFree",
        "NdrMesTypeEncode3"
      ]
    },
    {
      "lib": "netsetupapi.dll",
      "count": 2,
      "functions": [
        "NetSetupFreeObjectProperties",
        "NetSetupGetObjectProperties"
      ]
    },
    {
      "lib": "iphlpapi.dll",
      "count": 21,
      "functions": [
        "ConvertInterfaceGuidToLuid",
        "ConvertInterfaceLuidToIndex",
        "ConvertIpv4MaskToLength",
        "ConvertLengthToIpv4Mask",
        "FreeMibTable",
        "GetAdaptersAddresses",
        "GetIpInterfaceEntry",
        "GetUnicastIpAddressTable",
        "InitializeIpForwardEntry",
        "InitializeIpInterfaceEntry",
        "InitializeUnicastIpAddressEntry",
        "InternalCleanupPersistentStore",
        "InternalCreateIpForwardEntry2",
        "InternalCreateUnicastIpAddressEntry",
        "InternalDeleteIpForwardEntry2",
        "InternalDeleteUnicastIpAddressEntry",
        "InternalGetForwardIpTable2",
        "InternalGetIpForwardEntry2",
        "InternalGetUnicastIpAddressTable",
        "InternalSetIpInterfaceEntry",
        "ParseNetworkString"
      ]
    },
    {
      "lib": "msvcrt.dll",
      "count": 40,
      "functions": [
        "??0exception@@QEAA@AEBQEBD@Z",
        "??0exception@@QEAA@AEBQEBDH@Z",
        "??0exception@@QEAA@AEBV0@@Z",
        "??0exception@@QEAA@XZ",
        "??1exception@@UEAA@XZ",
        "??1type_info@@UEAA@XZ",
        "?terminate@@YAXXZ",
        "?what@exception@@UEBAPEBDXZ",
        "_CxxThrowException",
        "_XcptFilter",
        "__C_specific_handler",
        "__CxxFrameHandler3",
        "_amsg_exit",
        "_callnewh",
        "_initterm",
        "_ltow",
        "_purecall",
        "_vsnwprintf",
        "_wasctime",
        "_wcsicmp",
        "_wtoi",
        "_wtol",
        "free",
        "localtime",
        "malloc",
        "memcpy",
        "memcpy_s",
        "memmove",
        "memmove_s",
        "memset",
        "realloc",
        "swprintf_s",
        "time",
        "wcscat_s",
        "wcschr",
        "wcscmp",
        "wcscpy_s",
        "wcsncpy_s",
        "wcsstr",
        "wcstoul"
      ]
    },
    {
      "lib": "kernel32.dll",
      "count": 66,
      "functions": [
        "AcquireSRWLockExclusive",
        "CloseHandle",
        "CopyFileW",
        "CreateFileW",
        "CreateProcessW",
        "DecodePointer",
        "DelayLoadFailureHook",
        "DeleteCriticalSection",
        "EncodePointer",
        "EnterCriticalSection",
        "FindClose",
        "FindFirstFileW",
        "FindResourceW",
        "FlushInstructionCache",
        "FormatMessageW",
        "FreeLibrary",
        "GetComputerNameW",
        "GetCurrentProcess",
        "GetCurrentProcessId",
        "GetCurrentThread",
        "GetCurrentThreadId",
        "GetLastError",
        "GetModuleFileNameW",
        "GetModuleHandleW",
        "GetProcAddress",
        "GetProcessHeap",
        "GetSystemDirectoryW",
        "GetSystemTimeAsFileTime",
        "GetTempPathW",
        "GetTickCount",
        "GetWindowsDirectoryW",
        "HeapAlloc",
        "HeapDestroy",
        "HeapFree",
        "InitializeCriticalSection",
        "InterlockedPopEntrySList",
        "InterlockedPushEntrySList",
        "LeaveCriticalSection",
        "LoadLibraryExA",
        "LoadLibraryExW",
        "LoadLibraryW",
        "LoadResource",
        "LocalFree",
        "LockResource",
        "MoveFileExW",
        "MultiByteToWideChar",
        "QueryPerformanceCounter",
        "RaiseException",
        "ReleaseSRWLockExclusive",
        "ResolveDelayLoadedAPI",
        "SetComputerNameExW",
        "SetLastError",
        "SetUnhandledExceptionFilter",
        "SizeofResource",
        "Sleep",
        "SleepConditionVariableSRW",
        "TerminateProcess",
        "UnhandledExceptionFilter",
        "VirtualAlloc",
        "VirtualFree",
        "WakeAllConditionVariable",
        "WriteFile",
        "lstrcmpW",
        "lstrcmpiW",
        "lstrcpynW",
        "lstrlenW"
      ]
    },
    {
      "lib": "dnsapi.dll",
      "count": 4,
      "functions": [
        "DnsQueryConfigDword",
        "DnsResolverOp",
        "DnsSetConfigDword",
        "DnsValidateName_W"
      ]
    },
    {
      "lib": "api-ms-win-core-com-l1-1-0.dll",
      "count": 8,
      "functions": [
        "CoCreateGuid",
        "CoInitializeEx",
        "CoTaskMemAlloc",
        "CoTaskMemFree",
        "CoTaskMemRealloc",
        "CoUninitialize",
        "IIDFromString",
        "StringFromGUID2"
      ]
    },
    {
      "lib": "gdi32.dll",
      "count": 1,
      "functions": [
        "DeleteObject"
      ]
    },
    {
      "lib": "nsi.dll",
      "count": 1,
      "functions": [
        "NsiGetAllPersistentParametersWithMask"
      ]
    },
    {
      "lib": "dhcpcsvc.dll",
      "count": 1,
      "functions": [
        "DhcpHandlePnPEvent"
      ]
    },
    {
      "lib": "api-ms-win-core-string-l2-1-0.dll",
      "count": 2,
      "functions": [
        "CharLowerBuffW",
        "CharNextW"
      ]
    },
    {
      "lib": "shell32.dll",
      "count": 1,
      "functions": [
        "InitNetworkAddressControl"
      ]
    }
  ],
  "exports": {
    "count": 4,
    "functions": [
      "DllCanUnloadNow",
      "DllGetClassObject",
      "DllRegisterServer",
      "DllUnregisterServer"
    ]
  },
  "hashes": {
    "sha2": "3409bead916682714ad69a2c9121ba0da0c32014e469713534dc0690d8a8db05",
    "ssdeep": "6144:rJ0/FdUwgmYH8EDwA9IX/SVvqNWhmlWsPw8t:r2/FdMmrEDwA9bZqwhmlHw"
  },
  "intent": {
    "intentions": 14,
    "uniq_apis_matched": 27,
    "results": [
      {
        "intent": "Can Terminate Processes On The Target System",
        "tag": "Expert Input:IBO.0025",
        "component": "Processes",
        "inputs": 1,
        "matches": 1,
        "apis": [
          "TerminateProcess"
        ]
      },
      {
        "intent": "Manipulates Windows Tokens",
        "tag": "Defense Evasion:T1134 - Access Token Manipulation",
        "component": "Privileges",
        "inputs": 4,
        "matches": 1,
        "apis": [
          "AdjustTokenPrivileges"
        ]
      },
      {
        "intent": "Can Create/Manipulate System Services",
        "tag": "Expert Input:IBO.007 - Create/Manipulate System Services",
        "component": "Services",
        "inputs": 19,
        "matches": 2,
        "apis": [
          "CloseServiceHandle",
          "ControlService"
        ]
      },
      {
        "intent": "Can Delay Loading of DLLs Until Runtime/Process Execution",
        "tag": "Expert Input:IBO.005 - Load DLL Resources With Delay During Runtime",
        "component": "Memory",
        "inputs": 2,
        "matches": 2,
        "apis": [
          "DelayLoadFailureHook",
          "ResolveDelayLoadedAPI"
        ]
      },
      {
        "intent": "Can Access And Read Windows Tokens",
        "tag": "Expert Input:IBO.0020 - Windows Token Access",
        "component": "Privileges",
        "inputs": 4,
        "matches": 2,
        "apis": [
          "OpenProcessToken",
          "OpenThreadToken"
        ]
      },
      {
        "intent": "Can Manipulate Access Control Mechanisms",
        "tag": "Expert Input:IBO.0021 - Windows Access Control Lists",
        "component": "Privileges",
        "inputs": 15,
        "matches": 4,
        "apis": [
          "AddAccessAllowedAceEx",
          "AddAccessDeniedAceEx",
          "InitializeAcl",
          "SetSecurityDescriptorDacl"
        ]
      },
      {
        "intent": "Can Execute or Spawn New Processes On The Target System",
        "tag": "Expert Input:IBO.002 - Spawn New Process",
        "component": "Processes",
        "inputs": 7,
        "matches": 1,
        "apis": [
          "CreateProcessW"
        ]
      },
      {
        "intent": "Enumerates Files or Directories on the Target System",
        "tag": "Discovery:T1083 - File and Directory Discovery",
        "component": "Filesystem",
        "inputs": 5,
        "matches": 1,
        "apis": [
          "FindFirstFileW"
        ]
      },
      {
        "intent": "Can Create/Manipulate The Windows Registry",
        "tag": "Expert Input:IBO.008 - Create/Manipulate The Windows Registry",
        "component": "Registry",
        "inputs": 33,
        "matches": 5,
        "apis": [
          "RegCreateKeyExW",
          "RegDeleteKeyW",
          "RegDeleteValueW",
          "RegOpenKeyExW",
          "RegSetValueExW"
        ]
      },
      {
        "intent": "Queries And Discovers Windows Registry Configuration Settings",
        "tag": "Discovery:T1012 - Query Registry",
        "component": "Registry",
        "inputs": 11,
        "matches": 2,
        "apis": [
          "RegQueryInfoKeyW",
          "RegQueryValueExW"
        ]
      },
      {
        "intent": "Can Conduct DNS Queries",
        "tag": "Expert Input:IBO.0014 - Network Layer-7 DNS Usage",
        "component": "Networking",
        "inputs": 31,
        "matches": 1,
        "apis": [
          "DnsValidateName_W"
        ]
      },
      {
        "intent": "Can Enumerate/Discover System Services And Their Configuration Data",
        "tag": "Expert Input:IBO.006 - Enumerate System Services",
        "component": "Services",
        "inputs": 28,
        "matches": 3,
        "apis": [
          "OpenSCManagerW",
          "OpenServiceW",
          "QueryServiceStatus"
        ]
      },
      {
        "intent": "Can Enumerate The Windows Registry",
        "tag": "Expert Input:IBO.009 - Enumerate The Windows Registry",
        "component": "Registry",
        "inputs": 6,
        "matches": 1,
        "apis": [
          "RegEnumKeyExW"
        ]
      },
      {
        "intent": "Discovers Network Settings On The Target System",
        "tag": "Discovery:T1016 - System Network Configuration Discovery",
        "component": "Networking",
        "inputs": 41,
        "matches": 1,
        "apis": [
          "GetAdaptersAddresses"
        ]
      }
    ]
  }
}