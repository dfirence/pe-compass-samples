{
  "name": "mqsec.dll",
  "path": "\\\\?\\C:\\Windows\\WinSxS\\x86_microsoft-windows-msmq-installer_31bf3856ad364e35_10.0.19041.746_none_fcec547ba6a66740\\mqsec.dll",
  "size": 205624,
  "is_64": false,
  "is_lib": true,
  "is_dotnet": true,
  "has_imports": true,
  "has_exports": true,
  "subsystem": 3,
  "subsystem_caption": "The Windows Character (Console UI) Subsystem",
  "libs": [
    "advapi32.dll",
    "crypt32.dll",
    "kernel32.dll",
    "msvcrt.dll",
    "netapi32.dll",
    "normaliz.dll",
    "ntdll.dll",
    "ole32.dll",
    "rpcrt4.dll",
    "secur32.dll",
    "user32.dll"
  ],
  "imports": [
    {
      "lib": "rpcrt4.dll",
      "count": 17,
      "functions": [
        "I_RpcBindingInqLocalClientPID",
        "I_RpcBindingInqTransportType",
        "I_RpcBindingIsClientLocal",
        "RpcBindingFree",
        "RpcBindingFromStringBindingW",
        "RpcBindingSetAuthInfoExW",
        "RpcCancelThread",
        "RpcEpResolveBinding",
        "RpcErrorEndEnumeration",
        "RpcErrorGetNextRecord",
        "RpcErrorStartEnumeration",
        "RpcImpersonateClient",
        "RpcMgmtInqServerPrincNameW",
        "RpcRevertToSelf",
        "RpcStringBindingComposeW",
        "RpcStringFreeW",
        "UuidFromStringW"
      ]
    },
    {
      "lib": "ntdll.dll",
      "count": 3,
      "functions": [
        "RtlCreateServiceSid",
        "RtlImageNtHeader",
        "RtlInitUnicodeString"
      ]
    },
    {
      "lib": "user32.dll",
      "count": 1,
      "functions": [
        "CharLowerW"
      ]
    },
    {
      "lib": "secur32.dll",
      "count": 6,
      "functions": [
        "AcceptSecurityContext",
        "AcquireCredentialsHandleW",
        "DeleteSecurityContext",
        "InitSecurityInterfaceW",
        "QueryContextAttributesW",
        "QuerySecurityPackageInfoW"
      ]
    },
    {
      "lib": "msvcrt.dll",
      "count": 45,
      "functions": [
        "??0exception@@QAE@ABQBD@Z",
        "??0exception@@QAE@ABV0@@Z",
        "??0exception@@QAE@XZ",
        "??1exception@@UAE@XZ",
        "??1type_info@@UAE@XZ",
        "?terminate@@YAXXZ",
        "?what@exception@@UBEPBDXZ",
        "_CxxThrowException",
        "_XcptFilter",
        "__CxxFrameHandler3",
        "___lc_codepage_func",
        "___lc_handle_func",
        "___mb_cur_max_func",
        "__crtGetStringTypeW",
        "__crtLCMapStringA",
        "__crtLCMapStringW",
        "__dllonexit",
        "__mb_cur_max",
        "__pctype_func",
        "__uncaught_exception",
        "_amsg_exit",
        "_errno",
        "_except_handler4_common",
        "_initterm",
        "_lock",
        "_onexit",
        "_purecall",
        "_unlock",
        "_vsnprintf",
        "_vsnwprintf",
        "_wcsicmp",
        "abort",
        "free",
        "islower",
        "isupper",
        "malloc",
        "memcmp",
        "memcpy",
        "memcpy_s",
        "memmove",
        "memmove_s",
        "memset",
        "setlocale",
        "time",
        "wcschr"
      ]
    },
    {
      "lib": "advapi32.dll",
      "count": 87,
      "functions": [
        "AccessCheck",
        "AccessCheckAndAuditAlarmW",
        "AccessCheckByTypeResultList",
        "AddAccessAllowedAce",
        "AddAccessAllowedAceEx",
        "AddAccessAllowedObjectAce",
        "AddAccessDeniedAce",
        "AddAccessDeniedAceEx",
        "AddAccessDeniedObjectAce",
        "AddAuditAccessAce",
        "AddAuditAccessObjectAce",
        "AdjustTokenPrivileges",
        "AllocateAndInitializeSid",
        "AreAllAccessesGranted",
        "CloseServiceHandle",
        "CopySid",
        "CryptAcquireContextW",
        "CryptCreateHash",
        "CryptDestroyHash",
        "CryptDestroyKey",
        "CryptExportKey",
        "CryptGenKey",
        "CryptGetHashParam",
        "CryptGetProvParam",
        "CryptGetUserKey",
        "CryptHashData",
        "CryptReleaseContext",
        "CryptSetProvParam",
        "CryptSignHashW",
        "EqualPrefixSid",
        "EqualSid",
        "FindFirstFreeAce",
        "FreeSid",
        "GetAce",
        "GetLengthSid",
        "GetSecurityDescriptorControl",
        "GetSecurityDescriptorDacl",
        "GetSecurityDescriptorGroup",
        "GetSecurityDescriptorOwner",
        "GetSecurityDescriptorSacl",
        "GetSidIdentifierAuthority",
        "GetSidSubAuthority",
        "GetSidSubAuthorityCount",
        "GetTokenInformation",
        "GetTraceEnableFlags",
        "GetTraceEnableLevel",
        "GetTraceLoggerHandle",
        "ImpersonateAnonymousToken",
        "ImpersonateSelf",
        "InitializeAcl",
        "InitializeSecurityDescriptor",
        "IsValidSecurityDescriptor",
        "IsValidSid",
        "LookupAccountSidW",
        "LookupPrivilegeValueW",
        "MakeAbsoluteSD",
        "MakeSelfRelativeSD",
        "ObjectCloseAuditAlarmW",
        "OpenProcessToken",
        "OpenSCManagerW",
        "OpenServiceW",
        "OpenThreadToken",
        "QueryServiceConfigW",
        "RegCloseKey",
        "RegCreateKeyExA",
        "RegCreateKeyExW",
        "RegDeleteValueW",
        "RegEnumValueW",
        "RegGetKeySecurity",
        "RegOpenKeyExA",
        "RegOpenKeyExW",
        "RegQueryInfoKeyW",
        "RegQueryValueExW",
        "RegSetKeySecurity",
        "RegSetValueExW",
        "RegisterTraceGuidsW",
        "RevertToSelf",
        "SetEntriesInAclW",
        "SetFileSecurityW",
        "SetSecurityDescriptorControl",
        "SetSecurityDescriptorDacl",
        "SetSecurityDescriptorGroup",
        "SetSecurityDescriptorOwner",
        "SetSecurityDescriptorSacl",
        "TraceEvent",
        "TraceMessage",
        "UnregisterTraceGuids"
      ]
    },
    {
      "lib": "netapi32.dll",
      "count": 6,
      "functions": [
        "DsGetDcNameW",
        "DsRoleFreeMemory",
        "DsRoleGetPrimaryDomainInformation",
        "NetApiBufferFree",
        "NetGetJoinInformation",
        "NetUserModalsGet"
      ]
    },
    {
      "lib": "kernel32.dll",
      "count": 53,
      "functions": [
        "AcquireSRWLockExclusive",
        "CloseHandle",
        "CompareStringW",
        "CreateEventW",
        "CreateSemaphoreW",
        "CreateThread",
        "DeleteCriticalSection",
        "EnterCriticalSection",
        "ExpandEnvironmentStringsW",
        "FreeLibrary",
        "FreeLibraryAndExitThread",
        "GetComputerNameExW",
        "GetComputerNameW",
        "GetCurrentProcess",
        "GetCurrentProcessId",
        "GetCurrentThread",
        "GetCurrentThreadId",
        "GetLastError",
        "GetModuleFileNameW",
        "GetProcAddress",
        "GetSystemInfo",
        "GetSystemTime",
        "GetSystemTimeAsFileTime",
        "GetTickCount",
        "GetVersionExW",
        "InitializeCriticalSection",
        "InitializeCriticalSectionAndSpinCount",
        "LeaveCriticalSection",
        "LoadLibraryW",
        "LocalFree",
        "MultiByteToWideChar",
        "OutputDebugStringA",
        "PulseEvent",
        "QueryPerformanceCounter",
        "ReleaseSRWLockExclusive",
        "ReleaseSemaphore",
        "ResetEvent",
        "SetEvent",
        "SetThreadStackGuarantee",
        "SetUnhandledExceptionFilter",
        "Sleep",
        "SleepConditionVariableSRW",
        "SystemTimeToFileTime",
        "TerminateProcess",
        "UnhandledExceptionFilter",
        "VirtualAlloc",
        "VirtualProtect",
        "VirtualQuery",
        "WaitForMultipleObjects",
        "WaitForSingleObject",
        "WakeAllConditionVariable",
        "WideCharToMultiByte",
        "lstrcmpiA"
      ]
    },
    {
      "lib": "ole32.dll",
      "count": 2,
      "functions": [
        "CoInitializeEx",
        "CoUninitialize"
      ]
    },
    {
      "lib": "crypt32.dll",
      "count": 19,
      "functions": [
        "CertAddEncodedCertificateToStore",
        "CertCloseStore",
        "CertCreateCertificateContext",
        "CertDeleteCertificateFromStore",
        "CertDuplicateCertificateContext",
        "CertEnumCertificatesInStore",
        "CertFindCertificateInStore",
        "CertFreeCertificateContext",
        "CertOpenStore",
        "CertOpenSystemStoreW",
        "CertRDNValueToStrW",
        "CertSetCertificateContextProperty",
        "CertVerifySubjectCertificateContext",
        "CertVerifyTimeValidity",
        "CryptDecodeObject",
        "CryptEncodeObject",
        "CryptExportPublicKeyInfo",
        "CryptImportPublicKeyInfo",
        "CryptSignAndEncodeCertificate"
      ]
    },
    {
      "lib": "normaliz.dll",
      "count": 1,
      "functions": [
        "IdnToNameprepUnicode"
      ]
    }
  ],
  "exports": {
    "count": 209,
    "functions": [
      "??0CCancelRpc@@QAE@ABV0@@Z",
      "??0CCancelRpc@@QAE@XZ",
      "??0CColumns@@QAE@ABV0@@Z",
      "??0CColumns@@QAE@I@Z",
      "??0CDSBaseUpdate@@QAE@ABV0@@Z",
      "??0CDSBaseUpdate@@QAE@XZ",
      "??0COutputReport@@QAE@XZ",
      "??0CPropertyRestriction@@QAE@ABV0@@Z",
      "??0CPropertyRestriction@@QAE@KABKABVCMQVariant@@@Z",
      "??0CPropertyRestriction@@QAE@XZ",
      "??0CRestriction@@QAE@ABV0@@Z",
      "??0CRestriction@@QAE@I@Z",
      "??0CSort@@QAE@ABV0@@Z",
      "??0CSort@@QAE@I@Z",
      "??0CSortKey@@QAE@ABKK@Z",
      "??0CSortKey@@QAE@XZ",
      "??1CCancelRpc@@QAE@XZ",
      "??1CColumns@@QAE@XZ",
      "??1CDSBaseUpdate@@QAE@XZ",
      "??1COutputReport@@QAE@XZ",
      "??1CPropertyRestriction@@QAE@XZ",
      "??1CRestriction@@QAE@XZ",
      "??1CSort@@QAE@XZ",
      "??1CSortKey@@QAE@XZ",
      "??4CCancelRpc@@QAEAAV0@ABV0@@Z",
      "??4CDSBaseUpdate@@QAEAAV0@ABV0@@Z",
      "??4COutputReport@@QAEAAV0@$$QAV0@@Z",
      "??4COutputReport@@QAEAAV0@ABV0@@Z",
      "??4CPropertyRestriction@@QAEAAV0@ABV0@@Z",
      "??4CRestriction@@QAEAAV0@ABV0@@Z",
      "??4CSortKey@@QAEAAV0@ABV0@@Z",
      "??_FCColumns@@QAEXXZ",
      "??_FCRestriction@@QAEXXZ",
      "??_FCSort@@QAEXXZ",
      "?Add@CCancelRpc@@QAEXPAXJ@Z",
      "?Add@CColumns@@QAEXABK@Z",
      "?Add@CSort@@QAEXABKK@Z",
      "?Add@CSort@@QAEXABVCSortKey@@@Z",
      "?AddChild@CRestriction@@QAEXABVCPropertyRestriction@@@Z",
      "?AddRestriction@CRestriction@@QAEXAAUtagBLOB@@KK@Z",
      "?AddRestriction@CRestriction@@QAEXABVCMQVariant@@KK@Z",
      "?AddRestriction@CRestriction@@QAEXEKK@Z",
      "?AddRestriction@CRestriction@@QAEXFKK@Z",
      "?AddRestriction@CRestriction@@QAEXJKK@Z",
      "?AddRestriction@CRestriction@@QAEXKKK@Z",
      "?AddRestriction@CRestriction@@QAEXPAU_GUID@@KK@Z",
      "?AddRestriction@CRestriction@@QAEXPAUtagCACLSID@@KK@Z",
      "?AddRestriction@CRestriction@@QAEXPAUtagCALPWSTR@@KK@Z",
      "?AddRestriction@CRestriction@@QAEXPA_WKK@Z",
      "?CancelRequests@CCancelRpc@@QAEXJ@Z",
      "?CancelThread@CCancelRpc@@CGKPAX@Z",
      "?CastToStruct@CColumns@@QAEPAUtagMQCOLUMNSET@@XZ",
      "?CastToStruct@CRestriction@@QAEPAUtagMQRESTRICTION@@XZ",
      "?CastToStruct@CSort@@QAEPAUtagMQSORTSET@@XZ",
      "?CopyProperty@CDSBaseUpdate@@AAEJAAUtagPROPVARIANT@@PAU2@@Z",
      "?Count@CColumns@@QBEIXZ",
      "?Count@CRestriction@@QBEIXZ",
      "?Count@CSort@@QBEIXZ",
      "?DeleteProperty@CDSBaseUpdate@@AAEXAAUtagPROPVARIANT@@@Z",
      "?Get@CColumns@@QBEABKI@Z",
      "?Get@CSort@@QBEABVCSortKey@@I@Z",
      "?GetChild@CRestriction@@QBEABVCPropertyRestriction@@I@Z",
      "?GetCommand@CDSBaseUpdate@@QAEEXZ",
      "?GetFalconSectionName@@YGJAAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator_static@_W@2@V_STL70@@@std@@@Z",
      "?GetGuidIdentifier@CDSBaseUpdate@@QAEPAU_GUID@@XZ",
      "?GetMasterId@CDSBaseUpdate@@QAEPBU_GUID@@XZ",
      "?GetObjectType@CDSBaseUpdate@@QAEKXZ",
      "?GetOrder@CSortKey@@QBEKXZ",
      "?GetPathName@CDSBaseUpdate@@QAEPA_WXZ",
      "?GetPrevSeqNum@CDSBaseUpdate@@QBEABVCSeqNum@@XZ",
      "?GetProperty@CSortKey@@QBEABKXZ",
      "?GetProps@CDSBaseUpdate@@QAEPAKXZ",
      "?GetPurgeSeqNum@CDSBaseUpdate@@QBEABVCSeqNum@@XZ",
      "?GetSeqNum@CDSBaseUpdate@@QBEABVCSeqNum@@XZ",
      "?GetSerializeSize@CDSBaseUpdate@@QAEJPAK@Z",
      "?GetVars@CDSBaseUpdate@@QAEPAUtagPROPVARIANT@@XZ",
      "?Grow@CRestriction@@AAEXXZ",
      "?Init@CCancelRpc@@QAEXXZ",
      "?Init@CDSBaseUpdate@@QAEJPAVBufferReader@@H@Z",
      "?Init@CDSBaseUpdate@@QAEJPBU_GUID@@ABVCSeqNum@@11HEK0KPAKPAUtagPROPVARIANT@@@Z",
      "?Init@CDSBaseUpdate@@QAEJPBU_GUID@@ABVCSeqNum@@11HEKPA_WKPAKPAUtagPROPVARIANT@@@Z",
      "?InitProperty@CDSBaseUpdate@@AAEJPAVBufferReader@@KAAUtagPROPVARIANT@@@Z",
      "?KeepErrorHistory@COutputReport@@QAEXPB_WGJ@Z",
      "?ProcessEvents@CCancelRpc@@AAEXXZ",
      "?Relation@CPropertyRestriction@@QAEKXZ",
      "?Remove@CCancelRpc@@QAEXPAX@Z",
      "?Remove@CColumns@@QAEXI@Z",
      "?Remove@CSort@@QAEXI@Z",
      "?RpcCancelTimeout@CCancelRpc@@QAEKXZ",
      "?Serialize@CDSBaseUpdate@@QAEJPAEPAKH@Z",
      "?SerializeProperty@CDSBaseUpdate@@AAEJAAUtagPROPVARIANT@@PAVBufferWriter@@@Z",
      "?SetChild@CRestriction@@QAEXABVCPropertyRestriction@@I@Z",
      "?SetOrder@CSortKey@@QAEXABK@Z",
      "?SetPrevSeqNum@CDSBaseUpdate@@QAEXAAVCSeqNum@@@Z",
      "?SetProperty@CPropertyRestriction@@QAEXABK@Z",
      "?SetProperty@CSortKey@@QAEXABK@Z",
      "?SetRelation@CPropertyRestriction@@QAEXK@Z",
      "?SetValue@CPropertyRestriction@@QAEXAAUtagBLOB@@@Z",
      "?SetValue@CPropertyRestriction@@QAEXABVCMQVariant@@@Z",
      "?SetValue@CPropertyRestriction@@QAEXE@Z",
      "?SetValue@CPropertyRestriction@@QAEXF@Z",
      "?SetValue@CPropertyRestriction@@QAEXJ@Z",
      "?SetValue@CPropertyRestriction@@QAEXK@Z",
      "?SetValue@CPropertyRestriction@@QAEXPAU_GUID@@@Z",
      "?SetValue@CPropertyRestriction@@QAEXPAUtagCACLSID@@@Z",
      "?SetValue@CPropertyRestriction@@QAEXPAUtagCALPWSTR@@@Z",
      "?SetValue@CPropertyRestriction@@QAEXPA_W@Z",
      "?ShutDownCancelThread@CCancelRpc@@QAEXXZ",
      "?Value@CPropertyRestriction@@QAEABVCMQVariant@@XZ",
      "?getNumOfProps@CDSBaseUpdate@@QAEEXZ",
      "CancelRpcInit",
      "ComposeRPCEndPointName",
      "DeleteFalconKeyValue",
      "FreeContextHandle",
      "GetComputerDnsNameInternal",
      "GetComputerNameInternal",
      "GetDomainFQDNName",
      "GetFalconKey",
      "GetFalconKeyValue",
      "GetFalconServiceName",
      "GetSizes",
      "GetThisServerIpPort",
      "HashMessageProperties",
      "HashProperties",
      "IdnNameCompare",
      "IsLocalSystemCluster",
      "MQSealBuffer",
      "MQSec_AccessCheck",
      "MQSec_AccessCheckForSelf",
      "MQSec_AcquireCryptoProvider",
      "MQSec_CalculateServiceSid",
      "MQSec_CanGenerateAudit",
      "MQSec_ChooseBestAlgorithm",
      "MQSec_ConvertSDToNT4Format",
      "MQSec_ConvertSDToNT5Format",
      "MQSec_CopySecurityDescriptor",
      "MQSec_CreateXmlDSig",
      "MQSec_GetAdminSid",
      "MQSec_GetAnonymousSid",
      "MQSec_GetDefaultHashAlgorithm",
      "MQSec_GetDefaultMessageAuthenticationLevel",
      "MQSec_GetDefaultPrivateQueueSecurityDescriptor",
      "MQSec_GetDefaultPublicQueueSecurityDescriptor",
      "MQSec_GetDefaultQueueAuthentication",
      "MQSec_GetDefaultSecDescriptor",
      "MQSec_GetImpersonationObject",
      "MQSec_GetLocalMachineSid",
      "MQSec_GetLocalSystemSid",
      "MQSec_GetNetworkServiceSid",
      "MQSec_GetPrivLevelForProvider",
      "MQSec_GetProcessSid",
      "MQSec_GetProcessUserSid",
      "MQSec_GetProviderForPrivLevel",
      "MQSec_GetProviderKeyLengths",
      "MQSec_GetProviderPubKeyFromDS",
      "MQSec_GetPubKeysFromDS",
      "MQSec_GetThreadUserSid",
      "MQSec_GetUserType",
      "MQSec_GetWorldSid",
      "MQSec_IsAnonymusSid",
      "MQSec_IsDC",
      "MQSec_IsGuestSid",
      "MQSec_IsNetworkServiceSid",
      "MQSec_IsSystemSid",
      "MQSec_IsUnAuthenticatedUser",
      "MQSec_IsWeakHashAlgorithm",
      "MQSec_MakeAbsoluteSD",
      "MQSec_MakeSelfRelative",
      "MQSec_MergeSecurityDescriptors",
      "MQSec_PackPublicKey",
      "MQSec_RemovePrivilegesFromProcessToken",
      "MQSec_ResetProviderTable",
      "MQSec_RpcAuthnLevel",
      "MQSec_SetDirectorySecurityForService",
      "MQSec_SetLocalRpcMutualAuth",
      "MQSec_SetPrivilegeInThread",
      "MQSec_SetRegistrySecurityForService",
      "MQSec_SetSecurityDescriptorDacl",
      "MQSec_StorePubKeys",
      "MQSec_StorePubKeysInDS",
      "MQSec_TraceThreadTokenInfo",
      "MQSec_UnpackPublicKey",
      "MQSec_UnpackPublicKeys",
      "MQSec_UpdateLocalMachineSid",
      "MQSec_UpgradeHashAlgorithm",
      "MQSetCaConfig",
      "MQSigCloneCertFromReg",
      "MQSigCloneCertFromSysStore",
      "MQSigCreateCertificate",
      "MQSigHashMessageProperties",
      "MQSigOpenUserCertStore",
      "MQUInitGlobalScurityVars",
      "MQsspi_InitServerAuthntication",
      "MSMQGetOperatingSystem",
      "ProduceRPCErrorTracing",
      "Report",
      "ServerAcceptSecCtx",
      "SetFalconKeyValue",
      "SetFalconServiceName",
      "ShutDownDebugWindow",
      "XactGetDTC",
      "XactGetWhereabouts",
      "g_CancelRpc",
      "g_hProvVer",
      "mqrpcBindQMService",
      "mqrpcGetLocalCallPID",
      "mqrpcIsLocalCall",
      "mqrpcIsTcpipTransport",
      "mqrpcUnbindQMService"
    ]
  },
  "hashes": {
    "sha2": "b8f894c14b930872d090ed32d8a032d4778f8e9b0f09ef052342cf67d2f8dfa5",
    "ssdeep": "3072:LoVFzgi/2Yx+ieXjKjqOBz2rYSKuIQpZwZG2vf2qe1d6Y:c6HC+ie1IqZwI2vfO14Y"
  },
  "intent": {
    "intentions": 12,
    "uniq_apis_matched": 39,
    "results": [
      {
        "intent": "Discovers Configuration Attributes of the Windows Enterprise Domain",
        "tag": "Reconnaissance:T1590.001 - Domain Properties (Windows Enterprise)",
        "component": "---",
        "inputs": 24,
        "matches": 2,
        "apis": [
          "DsGetDcNameW",
          "DsRoleGetPrimaryDomainInformation"
        ]
      },
      {
        "intent": "Steals Tokens To Impersonate Windows Identities",
        "tag": "Privilege Escalation:T1134.001 - Token Impersonation/Theft",
        "component": "Privileges",
        "inputs": 5,
        "matches": 1,
        "apis": [
          "ImpersonateAnonymousToken"
        ]
      },
      {
        "intent": "Can Access And Read Windows Tokens",
        "tag": "Expert Input:IBO.00020 - Windows Token Access",
        "component": "Privileges",
        "inputs": 4,
        "matches": 2,
        "apis": [
          "OpenProcessToken",
          "OpenThreadToken"
        ]
      },
      {
        "intent": "Can Manipulate Access Control Mechanisms",
        "tag": "Expert Input:IBO.00021 - Windows Access Control Lists",
        "component": "Privileges",
        "inputs": 15,
        "matches": 10,
        "apis": [
          "AddAccessAllowedAce",
          "AddAccessAllowedAceEx",
          "AddAccessAllowedObjectAce",
          "AddAccessDeniedAce",
          "AddAccessDeniedAceEx",
          "AddAccessDeniedObjectAce",
          "AddAuditAccessAce",
          "AddAuditAccessObjectAce",
          "InitializeAcl",
          "SetSecurityDescriptorDacl"
        ]
      },
      {
        "intent": "Can Enumerate/Discover System Services And Their Configuration Data",
        "tag": "Expert Input:IBO.0006 - Enumerate System Services",
        "component": "Services",
        "inputs": 28,
        "matches": 3,
        "apis": [
          "OpenSCManagerW",
          "OpenServiceW",
          "QueryServiceConfigW"
        ]
      },
      {
        "intent": "Can Conduct Cryptographic Operations",
        "tag": "Expert Input:IBO.00022 - Windows Cryptography Facilities",
        "component": "Crypto",
        "inputs": 67,
        "matches": 9,
        "apis": [
          "CryptAcquireContextW",
          "CryptCreateHash",
          "CryptDecodeObject",
          "CryptDestroyHash",
          "CryptDestroyKey",
          "CryptEncodeObject",
          "CryptGetHashParam",
          "CryptHashData",
          "CryptReleaseContext"
        ]
      },
      {
        "intent": "Can Enumerate The Windows Registry",
        "tag": "Expert Input:IBO.0009 - Enumerate The Windows Registry",
        "component": "Registry",
        "inputs": 6,
        "matches": 1,
        "apis": [
          "RegEnumValueW"
        ]
      },
      {
        "intent": "Queries And Discovers Windows Registry Configuration Settings",
        "tag": "Discovery:T1012 - Query Registry",
        "component": "Registry",
        "inputs": 11,
        "matches": 2,
        "apis": [
          "RegQueryInfoKeyW",
          "RegQueryValueExW"
        ]
      },
      {
        "intent": "Can Create/Manipulate System Services",
        "tag": "Expert Input:IBO.0007 - Create/Manipulate System Services",
        "component": "Services",
        "inputs": 19,
        "matches": 1,
        "apis": [
          "CloseServiceHandle"
        ]
      },
      {
        "intent": "Can Terminate Processes On The Target System",
        "tag": "Expert Input:IBO.0025",
        "component": "---",
        "inputs": 1,
        "matches": 1,
        "apis": [
          "TerminateProcess"
        ]
      },
      {
        "intent": "Manipulates Windows Tokens",
        "tag": "Defense Evasion:T1134 - Access Token Manipulation",
        "component": "Privileges",
        "inputs": 4,
        "matches": 1,
        "apis": [
          "AdjustTokenPrivileges"
        ]
      },
      {
        "intent": "Can Create/Manipulate The Windows Registry",
        "tag": "Expert Input:IBO.0008 - Create/Manipulate The Windows Registry",
        "component": "Registry",
        "inputs": 33,
        "matches": 6,
        "apis": [
          "RegCreateKeyExA",
          "RegCreateKeyExW",
          "RegDeleteValueW",
          "RegOpenKeyExA",
          "RegOpenKeyExW",
          "RegSetValueExW"
        ]
      }
    ]
  }
}