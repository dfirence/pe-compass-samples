{
  "pe_name": "aadrt.dll",
  "pe_type": 523,
  "pe_size": 3410944,
  "pe_subsystem": 2,
  "pe_subsystem_caption": "The Windows graphical user interface (GUI) subsystem",
  "pe_path": "c:\\Windows\\WinSxS\\amd64_windows-senseclient-service_31bf3856ad364e35_10.0.19041.1741_none_1cb2f24b448ffa81\\aadrt.dll",
  "pe_timedate_stamp": 1641986113,
  "pe_timedate_human": "2022-01-12T11:15:13.000Z",
  "ImageDLLImports": [
    {
      "name": "kernel32.dll",
      "imports": 137,
      "functions": [
        "AcquireSRWLockExclusive",
        "CloseHandle",
        "CompareFileTime",
        "CompareStringW",
        "ConvertFiberToThread",
        "CreateEventA",
        "CreateEventW",
        "CreateFileW",
        "CreateProcessW",
        "DecodePointer",
        "DeleteCriticalSection",
        "DeleteFiber",
        "DeleteFileW",
        "EncodePointer",
        "EnterCriticalSection",
        "EnumSystemLocalesW",
        "ExitProcess",
        "ExpandEnvironmentStringsW",
        "FileTimeToSystemTime",
        "FindClose",
        "FindFirstFileExW",
        "FindFirstFileW",
        "FindNextFileW",
        "FindResourceExW",
        "FindResourceW",
        "FlsAlloc",
        "FlsFree",
        "FlsGetValue",
        "FlsSetValue",
        "FlushFileBuffers",
        "FormatMessageW",
        "FreeEnvironmentStringsW",
        "FreeLibrary",
        "FreeResource",
        "GetACP",
        "GetCPInfo",
        "GetCommandLineA",
        "GetCommandLineW",
        "GetComputerNameExW",
        "GetConsoleMode",
        "GetConsoleOutputCP",
        "GetCurrentDirectoryW",
        "GetCurrentProcess",
        "GetCurrentProcessId",
        "GetCurrentThreadId",
        "GetDateFormatW",
        "GetDriveTypeW",
        "GetEnvironmentStringsW",
        "GetEnvironmentVariableW",
        "GetExitCodeProcess",
        "GetFileInformationByHandle",
        "GetFileSizeEx",
        "GetFileType",
        "GetFullPathNameW",
        "GetLastError",
        "GetLocaleInfoW",
        "GetModuleFileNameW",
        "GetModuleHandleExW",
        "GetModuleHandleW",
        "GetOEMCP",
        "GetProcAddress",
        "GetProcessHeap",
        "GetStartupInfoW",
        "GetStdHandle",
        "GetStringTypeW",
        "GetSystemTime",
        "GetSystemTimeAsFileTime",
        "GetTempFileNameW",
        "GetTempPathW",
        "GetTimeFormatW",
        "GetTimeZoneInformation",
        "GetUserDefaultLCID",
        "HeapAlloc",
        "HeapDestroy",
        "HeapFree",
        "HeapReAlloc",
        "HeapSize",
        "InitOnceBeginInitialize",
        "InitOnceComplete",
        "InitializeCriticalSectionAndSpinCount",
        "InitializeCriticalSectionEx",
        "InitializeSListHead",
        "InitializeSRWLock",
        "InterlockedFlushSList",
        "IsDebuggerPresent",
        "IsProcessorFeaturePresent",
        "IsValidCodePage",
        "IsValidLocale",
        "LCMapStringEx",
        "LCMapStringW",
        "LeaveCriticalSection",
        "LoadLibraryA",
        "LoadLibraryExW",
        "LoadLibraryW",
        "LoadResource",
        "LocalFree",
        "LockResource",
        "OpenEventA",
        "OutputDebugStringW",
        "PeekNamedPipe",
        "QueryPerformanceCounter",
        "QueryPerformanceFrequency",
        "RaiseException",
        "ReadConsoleA",
        "ReadConsoleW",
        "ReadFile",
        "ReleaseSRWLockExclusive",
        "ResetEvent",
        "RtlCaptureContext",
        "RtlLookupFunctionEntry",
        "RtlPcToFileHeader",
        "RtlUnwind",
        "RtlUnwindEx",
        "SetConsoleCtrlHandler",
        "SetConsoleMode",
        "SetEndOfFile",
        "SetEnvironmentVariableW",
        "SetEvent",
        "SetFilePointerEx",
        "SetLastError",
        "SetStdHandle",
        "SetUnhandledExceptionFilter",
        "SizeofResource",
        "Sleep",
        "SystemTimeToFileTime",
        "SystemTimeToTzSpecificLocalTime",
        "TerminateProcess",
        "TlsAlloc",
        "TlsFree",
        "TlsGetValue",
        "TlsSetValue",
        "TryEnterCriticalSection",
        "UnhandledExceptionFilter",
        "WaitForSingleObject",
        "WaitForSingleObjectEx",
        "WriteConsoleW",
        "WriteFile"
      ]
    },
    {
      "name": "ole32.dll",
      "imports": 6,
      "functions": [
        "CoCreateGuid",
        "CoCreateInstance",
        "CoInitializeEx",
        "CoUninitialize",
        "OleRun",
        "StringFromGUID2"
      ]
    },
    {
      "name": "wldap32.dll",
      "imports": 0,
      "functions": []
    },
    {
      "name": "advapi32.dll",
      "imports": 35,
      "functions": [
        "ConvertSidToStringSidA",
        "ConvertSidToStringSidW",
        "ConvertStringSidToSidW",
        "CryptAcquireContextW",
        "CryptCreateHash",
        "CryptDecrypt",
        "CryptDestroyHash",
        "CryptDestroyKey",
        "CryptEnumProvidersW",
        "CryptExportKey",
        "CryptGetProvParam",
        "CryptGetUserKey",
        "CryptHashData",
        "CryptReleaseContext",
        "CryptSetHashParam",
        "CryptSignHashW",
        "DeregisterEventSource",
        "EventRegister",
        "EventSetInformation",
        "EventUnregister",
        "EventWriteTransfer",
        "GetTokenInformation",
        "IsWellKnownSid",
        "LookupAccountSidW",
        "OpenProcessToken",
        "RegCloseKey",
        "RegCreateKeyExW",
        "RegDeleteKeyValueW",
        "RegDeleteTreeW",
        "RegGetValueW",
        "RegOpenKeyExW",
        "RegQueryInfoKeyW",
        "RegSetKeyValueW",
        "RegisterEventSourceW",
        "ReportEventW"
      ]
    },
    {
      "name": "crypt32.dll",
      "imports": 24,
      "functions": [
        "CertAddCertificateContextToStore",
        "CertAddEncodedCertificateToStore",
        "CertCloseStore",
        "CertComparePublicKeyInfo",
        "CertCreateCertificateContext",
        "CertCreateSelfSignCertificate",
        "CertDeleteCertificateFromStore",
        "CertDuplicateCertificateContext",
        "CertEnumCertificatesInStore",
        "CertFindCertificateInStore",
        "CertFindExtension",
        "CertFreeCertificateContext",
        "CertGetCertificateContextProperty",
        "CertGetNameStringW",
        "CertOpenStore",
        "CertSetCertificateContextProperty",
        "CertStrToNameW",
        "CryptAcquireCertificatePrivateKey",
        "CryptBinaryToStringW",
        "CryptDecodeObjectEx",
        "CryptEncodeObjectEx",
        "CryptExportPublicKeyInfo",
        "CryptFindOIDInfo",
        "CryptSignAndEncodeCertificate"
      ]
    },
    {
      "name": "ncrypt.dll",
      "imports": 17,
      "functions": [
        "BCryptCloseAlgorithmProvider",
        "BCryptDecrypt",
        "BCryptDestroyKey",
        "BCryptGenerateSymmetricKey",
        "BCryptGetProperty",
        "BCryptOpenAlgorithmProvider",
        "BCryptSetProperty",
        "NCryptCreatePersistedKey",
        "NCryptDecrypt",
        "NCryptDeleteKey",
        "NCryptExportKey",
        "NCryptFinalizeKey",
        "NCryptFreeObject",
        "NCryptOpenKey",
        "NCryptOpenStorageProvider",
        "NCryptSetProperty",
        "NCryptSignHash"
      ]
    },
    {
      "name": "netapi32.dll",
      "imports": 4,
      "functions": [
        "NetApiBufferFree",
        "NetGetJoinInformation",
        "NetLocalGroupAddMembers",
        "NetLocalGroupDelMembers"
      ]
    },
    {
      "name": "secur32.dll",
      "imports": 7,
      "functions": [
        "GetComputerObjectNameW",
        "GetUserNameExW",
        "LsaCallAuthenticationPackage",
        "LsaConnectUntrusted",
        "LsaDeregisterLogonProcess",
        "LsaFreeReturnBuffer",
        "LsaLookupAuthenticationPackage"
      ]
    },
    {
      "name": "rpcrt4.dll",
      "imports": 1,
      "functions": [
        "UuidFromStringW"
      ]
    },
    {
      "name": "api-ms-win-core-winrt-string-l1-1-0.dll",
      "imports": 3,
      "functions": [
        "WindowsCreateStringReference",
        "WindowsDeleteString",
        "WindowsGetStringRawBuffer"
      ]
    },
    {
      "name": "api-ms-win-core-winrt-l1-1-0.dll",
      "imports": 2,
      "functions": [
        "RoActivateInstance",
        "RoGetActivationFactory"
      ]
    },
    {
      "name": "winhttp.dll",
      "imports": 14,
      "functions": [
        "WinHttpAddRequestHeaders",
        "WinHttpCloseHandle",
        "WinHttpConnect",
        "WinHttpCrackUrl",
        "WinHttpOpen",
        "WinHttpOpenRequest",
        "WinHttpQueryDataAvailable",
        "WinHttpQueryHeaders",
        "WinHttpReadData",
        "WinHttpReceiveResponse",
        "WinHttpSendRequest",
        "WinHttpSetCredentials",
        "WinHttpSetOption",
        "WinHttpSetStatusCallback"
      ]
    },
    {
      "name": "oleaut32.dll",
      "imports": 0,
      "functions": []
    },
    {
      "name": "api-ms-win-core-string-l1-1-0.dll",
      "imports": 2,
      "functions": [
        "MultiByteToWideChar",
        "WideCharToMultiByte"
      ]
    },
    {
      "name": "ws2_32.dll",
      "imports": 0,
      "functions": []
    },
    {
      "name": "user32.dll",
      "imports": 7,
      "functions": [
        "DispatchMessageW",
        "GetProcessWindowStation",
        "GetUserObjectInformationW",
        "MessageBoxW",
        "MsgWaitForMultipleObjects",
        "PeekMessageW",
        "TranslateMessage"
      ]
    },
    {
      "name": "bcrypt.dll",
      "imports": 5,
      "functions": [
        "BCryptCreateHash",
        "BCryptDestroyHash",
        "BCryptFinishHash",
        "BCryptGenRandom",
        "BCryptHashData"
      ]
    },
    {
      "name": "ntdll.dll",
      "imports": 1,
      "functions": [
        "RtlVirtualUnwind"
      ]
    }
  ],
  "ImageDLLExports": {
    "exports": 9,
    "functions": [
      "aadFreeMemory",
      "aadGetDeviceJoinState",
      "aadGetDeviceOnlyAccessToken",
      "aadGetDevicePreprovisioningBlob",
      "aadHybridJoinDevice",
      "aadJoinPreprovisionedDevice",
      "aadMaintenanceTasks",
      "aadSetHttpProxy",
      "aadUnjoinDevice"
    ]
  },
  "ImageHashSignatures": {
    "sha2": "59777bc89070dce07d2fb570599b1a209891c7817da2a17c326ac05d05008261"
  },
  "scan": {
    "intentions": 9,
    "uniq_apis_matched": 15,
    "results": [
      {
        "intent": "Implement Features To Communicate via NamedPipes",
        "tag": "Expert Input:IBO.0004 - Implement Named Pipes",
        "component": "Processes",
        "inputs": 12,
        "matches": 1,
        "apis": [
          "PeekNamedPipe"
        ]
      },
      {
        "intent": "Implements Features To Execute or Spawn New Processes On The Target System",
        "tag": "Expert Input:IBO.0002 - Spawn New Process",
        "component": "Processes",
        "inputs": 7,
        "matches": 1,
        "apis": [
          "CreateProcessw"
        ]
      },
      {
        "intent": "Enumerate Files or Directories on the Target System",
        "tag": "Discovery:T1083 - File and Directory Discovery",
        "component": "Filesystem",
        "inputs": 5,
        "matches": 2,
        "apis": [
          "FindFirstFileExW",
          "FindFirstFileW"
        ]
      },
      {
        "intent": "Implements Features To Create/Manipulate The Windows Registry",
        "tag": "Expert Input:IBO.0008 - Create/Manipulate The Windows Registry",
        "component": "Registry",
        "inputs": 33,
        "matches": 3,
        "apis": [
          "RegCreateKeyExW",
          "RegOpenKeyExW",
          "RegSetKeyValueW"
        ]
      },
      {
        "intent": "Discover Time Configuration Settings On The Target System",
        "tag": "Discovery:T1124 - System Time Discovery",
        "component": "---",
        "inputs": 5,
        "matches": 1,
        "apis": [
          "GetTimeZoneInformation"
        ]
      },
      {
        "intent": "Query And Discover Windows Registry Configuration Settings",
        "tag": "Discovery:T1012 - Query Registry",
        "component": "Registry",
        "inputs": 11,
        "matches": 2,
        "apis": [
          "RegGetValueW",
          "RegQueryInfoKeyW"
        ]
      },
      {
        "intent": "Initiate Network Connections Over HTTP, HTTPS To Download Content On The Target System",
        "tag": "Command And Control:T1105 - Ingress Tool Transfer",
        "component": "Networking",
        "inputs": 21,
        "matches": 3,
        "apis": [
          "WinHttpConnect",
          "WinHttpOpenRequest",
          "WinHttpSendRequest"
        ]
      },
      {
        "intent": "Delete Files From Disk Potentially Erasing Important Evidence To Cover Attack Activity",
        "tag": "Defense Evasion:T1070.004 - File Deletion",
        "component": "Filesystem",
        "inputs": 2,
        "matches": 1,
        "apis": [
          "DeleteFileW"
        ]
      },
      {
        "intent": "Manipulate Windows Tokens",
        "tag": "Defense Evasion:T1134 - Access Token Manipulation",
        "component": "Privileges",
        "inputs": 10,
        "matches": 1,
        "apis": [
          "OpenProcessToken"
        ]
      }
    ]
  }
}