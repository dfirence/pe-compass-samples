{
  "pe_name": "cic.dll",
  "pe_type": 523,
  "pe_size": 209920,
  "pe_subsystem": 2,
  "pe_subsystem_caption": "The Windows graphical user interface (GUI) subsystem",
  "pe_path": "c:\\Windows\\WinSxS\\amd64_microsoft-windows-m..-management-console_31bf3856ad364e35_10.0.19041.1741_none_8401804e2afd6dc5\\cic.dll",
  "pe_timedate_stamp": 2402634555,
  "pe_timedate_human": "2046-02-19T06:29:15.000Z",
  "ImageDLLImports": [
    {
      "name": "mmcbase.dll",
      "imports": 16,
      "functions": [
        "??0SC@mmcerror@@QEAA@AEBV01@@Z",
        "??1SC@mmcerror@@QEAA@XZ",
        "??4SC@mmcerror@@QEAAAEAV01@AEBV01@@Z",
        "??BSC@mmcerror@@QEBA_NXZ",
        "?AddSnapinInterface@BookKeeping@@SA_NPEAUIUnknown@@PEBGAEAH@Z",
        "?FromLastError@SC@mmcerror@@QEAAAEAV12@XZ",
        "?GetSnapinName@BookKeeping@@SAPEBGH@Z",
        "?InterfaceMethodActivationContextException@BookKeeping@@SAXHPEBG0KPEAU_EXCEPTION_POINTERS@@@Z",
        "?InterfaceMethodException@BookKeeping@@SAXHPEBG0KPEAU_EXCEPTION_POINTERS@@@Z",
        "?InvalidInterface@BookKeeping@@SAXHPEBG0@Z",
        "?MMCNullInterface@BookKeeping@@SAXHPEBG0@Z",
        "?ReleaseSnapinInterface@BookKeeping@@SAJPEAUIUnknown@@H@Z",
        "?SetFunctionName@SC@mmcerror@@QEAAXPEBG@Z",
        "?ToHr@SC@mmcerror@@QEBAJXZ",
        "?s_CallDepth@SC@mmcerror@@0IA",
        "MMCUpdateRegistry"
      ]
    },
    {
      "name": "msvcrt.dll",
      "imports": 38,
      "functions": [
        "??0exception@@QEAA@AEBQEBD@Z",
        "??0exception@@QEAA@AEBQEBDH@Z",
        "??0exception@@QEAA@AEBV0@@Z",
        "??1exception@@UEAA@XZ",
        "??1type_info@@UEAA@XZ",
        "??3@YAXPEAX@Z",
        "??_V@YAXPEAX@Z",
        "?terminate@@YAXXZ",
        "?what@exception@@UEBAPEBDXZ",
        "_CxxThrowException",
        "_XcptFilter",
        "__C_specific_handler",
        "__CxxFrameHandler3",
        "__dllonexit",
        "_amsg_exit",
        "_callnewh",
        "_initterm",
        "_lock",
        "_onexit",
        "_purecall",
        "_unlock",
        "_wcsdup",
        "_wcsicmp",
        "_wcslwr",
        "_wcsnicmp",
        "_wcsupr",
        "_wtol",
        "free",
        "malloc",
        "memcmp",
        "memcpy",
        "memmove",
        "memset",
        "realloc",
        "wcschr",
        "wcscmp",
        "wcscpy_s",
        "wcsrchr"
      ]
    },
    {
      "name": "ntdll.dll",
      "imports": 9,
      "functions": [
        "EtwGetTraceEnableFlags",
        "EtwGetTraceEnableLevel",
        "EtwGetTraceLoggerHandle",
        "EtwRegisterTraceGuidsW",
        "EtwTraceMessage",
        "EtwUnregisterTraceGuids",
        "RtlCaptureContext",
        "RtlLookupFunctionEntry",
        "RtlVirtualUnwind"
      ]
    },
    {
      "name": "user32.dll",
      "imports": 39,
      "functions": [
        "BeginPaint",
        "CallWindowProcW",
        "CharNextW",
        "CreateWindowExW",
        "DefWindowProcW",
        "DestroyAcceleratorTable",
        "DestroyWindow",
        "DispatchMessageW",
        "EndPaint",
        "EqualRect",
        "GetClassInfoExW",
        "GetClassNameW",
        "GetClientRect",
        "GetDC",
        "GetDlgItem",
        "GetFocus",
        "GetParent",
        "GetSysColor",
        "GetWindowLongPtrW",
        "IntersectRect",
        "InvalidateRect",
        "IsChild",
        "IsWindow",
        "LoadCursorW",
        "OffsetRect",
        "PostMessageW",
        "PtInRect",
        "RegisterClassExW",
        "ReleaseDC",
        "SendMessageW",
        "SetFocus",
        "SetWindowLongPtrW",
        "SetWindowPos",
        "SetWindowRgn",
        "ShowWindow",
        "TranslateMessage",
        "UnionRect",
        "WindowFromDC",
        "wsprintfW"
      ]
    },
    {
      "name": "gdi32.dll",
      "imports": 14,
      "functions": [
        "CloseMetaFile",
        "CreateDCW",
        "CreateMetaFileW",
        "CreateRectRgnIndirect",
        "DeleteDC",
        "DeleteMetaFile",
        "GetDeviceCaps",
        "LPtoDP",
        "RestoreDC",
        "SaveDC",
        "SetMapMode",
        "SetViewportOrgEx",
        "SetWindowExtEx",
        "SetWindowOrgEx"
      ]
    },
    {
      "name": "api-ms-win-core-registry-l1-1-0.dll",
      "imports": 3,
      "functions": [
        "RegCloseKey",
        "RegOpenKeyExW",
        "RegQueryValueExW"
      ]
    },
    {
      "name": "kernel32.dll",
      "imports": 52,
      "functions": [
        "AcquireSRWLockExclusive",
        "DecodePointer",
        "DelayLoadFailureHook",
        "DeleteCriticalSection",
        "DisableThreadLibraryCalls",
        "EncodePointer",
        "EnterCriticalSection",
        "FlushInstructionCache",
        "GetCurrentProcess",
        "GetCurrentProcessId",
        "GetCurrentThreadId",
        "GetLastError",
        "GetLongPathNameW",
        "GetModuleFileNameW",
        "GetModuleHandleA",
        "GetModuleHandleW",
        "GetProcAddress",
        "GetProcessHeap",
        "GetSystemDirectoryW",
        "GetSystemInfo",
        "GetSystemTimeAsFileTime",
        "GetTickCount",
        "GetVersionExW",
        "GlobalAlloc",
        "GlobalLock",
        "GlobalUnlock",
        "HeapAlloc",
        "HeapCreate",
        "HeapDestroy",
        "HeapFree",
        "InitializeCriticalSection",
        "InterlockedPopEntrySList",
        "InterlockedPushEntrySList",
        "LeaveCriticalSection",
        "LoadLibraryExA",
        "LocalFree",
        "QueryPerformanceCounter",
        "RaiseException",
        "ReleaseSRWLockExclusive",
        "ResolveDelayLoadedAPI",
        "SetLastError",
        "SetUnhandledExceptionFilter",
        "Sleep",
        "SleepConditionVariableSRW",
        "TerminateProcess",
        "UnhandledExceptionFilter",
        "VirtualAlloc",
        "VirtualFree",
        "VirtualProtect",
        "VirtualQuery",
        "WakeAllConditionVariable",
        "lstrcpyW"
      ]
    }
  ],
  "ImageDLLExports": {
    "exports": 4,
    "functions": [
      "DllCanUnloadNow",
      "DllGetClassObject",
      "DllRegisterServer",
      "DllUnregisterServer"
    ]
  },
  "ImageHashSignatures": {
    "sha2": "0c78de6be336bcccc521c4d55b081324645937d297eef583367af0412da733f2"
  },
  "scan": {
    "intentions": 4,
    "uniq_apis_matched": 5,
    "results": [
      {
        "intent": "Implements Features To Create/Manipulate The Windows Registry",
        "tag": "Expert Input:IBO.0008 - Create/Manipulate The Windows Registry",
        "component": "Registry",
        "inputs": 33,
        "matches": 1,
        "apis": [
          "RegOpenKeyExW"
        ]
      },
      {
        "intent": "Query And Discover Windows Registry Configuration Settings",
        "tag": "Discovery:T1012 - Query Registry",
        "component": "Registry",
        "inputs": 11,
        "matches": 1,
        "apis": [
          "RegQueryValueExW"
        ]
      },
      {
        "intent": "Inject DLLs into Processes to evade defenses",
        "tag": "Defense Evasion:T1055 - Dynamic-Link Library Injection",
        "component": "Processes",
        "inputs": 4,
        "matches": 1,
        "apis": [
          "VirtualAlloc"
        ]
      },
      {
        "intent": "Implements Delayed Loads of DLL Resources",
        "tag": "Expert Input:IBO.0005 - Load DLL Resources With Delay During Runtime",
        "component": "---",
        "inputs": 2,
        "matches": 2,
        "apis": [
          "DelayLoadFailureHook",
          "ResolveDelayLoadedAPI"
        ]
      }
    ]
  }
}