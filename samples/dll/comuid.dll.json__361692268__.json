{
  "pe_name": "comuid.dll",
  "pe_type": 523,
  "pe_size": 859136,
  "pe_subsystem": 2,
  "pe_subsystem_caption": "The Windows graphical user interface (GUI) subsystem",
  "pe_path": "c:\\Windows\\WinSxS\\amd64_microsoft-windows-com-complus-ui-comuid_31bf3856ad364e35_10.0.19041.746_none_c12c98cec427c065\\comuid.dll",
  "pe_timedate_stamp": 503686308,
  "pe_timedate_human": "1985-12-17T16:51:48.000Z",
  "ImageDLLImports": [
    {
      "name": "mfc42u.dll",
      "imports": 0,
      "functions": []
    },
    {
      "name": "msvcrt.dll",
      "imports": 48,
      "functions": [
        "??0exception@@QEAA@AEBV0@@Z",
        "??0exception@@QEAA@XZ",
        "??1exception@@UEAA@XZ",
        "??1type_info@@UEAA@XZ",
        "??_V@YAXPEAX@Z",
        "?terminate@@YAXXZ",
        "_CxxThrowException",
        "_XcptFilter",
        "__C_specific_handler",
        "__CxxFrameHandler3",
        "__dllonexit",
        "_amsg_exit",
        "_errno",
        "_initterm",
        "_itow",
        "_itow_s",
        "_local_unwind",
        "_lock",
        "_ltow",
        "_onexit",
        "_purecall",
        "_unlock",
        "_vsnprintf_s",
        "_vsnwprintf",
        "_waccess",
        "_wcsdup",
        "_wcsicmp",
        "_wsplitpath_s",
        "_wtoi",
        "_wtol",
        "free",
        "iswdigit",
        "iswprint",
        "malloc",
        "memcmp",
        "memcpy",
        "memcpy_s",
        "memmove",
        "memset",
        "realloc",
        "wcscat_s",
        "wcschr",
        "wcscmp",
        "wcsrchr",
        "wcstod",
        "wcstok",
        "wcstol",
        "wcstoul"
      ]
    },
    {
      "name": "ntdll.dll",
      "imports": 3,
      "functions": [
        "RtlCaptureContext",
        "RtlLookupFunctionEntry",
        "RtlVirtualUnwind"
      ]
    },
    {
      "name": "shell32.dll",
      "imports": 5,
      "functions": [
        "DragQueryFileW",
        "SHBrowseForFolderW",
        "SHGetMalloc",
        "SHGetPathFromIDListW",
        "ShellExecuteW"
      ]
    },
    {
      "name": "advapi32.dll",
      "imports": 55,
      "functions": [
        "AddAccessAllowedAce",
        "AddMandatoryAce",
        "AllocateAndInitializeSid",
        "BuildSecurityDescriptorW",
        "ChangeServiceConfigW",
        "CloseServiceHandle",
        "ControlService",
        "CreateWellKnownSid",
        "DeregisterEventSource",
        "EnumDependentServicesW",
        "EnumServicesStatusW",
        "FreeSid",
        "GetLengthSid",
        "GetSecurityDescriptorControl",
        "GetSecurityDescriptorDacl",
        "GetSecurityDescriptorLength",
        "GetTokenInformation",
        "GetUserNameW",
        "InitializeAcl",
        "IsValidSecurityDescriptor",
        "LogonUserW",
        "LookupAccountNameW",
        "LookupAccountSidW",
        "LsaAddAccountRights",
        "LsaClose",
        "LsaNtStatusToWinError",
        "LsaOpenPolicy",
        "LsaStorePrivateData",
        "MakeAbsoluteSD",
        "MakeSelfRelativeSD",
        "OpenProcessToken",
        "OpenSCManagerW",
        "OpenServiceW",
        "QueryServiceConfigW",
        "QueryServiceStatus",
        "RegCloseKey",
        "RegConnectRegistryW",
        "RegCreateKeyExW",
        "RegDeleteKeyW",
        "RegDeleteValueW",
        "RegEnumKeyExW",
        "RegEnumKeyW",
        "RegEnumValueW",
        "RegGetKeySecurity",
        "RegOpenKeyExW",
        "RegQueryInfoKeyW",
        "RegQueryValueExW",
        "RegQueryValueW",
        "RegSetKeySecurity",
        "RegSetValueExW",
        "RegisterEventSourceW",
        "ReportEventW",
        "SetSecurityDescriptorControl",
        "SetSecurityDescriptorDacl",
        "SetSecurityDescriptorSacl"
      ]
    },
    {
      "name": "kernel32.dll",
      "imports": 80,
      "functions": [
        "ActivateActCtx",
        "CloseHandle",
        "CompareStringW",
        "CreateActCtxW",
        "CreateDirectoryW",
        "CreateEventW",
        "CreateProcessW",
        "DeactivateActCtx",
        "DebugBreak",
        "DelayLoadFailureHook",
        "DeleteCriticalSection",
        "DeleteFileW",
        "EnterCriticalSection",
        "ExpandEnvironmentStringsW",
        "FindActCtxSectionStringW",
        "FindClose",
        "FindFirstFileW",
        "FindNextFileW",
        "FindResourceExW",
        "FormatMessageW",
        "FreeLibrary",
        "GetAppContainerAce",
        "GetComputerNameW",
        "GetCurrentProcess",
        "GetCurrentProcessId",
        "GetCurrentThreadId",
        "GetExitCodeProcess",
        "GetLastError",
        "GetLocalTime",
        "GetModuleFileNameA",
        "GetModuleFileNameW",
        "GetModuleHandleExW",
        "GetModuleHandleW",
        "GetProcAddress",
        "GetProcessHeap",
        "GetSystemDirectoryW",
        "GetSystemInfo",
        "GetSystemTimeAsFileTime",
        "GetSystemWow64DirectoryW",
        "GetTickCount",
        "GetVersionExW",
        "GlobalLock",
        "GlobalUnlock",
        "HeapAlloc",
        "HeapDestroy",
        "HeapFree",
        "InitializeCriticalSection",
        "InitializeCriticalSectionAndSpinCount",
        "IsDebuggerPresent",
        "LeaveCriticalSection",
        "LoadLibraryExW",
        "LoadLibraryW",
        "LoadResource",
        "LocalAlloc",
        "LocalFree",
        "LockResource",
        "MulDiv",
        "MultiByteToWideChar",
        "OutputDebugStringA",
        "OutputDebugStringW",
        "QueryActCtxW",
        "QueryPerformanceCounter",
        "ReleaseActCtx",
        "ResolveDelayLoadedAPI",
        "ResumeThread",
        "SetEvent",
        "SetFileAttributesW",
        "SetLastError",
        "SetUnhandledExceptionFilter",
        "SizeofResource",
        "Sleep",
        "TerminateProcess",
        "UnhandledExceptionFilter",
        "VirtualAlloc",
        "VirtualProtect",
        "VirtualQuery",
        "WaitForMultipleObjects",
        "WaitForSingleObject",
        "lstrcmpiW",
        "lstrcpynW"
      ]
    },
    {
      "name": "gdi32.dll",
      "imports": 6,
      "functions": [
        "CreatePen",
        "DeleteObject",
        "GetDeviceCaps",
        "GetObjectW",
        "GetTextExtentPoint32W",
        "Rectangle"
      ]
    },
    {
      "name": "user32.dll",
      "imports": 72,
      "functions": [
        "AppendMenuW",
        "CallNextHookEx",
        "CharNextW",
        "CharPrevW",
        "CloseClipboard",
        "CopyImage",
        "CopyRect",
        "CreateMenu",
        "CreatePopupMenu",
        "DeleteMenu",
        "DestroyIcon",
        "DestroyMenu",
        "DrawFocusRect",
        "EnableMenuItem",
        "EnableWindow",
        "GetAsyncKeyState",
        "GetClassInfoW",
        "GetClassLongPtrW",
        "GetClassNameW",
        "GetClientRect",
        "GetClipboardData",
        "GetDC",
        "GetDesktopWindow",
        "GetDlgCtrlID",
        "GetDlgItem",
        "GetFocus",
        "GetForegroundWindow",
        "GetMenuItemCount",
        "GetMenuItemID",
        "GetMenuState",
        "GetMenuStringW",
        "GetParent",
        "GetSubMenu",
        "GetSysColor",
        "GetSystemMenu",
        "GetSystemMetrics",
        "GetWindow",
        "GetWindowLongW",
        "GetWindowRect",
        "GetWindowTextLengthW",
        "InflateRect",
        "InsertMenuW",
        "InvalidateRect",
        "IsClipboardFormatAvailable",
        "IsWindow",
        "KillTimer",
        "LoadBitmapW",
        "LoadCursorW",
        "LoadIconW",
        "LoadImageW",
        "LoadMenuW",
        "LoadStringW",
        "LockWindowUpdate",
        "MapWindowPoints",
        "MessageBeep",
        "MessageBoxW",
        "ModifyMenuW",
        "OpenClipboard",
        "PeekMessageW",
        "PostMessageW",
        "RegisterClipboardFormatW",
        "ReleaseDC",
        "SendMessageW",
        "SetCursor",
        "SetFocus",
        "SetForegroundWindow",
        "SetTimer",
        "SetWindowLongW",
        "SetWindowTextW",
        "SetWindowsHookExW",
        "UnhookWindowsHookEx",
        "UpdateWindow"
      ]
    },
    {
      "name": "ole32.dll",
      "imports": 22,
      "functions": [
        "CLSIDFromString",
        "CoCreateGuid",
        "CoCreateInstance",
        "CoCreateInstanceEx",
        "CoGetInterfaceAndReleaseStream",
        "CoGetObjectContext",
        "CoGetSystemSecurityPermissions",
        "CoInitializeEx",
        "CoMarshalInterThreadInterfaceInStream",
        "CoSetProxyBlanket",
        "CoTaskMemAlloc",
        "CoTaskMemFree",
        "CoTaskMemRealloc",
        "CoUninitialize",
        "ObjectStublessClient3",
        "ObjectStublessClient4",
        "ObjectStublessClient5",
        "ObjectStublessClient6",
        "ReleaseStgMedium",
        "StringFromCLSID",
        "StringFromGUID2",
        "UpdateDCOMSettings"
      ]
    },
    {
      "name": "oleaut32.dll",
      "imports": 4,
      "functions": [
        "BSTR_UserFree64",
        "BSTR_UserMarshal64",
        "BSTR_UserSize64",
        "BSTR_UserUnmarshal64"
      ]
    },
    {
      "name": "rpcrt4.dll",
      "imports": 19,
      "functions": [
        "CStdStubBuffer_AddRef",
        "CStdStubBuffer_Connect",
        "CStdStubBuffer_CountRefs",
        "CStdStubBuffer_DebugServerQueryInterface",
        "CStdStubBuffer_DebugServerRelease",
        "CStdStubBuffer_Disconnect",
        "CStdStubBuffer_Invoke",
        "CStdStubBuffer_IsIIDSupported",
        "CStdStubBuffer_QueryInterface",
        "IUnknown_AddRef_Proxy",
        "IUnknown_QueryInterface_Proxy",
        "IUnknown_Release_Proxy",
        "NdrCStdStubBuffer_Release",
        "NdrDllCanUnloadNow",
        "NdrDllGetClassObject",
        "NdrDllRegisterProxy",
        "NdrDllUnregisterProxy",
        "NdrOleAllocate",
        "NdrOleFree"
      ]
    },
    {
      "name": "version.dll",
      "imports": 1,
      "functions": [
        "VerQueryValueW"
      ]
    },
    {
      "name": "sspicli.dll",
      "imports": 1,
      "functions": [
        "GetUserNameExW"
      ]
    }
  ],
  "ImageDLLExports": {
    "exports": 5,
    "functions": [
      "CreateDCOMSecurityUIPage",
      "DllCanUnloadNow",
      "DllGetClassObject",
      "DllRegisterServer",
      "DllUnregisterServer"
    ]
  },
  "ImageHashSignatures": {
    "sha2": "21fa6983ccd445276a6de5a3084986e622f673b914869cded3eacea7219fdf8e"
  },
  "scan": {
    "intentions": 14,
    "uniq_apis_matched": 30,
    "results": [
      {
        "intent": "Implements Delayed Loads of DLL Resources",
        "tag": "Expert Input:IBO.0005 - Load DLL Resources With Delay During Runtime",
        "component": "---",
        "inputs": 2,
        "matches": 2,
        "apis": [
          "DelayLoadFailureHook",
          "ResolveDelayLoadedAPI"
        ]
      },
      {
        "intent": "Inject DLLs into Processes to evade defenses",
        "tag": "Defense Evasion:T1055 - Dynamic-Link Library Injection",
        "component": "Processes",
        "inputs": 4,
        "matches": 1,
        "apis": [
          "VirtualAlloc"
        ]
      },
      {
        "intent": "Delete Files From Disk Potentially Erasing Important Evidence To Cover Attack Activity",
        "tag": "Defense Evasion:T1070.004 - File Deletion",
        "component": "Filesystem",
        "inputs": 2,
        "matches": 1,
        "apis": [
          "DeleteFileW"
        ]
      },
      {
        "intent": "Obtain information through the Clipboard Buffers From Desktop Environment",
        "tag": "Collection:T1115 - Clipboard Data",
        "component": "---",
        "inputs": 4,
        "matches": 2,
        "apis": [
          "GetClipboardData",
          "OpenClipboard"
        ]
      },
      {
        "intent": "Implements Features To Enumerate/Discover System Services And Their Configuration Data",
        "tag": "Expert Input:IBO.0006 - Enumerate System Services",
        "component": "Services",
        "inputs": 28,
        "matches": 5,
        "apis": [
          "EnumDependentServicesW",
          "OpenSCManagerW",
          "OpenServiceW",
          "QueryServiceConfigW",
          "QueryServiceStatus"
        ]
      },
      {
        "intent": "Enumerate Files or Directories on the Target System",
        "tag": "Discovery:T1083 - File and Directory Discovery",
        "component": "Filesystem",
        "inputs": 5,
        "matches": 1,
        "apis": [
          "FindFirstFileW"
        ]
      },
      {
        "intent": "Implements Features To Create/Manipulate The Windows Registry",
        "tag": "Expert Input:IBO.0008 - Create/Manipulate The Windows Registry",
        "component": "Registry",
        "inputs": 33,
        "matches": 5,
        "apis": [
          "RegCreateKeyExW",
          "RegDeleteKeyW",
          "RegDeleteValueW",
          "RegOpenKeyExW",
          "RegSetValueExW"
        ]
      },
      {
        "intent": "Manipulate Windows Tokens",
        "tag": "Defense Evasion:T1134 - Access Token Manipulation",
        "component": "Privileges",
        "inputs": 10,
        "matches": 1,
        "apis": [
          "OpenProcessToken"
        ]
      },
      {
        "intent": "Implements Features To Execute or Spawn New Processes On The Target System",
        "tag": "Expert Input:IBO.0002 - Spawn New Process",
        "component": "Processes",
        "inputs": 7,
        "matches": 2,
        "apis": [
          "CreateProcessw",
          "ShellExecuteW"
        ]
      },
      {
        "intent": "Query And Discover Windows Registry Configuration Settings",
        "tag": "Discovery:T1012 - Query Registry",
        "component": "Registry",
        "inputs": 11,
        "matches": 3,
        "apis": [
          "RegQueryInfoKeyW",
          "RegQueryValueExW",
          "RegQueryValueW"
        ]
      },
      {
        "intent": "Inject malicious code into hijacked processes in order to evade process-based defenses",
        "tag": "Defense Evasion:T1055.002 - Thread Execution Hijacking",
        "component": "Processes",
        "inputs": 3,
        "matches": 1,
        "apis": [
          "ResumeThread"
        ]
      },
      {
        "intent": "Implements Features To Create/Manipulate System Services",
        "tag": "Expert Input:IBO.0007 - Create/Manipulate System Services",
        "component": "Services",
        "inputs": 19,
        "matches": 2,
        "apis": [
          "CloseServiceHandle",
          "ControlService"
        ]
      },
      {
        "intent": "Implements Features To Enumerate The Windows Registry",
        "tag": "Expert Input:IBO.0009 - Enumerate The Windows Registry",
        "component": "Registry",
        "inputs": 6,
        "matches": 3,
        "apis": [
          "RegEnumKeyExW",
          "RegEnumKeyW",
          "RegEnumValueW"
        ]
      },
      {
        "intent": "Implements Features To Remotely Connect To A Target System And Access Its Windows Registry",
        "tag": "Expert Input:IBO.00010 - Connect To Remote Windows Registry",
        "component": "Networking",
        "inputs": 2,
        "matches": 1,
        "apis": [
          "RegConnectRegistryW"
        ]
      }
    ]
  }
}