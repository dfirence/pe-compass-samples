{
  "pe_name": "WpdMtpUS.dll",
  "pe_type": 523,
  "pe_size": 161280,
  "pe_subsystem": 2,
  "pe_subsystem_caption": "The Windows graphical user interface (GUI) subsystem",
  "pe_path": "c:\\Windows\\WinSxS\\amd64_dual_wpdmtp.inf_31bf3856ad364e35_10.0.19041.746_none_8478465c1c781ea5\\WpdMtpUS.dll",
  "pe_timedate_stamp": 1260204040,
  "pe_timedate_human": "2009-12-07T16:40:40.000Z",
  "ImageDLLImports": [
    {
      "name": "msvcrt.dll",
      "imports": 30,
      "functions": [
        "??0exception@@QEAA@AEBV0@@Z",
        "??0exception@@QEAA@XZ",
        "??1exception@@UEAA@XZ",
        "??1type_info@@UEAA@XZ",
        "_CxxThrowException",
        "_XcptFilter",
        "__C_specific_handler",
        "__CxxFrameHandler3",
        "__dllonexit",
        "_amsg_exit",
        "_callnewh",
        "_errno",
        "_initterm",
        "_lock",
        "_onexit",
        "_purecall",
        "_unlock",
        "_vsnprintf_s",
        "_vsnwprintf",
        "free",
        "malloc",
        "memcpy",
        "memcpy_s",
        "memmove",
        "memmove_s",
        "memset",
        "realloc",
        "wcscat_s",
        "wcscpy_s",
        "wcsncpy_s"
      ]
    },
    {
      "name": "ntdll.dll",
      "imports": 3,
      "functions": [
        "RtlCaptureContext",
        "RtlLookupFunctionEntry",
        "RtlVirtualUnwind"
      ]
    },
    {
      "name": "advapi32.dll",
      "imports": 18,
      "functions": [
        "EventRegister",
        "EventSetInformation",
        "EventUnregister",
        "EventWriteTransfer",
        "GetTraceEnableFlags",
        "GetTraceEnableLevel",
        "GetTraceLoggerHandle",
        "RegCloseKey",
        "RegCreateKeyExW",
        "RegDeleteValueW",
        "RegEnumKeyExW",
        "RegOpenKeyExW",
        "RegQueryInfoKeyW",
        "RegSetValueExW",
        "RegisterTraceGuidsW",
        "TraceEvent",
        "TraceMessage",
        "UnregisterTraceGuids"
      ]
    },
    {
      "name": "kernel32.dll",
      "imports": 72,
      "functions": [
        "AcquireSRWLockExclusive",
        "CancelIoEx",
        "CloseHandle",
        "CreateEventW",
        "CreateFileW",
        "CreateMutexExW",
        "CreateSemaphoreExW",
        "CreateThread",
        "DebugBreak",
        "DelayLoadFailureHook",
        "DeleteCriticalSection",
        "DisableThreadLibraryCalls",
        "EnterCriticalSection",
        "FindResourceExW",
        "FlushFileBuffers",
        "FormatMessageW",
        "FreeLibrary",
        "GetCurrentProcess",
        "GetCurrentProcessId",
        "GetCurrentThreadId",
        "GetLastError",
        "GetModuleFileNameA",
        "GetModuleFileNameW",
        "GetModuleHandleExW",
        "GetModuleHandleW",
        "GetOverlappedResult",
        "GetProcAddress",
        "GetProcessHeap",
        "GetSystemTimeAsFileTime",
        "GetTickCount",
        "GetTickCount64",
        "HeapAlloc",
        "HeapDestroy",
        "HeapFree",
        "HeapReAlloc",
        "HeapSize",
        "InitOnceBeginInitialize",
        "InitOnceComplete",
        "InitializeConditionVariable",
        "InitializeCriticalSection",
        "InitializeSRWLock",
        "IsDebuggerPresent",
        "LeaveCriticalSection",
        "LoadLibraryExW",
        "LoadResource",
        "LockResource",
        "MultiByteToWideChar",
        "OpenSemaphoreW",
        "OutputDebugStringA",
        "OutputDebugStringW",
        "QueryPerformanceCounter",
        "RaiseException",
        "ReleaseMutex",
        "ReleaseSRWLockExclusive",
        "ReleaseSemaphore",
        "ResetEvent",
        "ResolveDelayLoadedAPI",
        "SetEvent",
        "SetLastError",
        "SetUnhandledExceptionFilter",
        "SizeofResource",
        "Sleep",
        "SleepConditionVariableSRW",
        "TerminateProcess",
        "UnhandledExceptionFilter",
        "VirtualAlloc",
        "VirtualFree",
        "WaitForMultipleObjects",
        "WaitForSingleObject",
        "WaitForSingleObjectEx",
        "WakeConditionVariable",
        "lstrcmpiW"
      ]
    },
    {
      "name": "user32.dll",
      "imports": 2,
      "functions": [
        "CharNextW",
        "UnregisterClassA"
      ]
    },
    {
      "name": "winusb.dll",
      "imports": 17,
      "functions": [
        "WinUsb_AbortPipe",
        "WinUsb_ControlTransfer",
        "WinUsb_Free",
        "WinUsb_GetCurrentAlternateSetting",
        "WinUsb_GetDescriptor",
        "WinUsb_GetOverlappedResult",
        "WinUsb_GetPipePolicy",
        "WinUsb_GetPowerPolicy",
        "WinUsb_Initialize",
        "WinUsb_QueryDeviceInformation",
        "WinUsb_QueryInterfaceSettings",
        "WinUsb_QueryPipe",
        "WinUsb_ReadPipe",
        "WinUsb_ResetPipe",
        "WinUsb_SetCurrentAlternateSetting",
        "WinUsb_SetPipePolicy",
        "WinUsb_WritePipe"
      ]
    }
  ],
  "ImageDLLExports": {
    "exports": 4,
    "functions": [
      "DllCanUnloadNow",
      "DllGetClassObject",
      "DllRegisterServer",
      "DllUnregisterServer"
    ]
  },
  "ImageHashSignatures": {
    "sha2": "e2226d5e4b9192ac0ee5a66eaaecf3915f1624e0f41f8af78987dbca844448b0"
  },
  "scan": {
    "intentions": 5,
    "uniq_apis_matched": 9,
    "results": [
      {
        "intent": "Implements Features To Create/Manipulate The Windows Registry",
        "tag": "Expert Input:IBO.0008 - Create/Manipulate The Windows Registry",
        "component": "Registry",
        "inputs": 33,
        "matches": 4,
        "apis": [
          "RegCreateKeyExW",
          "RegDeleteValueW",
          "RegOpenKeyExW",
          "RegSetValueExW"
        ]
      },
      {
        "intent": "Implements Features To Enumerate The Windows Registry",
        "tag": "Expert Input:IBO.0009 - Enumerate The Windows Registry",
        "component": "Registry",
        "inputs": 6,
        "matches": 1,
        "apis": [
          "RegEnumKeyExW"
        ]
      },
      {
        "intent": "Query And Discover Windows Registry Configuration Settings",
        "tag": "Discovery:T1012 - Query Registry",
        "component": "Registry",
        "inputs": 11,
        "matches": 1,
        "apis": [
          "RegQueryInfoKeyW"
        ]
      },
      {
        "intent": "Implements Delayed Loads of DLL Resources",
        "tag": "Expert Input:IBO.0005 - Load DLL Resources With Delay During Runtime",
        "component": "---",
        "inputs": 2,
        "matches": 2,
        "apis": [
          "DelayLoadFailureHook",
          "ResolveDelayLoadedAPI"
        ]
      },
      {
        "intent": "Inject DLLs into Processes to evade defenses",
        "tag": "Defense Evasion:T1055 - Dynamic-Link Library Injection",
        "component": "Processes",
        "inputs": 4,
        "matches": 1,
        "apis": [
          "VirtualAlloc"
        ]
      }
    ]
  }
}