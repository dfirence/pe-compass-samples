{
  "pe_name": "RasMigPlugin.dll",
  "pe_type": 523,
  "pe_size": 542544,
  "pe_subsystem": 3,
  "pe_subsystem_caption": "The Windows character (Cosole UI) subsystem",
  "pe_path": "c:\\Windows\\WinSxS\\amd64_microsoft-windows-m..cementmanifests-net_31bf3856ad364e35_10.0.19041.867_none_95544fbb82423b98\\RasMigPlugin.dll",
  "pe_timedate_stamp": 265878943,
  "pe_timedate_human": "1978-06-05T07:15:43.000Z",
  "ImageDLLImports": [
    {
      "name": "msvcrt.dll",
      "imports": 55,
      "functions": [
        "??0exception@@QEAA@AEBQEBD@Z",
        "??0exception@@QEAA@AEBQEBDH@Z",
        "??0exception@@QEAA@AEBV0@@Z",
        "??0exception@@QEAA@XZ",
        "??1exception@@UEAA@XZ",
        "??1type_info@@UEAA@XZ",
        "?terminate@@YAXXZ",
        "?what@exception@@UEBAPEBDXZ",
        "_CxxThrowException",
        "_XcptFilter",
        "__C_specific_handler",
        "__CxxFrameHandler3",
        "__dllonexit",
        "_amsg_exit",
        "_callnewh",
        "_errno",
        "_initterm",
        "_local_unwind",
        "_lock",
        "_ltoa",
        "_mbscspn",
        "_onexit",
        "_purecall",
        "_strnicmp",
        "_ui64tow_s",
        "_ultoa_s",
        "_unlock",
        "_vsnprintf",
        "_vsnwprintf",
        "_wcsicmp",
        "_wcsnicmp",
        "_wcstoui64",
        "_wtol",
        "atol",
        "calloc",
        "free",
        "malloc",
        "memcmp",
        "memcpy",
        "memcpy_s",
        "memmove_s",
        "memset",
        "qsort",
        "realloc",
        "strchr",
        "strrchr",
        "strtoul",
        "vswprintf_s",
        "wcscat_s",
        "wcschr",
        "wcscmp",
        "wcscpy_s",
        "wcsncpy_s",
        "wcsnlen",
        "wcsstr"
      ]
    },
    {
      "name": "ntdll.dll",
      "imports": 8,
      "functions": [
        "DbgPrint",
        "RtlCaptureContext",
        "RtlGUIDFromString",
        "RtlInitUnicodeString",
        "RtlLookupFunctionEntry",
        "RtlNtStatusToDosError",
        "RtlVirtualUnwind",
        "VerSetConditionMask"
      ]
    },
    {
      "name": "kernel32.dll",
      "imports": 85,
      "functions": [
        "CloseHandle",
        "CompareFileTime",
        "CompareStringA",
        "CompareStringW",
        "CopyFileW",
        "CreateDirectoryW",
        "CreateEventW",
        "CreateFileW",
        "CreateMutexW",
        "DelayLoadFailureHook",
        "DeleteCriticalSection",
        "DeleteFileW",
        "EnterCriticalSection",
        "ExpandEnvironmentStringsW",
        "FindClose",
        "FindFirstFileW",
        "FindNextFileW",
        "FindResourceExW",
        "FreeLibrary",
        "GetCurrentProcess",
        "GetCurrentProcessId",
        "GetCurrentThread",
        "GetCurrentThreadId",
        "GetEnvironmentVariableW",
        "GetFileInformationByHandle",
        "GetFileSizeEx",
        "GetFileType",
        "GetFinalPathNameByHandleW",
        "GetFullPathNameW",
        "GetLastError",
        "GetModuleFileNameW",
        "GetModuleHandleExW",
        "GetModuleHandleW",
        "GetProcAddress",
        "GetProcessHeap",
        "GetProductInfo",
        "GetSystemDirectoryW",
        "GetSystemTime",
        "GetSystemTimeAsFileTime",
        "GetSystemWindowsDirectoryW",
        "GetThreadLocale",
        "GetTickCount",
        "GetVersionExW",
        "GlobalAlloc",
        "GlobalFree",
        "GlobalReAlloc",
        "HeapAlloc",
        "HeapDestroy",
        "HeapFree",
        "HeapReAlloc",
        "HeapSize",
        "InitializeCriticalSection",
        "LeaveCriticalSection",
        "LoadLibraryExA",
        "LoadLibraryExW",
        "LoadResource",
        "LocalAlloc",
        "LocalFree",
        "LockResource",
        "MultiByteToWideChar",
        "OpenMutexW",
        "OutputDebugStringA",
        "QueryPerformanceCounter",
        "RaiseException",
        "ReadFile",
        "ReleaseMutex",
        "SetEvent",
        "SetFileInformationByHandle",
        "SetFilePointer",
        "SetLastError",
        "SetThreadLocale",
        "SetUnhandledExceptionFilter",
        "SizeofResource",
        "Sleep",
        "SystemTimeToFileTime",
        "TerminateProcess",
        "UnhandledExceptionFilter",
        "VerifyVersionInfoW",
        "WaitForSingleObject",
        "WideCharToMultiByte",
        "WriteFile",
        "lstrcmpW",
        "lstrcmpiW",
        "lstrlenA",
        "lstrlenW"
      ]
    },
    {
      "name": "advapi32.dll",
      "imports": 50,
      "functions": [
        "AddAccessAllowedAce",
        "AdjustTokenPrivileges",
        "AllocateAndInitializeSid",
        "ChangeServiceConfig2W",
        "ChangeServiceConfigW",
        "CheckTokenMembership",
        "CloseServiceHandle",
        "ConvertSidToStringSidW",
        "ConvertStringSecurityDescriptorToSecurityDescriptorW",
        "EventWriteTransfer",
        "FreeSid",
        "GetLengthSid",
        "GetSecurityDescriptorDacl",
        "GetSecurityDescriptorGroup",
        "GetSecurityDescriptorOwner",
        "GetTokenInformation",
        "ImpersonateLoggedOnUser",
        "InitializeAcl",
        "InitializeSecurityDescriptor",
        "LsaClose",
        "LsaFreeMemory",
        "LsaOpenPolicy",
        "LsaRetrievePrivateData",
        "LsaStorePrivateData",
        "OpenProcessToken",
        "OpenSCManagerW",
        "OpenServiceW",
        "OpenThreadToken",
        "QueryServiceConfigW",
        "RegCloseKey",
        "RegConnectRegistryW",
        "RegCreateKeyExW",
        "RegDeleteKeyExW",
        "RegDeleteKeyW",
        "RegDeleteValueW",
        "RegEnumKeyExW",
        "RegEnumKeyW",
        "RegFlushKey",
        "RegGetValueW",
        "RegOpenKeyExW",
        "RegQueryInfoKeyW",
        "RegQueryValueExW",
        "RegSetValueExW",
        "RevertToSelf",
        "SetNamedSecurityInfoW",
        "SetSecurityDescriptorDacl",
        "SetSecurityDescriptorGroup",
        "SetSecurityDescriptorOwner",
        "StartServiceW",
        "TraceMessage"
      ]
    },
    {
      "name": "user32.dll",
      "imports": 4,
      "functions": [
        "CharNextW",
        "CharPrevW",
        "LoadStringW",
        "UnregisterClassA"
      ]
    },
    {
      "name": "ole32.dll",
      "imports": 8,
      "functions": [
        "CoCreateInstance",
        "CoInitializeEx",
        "CoTaskMemAlloc",
        "CoTaskMemFree",
        "CoTaskMemRealloc",
        "CoUninitialize",
        "StringFromCLSID",
        "StringFromGUID2"
      ]
    },
    {
      "name": "oleaut32.dll",
      "imports": 0,
      "functions": []
    },
    {
      "name": "shell32.dll",
      "imports": 1,
      "functions": [
        "SHGetFileInfoW"
      ]
    },
    {
      "name": "setupapi.dll",
      "imports": 15,
      "functions": [
        "CM_Get_DevNode_Registry_Property_ExW",
        "CM_Get_Device_IDW",
        "CM_Get_Device_ID_ExW",
        "CM_Get_Parent_Ex",
        "CM_Locate_DevNodeW",
        "SetupDiCreateDeviceInfoList",
        "SetupDiDestroyDeviceInfoList",
        "SetupDiEnumDeviceInfo",
        "SetupDiGetClassDevsExW",
        "SetupDiGetDeviceInfoListDetailW",
        "SetupDiGetDeviceInstanceIdW",
        "SetupDiGetDeviceRegistryPropertyW",
        "SetupDiOpenClassRegKey",
        "SetupDiOpenDevRegKey",
        "SetupDiOpenDeviceInfoW"
      ]
    },
    {
      "name": "mprapi.dll",
      "imports": 31,
      "functions": [
        "MprConfigBufferFree",
        "MprConfigFreeRoutingDomainConfigEx",
        "MprConfigGetFriendlyName",
        "MprConfigInterfaceCreate",
        "MprConfigInterfaceDelete",
        "MprConfigInterfaceEnum",
        "MprConfigInterfaceGetHandle",
        "MprConfigInterfaceGetInfo",
        "MprConfigInterfaceTransportAdd",
        "MprConfigInterfaceTransportEnum",
        "MprConfigInterfaceTransportGetHandle",
        "MprConfigInterfaceTransportGetInfo",
        "MprConfigInterfaceTransportRemove",
        "MprConfigInterfaceTransportSetInfo",
        "MprConfigIsMultiTenancyEnabled",
        "MprConfigRoutingDomainEnumEx",
        "MprConfigRoutingDomainGetConfigEx",
        "MprConfigRoutingDomainSetConfigEx",
        "MprConfigServerConnect",
        "MprConfigServerDisconnect",
        "MprConfigTransportCreate",
        "MprConfigTransportDelete",
        "MprConfigTransportGetHandle",
        "MprConfigTransportGetInfo",
        "MprConfigTransportSetInfo",
        "MprInfoBlockAdd",
        "MprInfoBlockFind",
        "MprInfoBlockQuerySize",
        "MprInfoBlockRemove",
        "MprInfoBlockSet",
        "MprInfoDelete"
      ]
    },
    {
      "name": "crypt32.dll",
      "imports": 5,
      "functions": [
        "CertCloseStore",
        "CertFindCertificateInStore",
        "CertFreeCertificateContext",
        "CertNameToStrW",
        "CertOpenStore"
      ]
    },
    {
      "name": "profapi.dll",
      "imports": 0,
      "functions": []
    },
    {
      "name": "mfc42u.dll",
      "imports": 0,
      "functions": []
    },
    {
      "name": "rpcrt4.dll",
      "imports": 1,
      "functions": [
        "UuidCreate"
      ]
    },
    {
      "name": "ws2_32.dll",
      "imports": 0,
      "functions": []
    },
    {
      "name": "api-ms-win-devices-swdevice-l1-1-0.dll",
      "imports": 2,
      "functions": [
        "SwDeviceClose",
        "SwDeviceCreate"
      ]
    },
    {
      "name": "userenv.dll",
      "imports": 1,
      "functions": [
        "GetProfilesDirectoryW"
      ]
    },
    {
      "name": "rtutils.dll",
      "imports": 1,
      "functions": [
        "TracePrintfW"
      ]
    },
    {
      "name": "rasman.dll",
      "imports": 6,
      "functions": [
        "RasGetCalledIdInfo",
        "RasGetDeviceConfigInfo",
        "RasRpcConnectServer",
        "RasRpcDisconnectServer",
        "RasSetCalledIdInfo",
        "RasSetDeviceConfigInfo"
      ]
    },
    {
      "name": "api-ms-win-devices-query-l1-1-0.dll",
      "imports": 2,
      "functions": [
        "DevCloseObjectQuery",
        "DevCreateObjectQuery"
      ]
    },
    {
      "name": "netapi32.dll",
      "imports": 2,
      "functions": [
        "DsRoleFreeMemory",
        "DsRoleGetPrimaryDomainInformation"
      ]
    }
  ],
  "ImageDLLExports": {
    "exports": 5,
    "functions": [
      "DllCanUnloadNow",
      "DllGetClassObject",
      "DllMain",
      "DllRegisterServer",
      "DllUnregisterServer"
    ]
  },
  "ImageHashSignatures": {
    "sha2": "2a9608bcbf0a9f86cb1b7a61f2a55bf96f434e8f9b36a7df4f1895a166e52f8c"
  },
  "scan": {
    "intentions": 12,
    "uniq_apis_matched": 26,
    "results": [
      {
        "intent": "Implements Delayed Loads of DLL Resources",
        "tag": "Expert Input:IBO.0005 - Load DLL Resources With Delay During Runtime",
        "component": "---",
        "inputs": 2,
        "matches": 1,
        "apis": [
          "DelayLoadFailureHook"
        ]
      },
      {
        "intent": "Manipulate Windows Tokens",
        "tag": "Defense Evasion:T1134 - Access Token Manipulation",
        "component": "Privileges",
        "inputs": 10,
        "matches": 4,
        "apis": [
          "AdjustTokenPrivileges",
          "CheckTokenMembership",
          "OpenProcessToken",
          "OpenThreadToken"
        ]
      },
      {
        "intent": "Implements Features To Enumerate/Discover System Services And Their Configuration Data",
        "tag": "Expert Input:IBO.0006 - Enumerate System Services",
        "component": "Services",
        "inputs": 28,
        "matches": 3,
        "apis": [
          "OpenSCManagerW",
          "OpenServiceW",
          "QueryServiceConfigW"
        ]
      },
      {
        "intent": "Discover Configuration Attributes/Descriptions of the Windows Enterprise Domain",
        "tag": "Reconnaissance:T1590.001 - Domain Properties (Windows Enterprise)",
        "component": "---",
        "inputs": 24,
        "matches": 1,
        "apis": [
          "DsRoleGetPrimaryDomainInformation"
        ]
      },
      {
        "intent": "Query And Discover Windows Registry Configuration Settings",
        "tag": "Discovery:T1012 - Query Registry",
        "component": "Registry",
        "inputs": 11,
        "matches": 3,
        "apis": [
          "RegGetValueW",
          "RegQueryInfoKeyW",
          "RegQueryValueExW"
        ]
      },
      {
        "intent": "Delete Files From Disk Potentially Erasing Important Evidence To Cover Attack Activity",
        "tag": "Defense Evasion:T1070.004 - File Deletion",
        "component": "Filesystem",
        "inputs": 2,
        "matches": 1,
        "apis": [
          "DeleteFileW"
        ]
      },
      {
        "intent": "Enumerate Files or Directories on the Target System",
        "tag": "Discovery:T1083 - File and Directory Discovery",
        "component": "Filesystem",
        "inputs": 5,
        "matches": 1,
        "apis": [
          "FindFirstFileW"
        ]
      },
      {
        "intent": "Implements Features To Create/Manipulate The Windows Registry",
        "tag": "Expert Input:IBO.0008 - Create/Manipulate The Windows Registry",
        "component": "Registry",
        "inputs": 33,
        "matches": 6,
        "apis": [
          "RegCreateKeyExW",
          "RegDeleteKeyExW",
          "RegDeleteKeyW",
          "RegDeleteValueW",
          "RegOpenKeyExW",
          "RegSetValueExW"
        ]
      },
      {
        "intent": "Implements Features To Remotely Connect To A Target System And Access Its Windows Registry",
        "tag": "Expert Input:IBO.00010 - Connect To Remote Windows Registry",
        "component": "Networking",
        "inputs": 2,
        "matches": 1,
        "apis": [
          "RegConnectRegistryW"
        ]
      },
      {
        "intent": "Stealing Tokens To Impersonate Windows Identities",
        "tag": "Privilege Escalation:T1134.001 - Token Impersonation/Theft",
        "component": "Privileges",
        "inputs": 4,
        "matches": 1,
        "apis": [
          "ImpersonateLoggedOnUser"
        ]
      },
      {
        "intent": "Implements Features To Create/Manipulate System Services",
        "tag": "Expert Input:IBO.0007 - Create/Manipulate System Services",
        "component": "Services",
        "inputs": 19,
        "matches": 2,
        "apis": [
          "CloseServiceHandle",
          "StartServiceW"
        ]
      },
      {
        "intent": "Implements Features To Enumerate The Windows Registry",
        "tag": "Expert Input:IBO.0009 - Enumerate The Windows Registry",
        "component": "Registry",
        "inputs": 6,
        "matches": 2,
        "apis": [
          "RegEnumKeyExW",
          "RegEnumKeyW"
        ]
      }
    ]
  }
}