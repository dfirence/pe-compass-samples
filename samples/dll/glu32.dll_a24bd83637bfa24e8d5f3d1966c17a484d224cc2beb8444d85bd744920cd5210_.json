{
  "name": "glu32.dll",
  "path": "\\\\?\\C:\\Windows\\SysWOW64\\glu32.dll",
  "size": 245248,
  "is_64": false,
  "is_lib": true,
  "is_dotnet": true,
  "has_imports": true,
  "has_exports": true,
  "subsystem": 3,
  "subsystem_caption": "The Windows Character (Console UI) Subsystem",
  "libs": [
    "kernel32.dll",
    "msvcrt.dll",
    "opengl32.dll",
    "user32.dll"
  ],
  "imports": [
    {
      "lib": "user32.dll",
      "count": 2,
      "functions": [
        "LoadStringA",
        "LoadStringW"
      ]
    },
    {
      "lib": "kernel32.dll",
      "count": 17,
      "functions": [
        "DebugBreak",
        "GetCurrentProcess",
        "GetCurrentProcessId",
        "GetCurrentThreadId",
        "GetModuleHandleA",
        "GetSystemTimeAsFileTime",
        "GetTickCount",
        "LocalAlloc",
        "LocalFree",
        "LocalReAlloc",
        "QueryPerformanceCounter",
        "SetUnhandledExceptionFilter",
        "Sleep",
        "TerminateProcess",
        "UnhandledExceptionFilter",
        "lstrlenA",
        "lstrlenW"
      ]
    },
    {
      "lib": "opengl32.dll",
      "count": 32,
      "functions": [
        "glBegin",
        "glDisable",
        "glEnable",
        "glEnd",
        "glEvalCoord1f",
        "glEvalCoord2f",
        "glEvalMesh1",
        "glEvalMesh2",
        "glEvalPoint2",
        "glGetError",
        "glGetFloatv",
        "glGetIntegerv",
        "glGetString",
        "glMap1f",
        "glMap2f",
        "glMapGrid1f",
        "glMapGrid2d",
        "glMultMatrixd",
        "glMultMatrixf",
        "glNormal3f",
        "glOrtho",
        "glPixelStorei",
        "glPolygonMode",
        "glPopAttrib",
        "glPushAttrib",
        "glScalef",
        "glTexCoord2f",
        "glTexImage1D",
        "glTexImage2D",
        "glTranslated",
        "glTranslatef",
        "glVertex3f"
      ]
    },
    {
      "lib": "msvcrt.dll",
      "count": 25,
      "functions": [
        "??0exception@@QAE@ABV0@@Z",
        "??0exception@@QAE@XZ",
        "??1exception@@UAE@XZ",
        "??1type_info@@UAE@XZ",
        "?what@exception@@UBEPBDXZ",
        "_CxxThrowException",
        "_XcptFilter",
        "__CxxFrameHandler3",
        "_amsg_exit",
        "_callnewh",
        "_except_handler4_common",
        "_ftol2_sse",
        "_initterm",
        "_setjmp3",
        "cos",
        "fabs",
        "floor",
        "free",
        "longjmp",
        "malloc",
        "memcpy",
        "memset",
        "sin",
        "sqrt",
        "strstr"
      ]
    }
  ],
  "exports": {
    "count": 52,
    "functions": [
      "gluBeginCurve",
      "gluBeginPolygon",
      "gluBeginSurface",
      "gluBeginTrim",
      "gluBuild1DMipmaps",
      "gluBuild2DMipmaps",
      "gluCylinder",
      "gluDeleteNurbsRenderer",
      "gluDeleteQuadric",
      "gluDeleteTess",
      "gluDisk",
      "gluEndCurve",
      "gluEndPolygon",
      "gluEndSurface",
      "gluEndTrim",
      "gluErrorString",
      "gluErrorUnicodeStringEXT",
      "gluGetNurbsProperty",
      "gluGetString",
      "gluGetTessProperty",
      "gluLoadSamplingMatrices",
      "gluLookAt",
      "gluNewNurbsRenderer",
      "gluNewQuadric",
      "gluNewTess",
      "gluNextContour",
      "gluNurbsCallback",
      "gluNurbsCurve",
      "gluNurbsProperty",
      "gluNurbsSurface",
      "gluOrtho2D",
      "gluPartialDisk",
      "gluPerspective",
      "gluPickMatrix",
      "gluProject",
      "gluPwlCurve",
      "gluQuadricCallback",
      "gluQuadricDrawStyle",
      "gluQuadricNormals",
      "gluQuadricOrientation",
      "gluQuadricTexture",
      "gluScaleImage",
      "gluSphere",
      "gluTessBeginContour",
      "gluTessBeginPolygon",
      "gluTessCallback",
      "gluTessEndContour",
      "gluTessEndPolygon",
      "gluTessNormal",
      "gluTessProperty",
      "gluTessVertex",
      "gluUnProject"
    ]
  },
  "hashes": {
    "sha2": "a24bd83637bfa24e8d5f3d1966c17a484d224cc2beb8444d85bd744920cd5210",
    "ssdeep": "6144:EKz1SHucQdsj/wxqSVLvlKeNa8dVGFso6IHyioC+IgovS+bi8ip:tRcQdsj/ivlKeNLff"
  }
}