{
  "pe_name": "pla.dll",
  "pe_type": 523,
  "pe_size": 1493504,
  "pe_subsystem": 3,
  "pe_subsystem_caption": "The Windows character (Cosole UI) subsystem",
  "pe_path": "c:\\Windows\\WinSxS\\amd64_microsoft-windows-p..rastructureconsumer_31bf3856ad364e35_10.0.19041.1_none_69cd9c22cfcf9358\\pla.dll",
  "pe_timedate_stamp": 2962156484,
  "pe_timedate_human": "2063-11-13T05:14:44.000Z",
  "ImageDLLImports": [
    {
      "name": "msvcrt.dll",
      "imports": 44,
      "functions": [
        "??1type_info@@UEAA@XZ",
        "?name@type_info@@QEBAPEBDXZ",
        "_XcptFilter",
        "__C_specific_handler",
        "_amsg_exit",
        "_close",
        "_errno",
        "_get_osfhandle",
        "_initterm",
        "_lseek",
        "_purecall",
        "_read",
        "_vsnwprintf",
        "_wcsicmp",
        "_wcsnicmp",
        "_wfopen",
        "_wgetenv",
        "_wopen",
        "_wremove",
        "_write",
        "_wsplitpath_s",
        "_wtof",
        "_wtoi",
        "_wtol",
        "fclose",
        "free",
        "fwprintf",
        "iswspace",
        "malloc",
        "memcpy",
        "memmove",
        "memset",
        "qsort",
        "rand",
        "srand",
        "swscanf_s",
        "time",
        "vfwprintf",
        "wcschr",
        "wcscmp",
        "wcscspn",
        "wcsncmp",
        "wcsrchr",
        "wcsstr"
      ]
    },
    {
      "name": "ntdll.dll",
      "imports": 13,
      "functions": [
        "EtwEventRegister",
        "EtwEventUnregister",
        "EtwEventWrite",
        "EtwNotificationRegister",
        "EtwNotificationUnregister",
        "NtQuerySystemInformation",
        "NtQuerySystemTime",
        "RtlCaptureContext",
        "RtlFreeUnicodeString",
        "RtlLookupFunctionEntry",
        "RtlNtStatusToDosError",
        "RtlStringFromGUID",
        "RtlVirtualUnwind"
      ]
    },
    {
      "name": "api-ms-win-service-core-l1-1-0.dll",
      "imports": 2,
      "functions": [
        "RegisterServiceCtrlHandlerExW",
        "SetServiceStatus"
      ]
    },
    {
      "name": "api-ms-win-service-winsvc-l1-1-0.dll",
      "imports": 2,
      "functions": [
        "ControlService",
        "QueryServiceStatus"
      ]
    },
    {
      "name": "api-ms-win-service-management-l1-1-0.dll",
      "imports": 4,
      "functions": [
        "CloseServiceHandle",
        "OpenSCManagerW",
        "OpenServiceW",
        "StartServiceW"
      ]
    },
    {
      "name": "api-ms-win-service-management-l2-1-0.dll",
      "imports": 3,
      "functions": [
        "ChangeServiceConfig2W",
        "ChangeServiceConfigW",
        "QueryServiceConfigW"
      ]
    },
    {
      "name": "advapi32.dll",
      "imports": 55,
      "functions": [
        "AccessCheck",
        "AddAccessAllowedAceEx",
        "AddAce",
        "AdjustTokenPrivileges",
        "CheckTokenMembership",
        "ControlTraceW",
        "CreateWellKnownSid",
        "DuplicateTokenEx",
        "EnableTraceEx",
        "EnumerateTraceGuidsEx",
        "EqualSid",
        "EventAccessQuery",
        "EventAccessRemove",
        "FlushTraceW",
        "GetAce",
        "GetAclInformation",
        "GetFileSecurityW",
        "GetLengthSid",
        "GetSecurityDescriptorDacl",
        "GetSecurityDescriptorGroup",
        "GetSecurityDescriptorOwner",
        "GetSecurityDescriptorSacl",
        "GetTokenInformation",
        "ImpersonateLoggedOnUser",
        "InitializeAcl",
        "InitializeSecurityDescriptor",
        "LogonUserW",
        "LookupAccountNameW",
        "MakeAbsoluteSD",
        "OpenProcessToken",
        "OpenThreadToken",
        "QueryAllTracesW",
        "QueryTraceW",
        "RegCloseKey",
        "RegConnectRegistryW",
        "RegCreateKeyExW",
        "RegDeleteKeyW",
        "RegDeleteValueW",
        "RegEnumKeyExW",
        "RegEnumKeyW",
        "RegEnumValueW",
        "RegFlushKey",
        "RegOpenKeyExW",
        "RegQueryInfoKeyW",
        "RegQueryValueExW",
        "RegSetValueExW",
        "RevertToSelf",
        "SetNamedSecurityInfoW",
        "SetSecurityDescriptorDacl",
        "SetSecurityDescriptorGroup",
        "SetSecurityDescriptorOwner",
        "SetThreadToken",
        "StartTraceW",
        "StopTraceW",
        "UpdateTraceW"
      ]
    },
    {
      "name": "user32.dll",
      "imports": 6,
      "functions": [
        "CreateWindowExW",
        "DestroyWindow",
        "DispatchMessageW",
        "LoadStringW",
        "MsgWaitForMultipleObjects",
        "PeekMessageW"
      ]
    },
    {
      "name": "rpcrt4.dll",
      "imports": 18,
      "functions": [
        "NdrClientCall3",
        "NdrServerCall2",
        "NdrServerCallAll",
        "RpcBindingFree",
        "RpcBindingFromStringBindingW",
        "RpcBindingInqAuthClientW",
        "RpcBindingSetAuthInfoW",
        "RpcBindingToStringBindingW",
        "RpcImpersonateClient",
        "RpcRevertToSelf",
        "RpcServerInqCallAttributesW",
        "RpcServerRegisterIf3",
        "RpcServerUnregisterIfEx",
        "RpcServerUseProtseqEpW",
        "RpcStringBindingComposeW",
        "RpcStringBindingParseW",
        "RpcStringFreeW",
        "UuidCreate"
      ]
    },
    {
      "name": "pdh.dll",
      "imports": 11,
      "functions": [
        "PdhAddCounterW",
        "PdhCloseLog",
        "PdhCloseQuery",
        "PdhCollectQueryData",
        "PdhExpandWildCardPathW",
        "PdhGetFormattedCounterValue",
        "PdhOpenLogW",
        "PdhOpenQueryW",
        "PdhTranslate009CounterW",
        "PdhTranslateLocaleCounterW",
        "PdhUpdateLogW"
      ]
    },
    {
      "name": "tdh.dll",
      "imports": 4,
      "functions": [
        "TdhEnumerateProviderFieldInformation",
        "TdhEnumerateProviders",
        "TdhEnumerateRemoteWBEMProviderFieldInformation",
        "TdhEnumerateRemoteWBEMProviders"
      ]
    },
    {
      "name": "nsi.dll",
      "imports": 2,
      "functions": [
        "NsiAllocateAndGetTable",
        "NsiFreeTable"
      ]
    },
    {
      "name": "shlwapi.dll",
      "imports": 2,
      "functions": [
        "PathIsFileSpecW",
        "PathIsNetworkPathW"
      ]
    },
    {
      "name": "cabinet.dll",
      "imports": 0,
      "functions": []
    },
    {
      "name": "wevtapi.dll",
      "imports": 7,
      "functions": [
        "EvtClose",
        "EvtCreateRenderContext",
        "EvtGetChannelConfigProperty",
        "EvtNext",
        "EvtOpenChannelConfig",
        "EvtRender",
        "EvtSubscribe"
      ]
    },
    {
      "name": "kernel32.dll",
      "imports": 105,
      "functions": [
        "CloseHandle",
        "CompareStringW",
        "CopyFileExW",
        "CopyFileW",
        "CreateDirectoryW",
        "CreateEventW",
        "CreateFileW",
        "CreateProcessW",
        "CreateThread",
        "CreateWaitableTimerW",
        "DebugBreak",
        "DelayLoadFailureHook",
        "DeleteCriticalSection",
        "DeleteFileW",
        "DisableThreadLibraryCalls",
        "DosDateTimeToFileTime",
        "DuplicateHandle",
        "EnterCriticalSection",
        "ExpandEnvironmentStringsW",
        "FileTimeToDosDateTime",
        "FileTimeToLocalFileTime",
        "FileTimeToSystemTime",
        "FindClose",
        "FindFirstFileW",
        "FindNextFileW",
        "FindResourceW",
        "FormatMessageW",
        "FreeLibrary",
        "FreeResource",
        "GetCommandLineW",
        "GetComputerNameW",
        "GetCurrentProcess",
        "GetCurrentProcessId",
        "GetCurrentThread",
        "GetCurrentThreadId",
        "GetDateFormatW",
        "GetDiskFreeSpaceExW",
        "GetExitCodeProcess",
        "GetExitCodeThread",
        "GetFileAttributesW",
        "GetFileInformationByHandle",
        "GetFileMUIPath",
        "GetFileSizeEx",
        "GetFullPathNameW",
        "GetLastError",
        "GetLocalTime",
        "GetLocaleInfoW",
        "GetModuleFileNameW",
        "GetProcessHeap",
        "GetSystemDirectoryW",
        "GetSystemTime",
        "GetSystemTimeAsFileTime",
        "GetTempFileNameW",
        "GetTempPathW",
        "GetTickCount",
        "GetTickCount64",
        "GetTimeFormatW",
        "GetTimeZoneInformation",
        "GetUserDefaultUILanguage",
        "GetWindowsDirectoryW",
        "GlobalAlloc",
        "GlobalFree",
        "GlobalLock",
        "GlobalUnlock",
        "HeapAlloc",
        "HeapFree",
        "HeapReAlloc",
        "HeapSize",
        "HeapValidate",
        "InitializeCriticalSection",
        "IsDebuggerPresent",
        "IsWow64Process",
        "K32GetModuleFileNameExW",
        "LeaveCriticalSection",
        "LoadLibraryExW",
        "LoadLibraryW",
        "LoadResource",
        "LocalFileTimeToFileTime",
        "LocalFree",
        "LockResource",
        "MultiByteToWideChar",
        "OpenEventW",
        "OpenProcess",
        "QueryPerformanceCounter",
        "RemoveDirectoryW",
        "ResetEvent",
        "ResolveDelayLoadedAPI",
        "SetEvent",
        "SetFileAttributesW",
        "SetFileTime",
        "SetPriorityClass",
        "SetUnhandledExceptionFilter",
        "SetWaitableTimer",
        "SizeofResource",
        "Sleep",
        "SystemTimeToFileTime",
        "TerminateProcess",
        "UnhandledExceptionFilter",
        "UnregisterWait",
        "WaitForMultipleObjects",
        "WaitForSingleObject",
        "WideCharToMultiByte",
        "Wow64DisableWow64FsRedirection",
        "Wow64RevertWow64FsRedirection",
        "WriteFile"
      ]
    }
  ],
  "ImageDLLExports": {
    "exports": 15,
    "functions": [
      "ServiceMain",
      "SvchostPushServiceGlobals",
      "DllCanUnloadNow",
      "DllGetClassObject",
      "DllRegisterServer",
      "DllUnregisterServer",
      "PlaDeleteReport",
      "PlaExpandTaskArguments",
      "PlaExtractCabinet",
      "PlaGetLegacyAlertActionsFlagsFromString",
      "PlaGetLegacyAlertActionsStringFromFlags",
      "PlaGetServerCapabilities",
      "PlaHost",
      "PlaServer",
      "PlaUpgrade"
    ]
  },
  "ImageHashSignatures": {
    "sha2": "44c16e194258c9143a45f4022f9c5de229e217d6ff7f944f105fe631be9ef4a7"
  },
  "scan": {
    "intentions": 14,
    "uniq_apis_matched": 32,
    "results": [
      {
        "intent": "Implements Delayed Loads of DLL Resources",
        "tag": "Expert Input:IBO.0005 - Load DLL Resources With Delay During Runtime",
        "component": "---",
        "inputs": 2,
        "matches": 2,
        "apis": [
          "DelayLoadFailureHook",
          "ResolveDelayLoadedAPI"
        ]
      },
      {
        "intent": "Query And Discover Windows Registry Configuration Settings",
        "tag": "Discovery:T1012 - Query Registry",
        "component": "Registry",
        "inputs": 11,
        "matches": 2,
        "apis": [
          "RegQueryInfoKeyW",
          "RegQueryValueExW"
        ]
      },
      {
        "intent": "Implements Features To Execute or Spawn New Processes On The Target System",
        "tag": "Expert Input:IBO.0002 - Spawn New Process",
        "component": "Processes",
        "inputs": 7,
        "matches": 1,
        "apis": [
          "CreateProcessw"
        ]
      },
      {
        "intent": "Implements Features To Enumerate/Discover System Services And Their Configuration Data",
        "tag": "Expert Input:IBO.0006 - Enumerate System Services",
        "component": "Services",
        "inputs": 28,
        "matches": 4,
        "apis": [
          "OpenSCManagerW",
          "OpenServiceW",
          "QueryServiceConfigW",
          "QueryServiceStatus"
        ]
      },
      {
        "intent": "Discover Time Configuration Settings On The Target System",
        "tag": "Discovery:T1124 - System Time Discovery",
        "component": "---",
        "inputs": 5,
        "matches": 1,
        "apis": [
          "GetTimeZoneInformation"
        ]
      },
      {
        "intent": "Implements Features To Create/Manipulate System Services",
        "tag": "Expert Input:IBO.0007 - Create/Manipulate System Services",
        "component": "Services",
        "inputs": 19,
        "matches": 5,
        "apis": [
          "CloseServiceHandle",
          "ControlService",
          "RegisterServiceCtrlHandlerExW",
          "SetServiceStatus",
          "StartServiceW"
        ]
      },
      {
        "intent": "Manipulate Windows Tokens",
        "tag": "Defense Evasion:T1134 - Access Token Manipulation",
        "component": "Privileges",
        "inputs": 10,
        "matches": 4,
        "apis": [
          "AdjustTokenPrivileges",
          "CheckTokenMembership",
          "OpenProcessToken",
          "OpenThreadToken"
        ]
      },
      {
        "intent": "Implements Features To Create/Manipulate The Windows Registry",
        "tag": "Expert Input:IBO.0008 - Create/Manipulate The Windows Registry",
        "component": "Registry",
        "inputs": 33,
        "matches": 5,
        "apis": [
          "RegCreateKeyExW",
          "RegDeleteKeyW",
          "RegDeleteValueW",
          "RegOpenKeyExW",
          "RegSetValueExW"
        ]
      },
      {
        "intent": "Implements Features To Remotely Connect To A Target System And Access Its Windows Registry",
        "tag": "Expert Input:IBO.00010 - Connect To Remote Windows Registry",
        "component": "Networking",
        "inputs": 2,
        "matches": 1,
        "apis": [
          "RegConnectRegistryW"
        ]
      },
      {
        "intent": "Implements Features To Enumerate The Windows Registry",
        "tag": "Expert Input:IBO.0009 - Enumerate The Windows Registry",
        "component": "Registry",
        "inputs": 6,
        "matches": 3,
        "apis": [
          "RegEnumKeyExW",
          "RegEnumKeyW",
          "RegEnumValueW"
        ]
      },
      {
        "intent": "Stealing Tokens To Impersonate Windows Identities",
        "tag": "Privilege Escalation:T1134.001 - Token Impersonation/Theft",
        "component": "Privileges",
        "inputs": 4,
        "matches": 1,
        "apis": [
          "ImpersonateLoggedOnUser"
        ]
      },
      {
        "intent": "Delete Files From Disk Potentially Erasing Important Evidence To Cover Attack Activity",
        "tag": "Defense Evasion:T1070.004 - File Deletion",
        "component": "Filesystem",
        "inputs": 2,
        "matches": 1,
        "apis": [
          "DeleteFileW"
        ]
      },
      {
        "intent": "Enumerate Files or Directories on the Target System",
        "tag": "Discovery:T1083 - File and Directory Discovery",
        "component": "Filesystem",
        "inputs": 5,
        "matches": 1,
        "apis": [
          "FindFirstFileW"
        ]
      },
      {
        "intent": "Create Token To Impersonate",
        "tag": "Privilege Escalation:T1134.003 - Make and Impersonate Token",
        "component": "Privileges",
        "inputs": 2,
        "matches": 1,
        "apis": [
          "SetThreadToken"
        ]
      }
    ]
  }
}