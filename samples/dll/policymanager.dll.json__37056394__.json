{
  "pe_name": "policymanager.dll",
  "pe_type": 523,
  "pe_size": 647208,
  "pe_subsystem": 3,
  "pe_subsystem_caption": "The Windows character (Cosole UI) subsystem",
  "pe_path": "c:\\Windows\\WinSxS\\amd64_microsoft-windows-d..ent-dmpolicymanager_31bf3856ad364e35_10.0.19041.1741_none_b6f018c567f437ff\\policymanager.dll",
  "pe_timedate_stamp": 3907446010,
  "pe_timedate_human": "2093-10-27T01:40:10.000Z",
  "ImageDLLImports": [
    {
      "name": "msvcp110_win.dll",
      "imports": 12,
      "functions": [
        "??0_Container_base12@std@@QEAA@XZ",
        "??0_Lockit@std@@QEAA@H@Z",
        "??0id@locale@std@@QEAA@_K@Z",
        "??1_Container_base12@std@@QEAA@XZ",
        "??1_Lockit@std@@QEAA@XZ",
        "?_Orphan_all@_Container_base0@std@@QEAAXXZ",
        "?_Orphan_all@_Container_base12@std@@QEAAXXZ",
        "?_Syserror_map@std@@YAPEBDH@Z",
        "?_Winerror_map@std@@YAPEBDH@Z",
        "?_Xbad_alloc@std@@YAXXZ",
        "?_Xlength_error@std@@YAXPEBD@Z",
        "?_Xout_of_range@std@@YAXPEBD@Z"
      ]
    },
    {
      "name": "msvcrt.dll",
      "imports": 42,
      "functions": [
        "??0exception@@QEAA@AEBV0@@Z",
        "??0exception@@QEAA@XZ",
        "??1exception@@UEAA@XZ",
        "??1type_info@@UEAA@XZ",
        "??3@YAXPEAX@Z",
        "??_V@YAXPEAX@Z",
        "?terminate@@YAXXZ",
        "_CxxThrowException",
        "_XcptFilter",
        "__C_specific_handler",
        "__CxxFrameHandler3",
        "__dllonexit",
        "_amsg_exit",
        "_callnewh",
        "_errno",
        "_initterm",
        "_lock",
        "_onexit",
        "_purecall",
        "_ultow_s",
        "_unlock",
        "_vsnprintf_s",
        "_vsnwprintf",
        "_wcsicmp",
        "_wcsnicmp",
        "_wtoi",
        "free",
        "malloc",
        "memcmp",
        "memcpy",
        "memcpy_s",
        "memmove",
        "memmove_s",
        "memset",
        "sprintf_s",
        "wcschr",
        "wcscmp",
        "wcsncpy_s",
        "wcsrchr",
        "wcsstr",
        "wcstok_s",
        "wcstoul"
      ]
    },
    {
      "name": "api-ms-win-eventing-provider-l1-1-0.dll",
      "imports": 5,
      "functions": [
        "EventActivityIdControl",
        "EventRegister",
        "EventSetInformation",
        "EventUnregister",
        "EventWriteTransfer"
      ]
    },
    {
      "name": "api-ms-win-core-libraryloader-l1-2-0.dll",
      "imports": 7,
      "functions": [
        "DisableThreadLibraryCalls",
        "FreeLibrary",
        "GetModuleFileNameA",
        "GetModuleFileNameW",
        "GetModuleHandleExW",
        "GetModuleHandleW",
        "GetProcAddress"
      ]
    },
    {
      "name": "api-ms-win-core-debug-l1-1-0.dll",
      "imports": 3,
      "functions": [
        "DebugBreak",
        "IsDebuggerPresent",
        "OutputDebugStringW"
      ]
    },
    {
      "name": "api-ms-win-core-heap-l2-1-0.dll",
      "imports": 3,
      "functions": [
        "GlobalFree",
        "LocalAlloc",
        "LocalFree"
      ]
    },
    {
      "name": "api-ms-win-core-registry-l1-1-0.dll",
      "imports": 13,
      "functions": [
        "RegCloseKey",
        "RegCreateKeyExW",
        "RegDeleteKeyExW",
        "RegDeleteTreeW",
        "RegDeleteValueW",
        "RegEnumKeyExW",
        "RegEnumValueW",
        "RegGetValueW",
        "RegOpenCurrentUser",
        "RegOpenKeyExW",
        "RegQueryInfoKeyW",
        "RegQueryValueExW",
        "RegSetValueExW"
      ]
    },
    {
      "name": "api-ms-win-core-handle-l1-1-0.dll",
      "imports": 1,
      "functions": [
        "CloseHandle"
      ]
    },
    {
      "name": "api-ms-win-core-synch-l1-1-0.dll",
      "imports": 16,
      "functions": [
        "AcquireSRWLockExclusive",
        "AcquireSRWLockShared",
        "CreateMutexExW",
        "CreateSemaphoreExW",
        "DeleteCriticalSection",
        "EnterCriticalSection",
        "InitializeCriticalSectionEx",
        "LeaveCriticalSection",
        "OpenMutexW",
        "OpenSemaphoreW",
        "ReleaseMutex",
        "ReleaseSRWLockExclusive",
        "ReleaseSRWLockShared",
        "ReleaseSemaphore",
        "WaitForSingleObject",
        "WaitForSingleObjectEx"
      ]
    },
    {
      "name": "api-ms-win-core-errorhandling-l1-1-0.dll",
      "imports": 4,
      "functions": [
        "GetLastError",
        "SetLastError",
        "SetUnhandledExceptionFilter",
        "UnhandledExceptionFilter"
      ]
    },
    {
      "name": "api-ms-win-core-processthreads-l1-1-0.dll",
      "imports": 7,
      "functions": [
        "GetCurrentProcess",
        "GetCurrentProcessId",
        "GetCurrentThread",
        "GetCurrentThreadId",
        "OpenProcessToken",
        "OpenThreadToken",
        "TerminateProcess"
      ]
    },
    {
      "name": "api-ms-win-core-localization-l1-2-0.dll",
      "imports": 1,
      "functions": [
        "FormatMessageW"
      ]
    },
    {
      "name": "rpcrt4.dll",
      "imports": 2,
      "functions": [
        "UuidCreate",
        "UuidFromStringW"
      ]
    },
    {
      "name": "api-ms-win-core-heap-l1-1-0.dll",
      "imports": 3,
      "functions": [
        "GetProcessHeap",
        "HeapAlloc",
        "HeapFree"
      ]
    },
    {
      "name": "api-ms-win-core-threadpool-l1-2-0.dll",
      "imports": 4,
      "functions": [
        "CloseThreadpoolTimer",
        "CreateThreadpoolTimer",
        "SetThreadpoolTimer",
        "WaitForThreadpoolTimerCallbacks"
      ]
    },
    {
      "name": "api-ms-win-core-sysinfo-l1-1-0.dll",
      "imports": 4,
      "functions": [
        "GetSystemTime",
        "GetSystemTimeAsFileTime",
        "GetTickCount",
        "GetVersionExW"
      ]
    },
    {
      "name": "api-ms-win-core-sysinfo-l1-2-0.dll",
      "imports": 1,
      "functions": [
        "GetProductInfo"
      ]
    },
    {
      "name": "api-ms-win-core-processenvironment-l1-1-0.dll",
      "imports": 2,
      "functions": [
        "ExpandEnvironmentStringsW",
        "GetCurrentDirectoryW"
      ]
    },
    {
      "name": "api-ms-win-core-libraryloader-l1-2-1.dll",
      "imports": 1,
      "functions": [
        "LoadLibraryW"
      ]
    },
    {
      "name": "api-ms-win-core-registry-l1-1-1.dll",
      "imports": 1,
      "functions": [
        "RegDeleteKeyValueW"
      ]
    },
    {
      "name": "api-ms-win-core-string-l1-1-0.dll",
      "imports": 3,
      "functions": [
        "CompareStringW",
        "MultiByteToWideChar",
        "WideCharToMultiByte"
      ]
    },
    {
      "name": "api-ms-win-core-file-l1-1-0.dll",
      "imports": 16,
      "functions": [
        "CreateDirectoryW",
        "CreateFileW",
        "DeleteFileW",
        "FindClose",
        "FindFirstFileW",
        "FindNextFileW",
        "GetFileAttributesW",
        "GetFileInformationByHandle",
        "GetFileSizeEx",
        "GetFinalPathNameByHandleW",
        "GetFullPathNameW",
        "GetLongPathNameW",
        "ReadFile",
        "SetFileAttributesW",
        "SetFileInformationByHandle",
        "WriteFile"
      ]
    },
    {
      "name": "api-ms-win-core-synch-l1-2-0.dll",
      "imports": 5,
      "functions": [
        "InitOnceBeginInitialize",
        "InitOnceComplete",
        "Sleep",
        "SleepConditionVariableSRW",
        "WakeAllConditionVariable"
      ]
    },
    {
      "name": "api-ms-win-core-datetime-l1-1-1.dll",
      "imports": 2,
      "functions": [
        "GetDateFormatEx",
        "GetTimeFormatEx"
      ]
    },
    {
      "name": "api-ms-win-core-rtlsupport-l1-1-0.dll",
      "imports": 4,
      "functions": [
        "RtlCaptureContext",
        "RtlCompareMemory",
        "RtlLookupFunctionEntry",
        "RtlVirtualUnwind"
      ]
    },
    {
      "name": "api-ms-win-core-profile-l1-1-0.dll",
      "imports": 1,
      "functions": [
        "QueryPerformanceCounter"
      ]
    },
    {
      "name": "api-ms-win-core-registry-l2-1-0.dll",
      "imports": 1,
      "functions": [
        "RegDeleteKeyW"
      ]
    },
    {
      "name": "api-ms-win-core-heap-obsolete-l1-1-0.dll",
      "imports": 3,
      "functions": [
        "GlobalLock",
        "GlobalSize",
        "GlobalUnlock"
      ]
    },
    {
      "name": "ntdll.dll",
      "imports": 12,
      "functions": [
        "NtQuerySecurityAttributesToken",
        "NtSetInformationFile",
        "NtSetInformationToken",
        "RtlAllocateHeap",
        "RtlFreeHeap",
        "RtlGetVersion",
        "RtlInitUnicodeString",
        "RtlIsStateSeparationEnabled",
        "RtlNtStatusToDosError",
        "RtlPublishWnfStateData",
        "RtlQueryWnfMetaNotification",
        "RtlWaitForWnfMetaNotification"
      ]
    },
    {
      "name": "api-ms-win-core-processthreads-l1-1-1.dll",
      "imports": 1,
      "functions": [
        "GetProcessMitigationPolicy"
      ]
    },
    {
      "name": "api-ms-win-security-base-l1-1-0.dll",
      "imports": 7,
      "functions": [
        "AdjustTokenPrivileges",
        "CheckTokenMembership",
        "CopySid",
        "GetLengthSid",
        "GetTokenInformation",
        "ImpersonateLoggedOnUser",
        "RevertToSelf"
      ]
    },
    {
      "name": "api-ms-win-security-sddl-l1-1-0.dll",
      "imports": 1,
      "functions": [
        "ConvertSidToStringSidW"
      ]
    },
    {
      "name": "api-ms-win-core-apiquery-l1-1-0.dll",
      "imports": 1,
      "functions": [
        "ApiSetQueryApiSetPresence"
      ]
    },
    {
      "name": "api-ms-win-core-io-l1-1-0.dll",
      "imports": 1,
      "functions": [
        "DeviceIoControl"
      ]
    },
    {
      "name": "api-ms-win-core-file-l2-1-0.dll",
      "imports": 1,
      "functions": [
        "GetFileInformationByHandleEx"
      ]
    },
    {
      "name": "api-ms-win-core-delayload-l1-1-1.dll",
      "imports": 1,
      "functions": [
        "ResolveDelayLoadedAPI"
      ]
    },
    {
      "name": "api-ms-win-core-delayload-l1-1-0.dll",
      "imports": 1,
      "functions": [
        "DelayLoadFailureHook"
      ]
    }
  ],
  "ImageDLLExports": {
    "exports": 130,
    "functions": [
      "EnterprisePolicyManagerStore_AcquireMergeLock",
      "EnterprisePolicyManagerStore_CSPConfigSourceAreaCreateNodeInstance",
      "EnterprisePolicyManagerStore_CSPConfigSourceAreaDeleteChild",
      "EnterprisePolicyManagerStore_CSPConfigSourceAreaGetChildNodeNames",
      "EnterprisePolicyManagerStore_CSPConfigSourceAreaPolicyCreateNodeInstance",
      "EnterprisePolicyManagerStore_CSPConfigSourceAreaPolicyGetValue",
      "EnterprisePolicyManagerStore_CSPConfigSourceAreaPolicySetValue",
      "EnterprisePolicyManagerStore_CSPConfigSourceDeleteChild",
      "EnterprisePolicyManagerStore_CSPResultAreaGetChildNodeNames",
      "EnterprisePolicyManagerStore_CSPResultAreaPolicyGetValue",
      "EnterprisePolicyManagerStore_CSPResultGetAreaChildNodeNames",
      "EnterprisePolicyManagerStore_CreateProviderHive",
      "EnterprisePolicyManagerStore_DeleteEnrollmentAdmxMetadata",
      "EnterprisePolicyManagerStore_DeleteEnrollmentAppAdmxMetadata",
      "EnterprisePolicyManagerStore_DeleteEnrollmentAppSettingTypeAdmxMetadata",
      "EnterprisePolicyManagerStore_DeleteProvider",
      "EnterprisePolicyManagerStore_DeleteProviderContextSidArea",
      "EnterprisePolicyManagerStore_DeleteProviderContextSidAreaPolicy",
      "EnterprisePolicyManagerStore_DeleteProviderIdAndMerge",
      "EnterprisePolicyManagerStore_DeleteProviderIdAndMergeScopeData",
      "EnterprisePolicyManagerStore_DeleteVirtuallyDeletedHive",
      "EnterprisePolicyManagerStore_DoesProviderContextNameExist",
      "EnterprisePolicyManagerStore_DoesProviderContextSidAreaExist",
      "EnterprisePolicyManagerStore_DoesProviderContextSidAreaPolicyValueExist",
      "EnterprisePolicyManagerStore_DoesProviderExist",
      "EnterprisePolicyManagerStore_EDPCSPConfigSourceAreaDeleteChild",
      "EnterprisePolicyManagerStore_EDPCSPConfigSourceAreaPolicyGetValue",
      "EnterprisePolicyManagerStore_EDPCSPConfigSourceAreaPolicySetValue",
      "EnterprisePolicyManagerStore_EnsureProviderContextNameExist",
      "EnterprisePolicyManagerStore_EnsureProviderContextSidAreaExist",
      "EnterprisePolicyManagerStore_EvaluatePoliciesUpdateCurrent",
      "EnterprisePolicyManagerStore_FreeURIsOfProviders",
      "EnterprisePolicyManagerStore_GetAdmxFileData",
      "EnterprisePolicyManagerStore_GetAllCurrentSidAreaPolicies",
      "EnterprisePolicyManagerStore_GetAllCurrentSidAreas",
      "EnterprisePolicyManagerStore_GetAllCurrentSids",
      "EnterprisePolicyManagerStore_GetAllDefaultAreaPolicies",
      "EnterprisePolicyManagerStore_GetAllDefaultAreas",
      "EnterprisePolicyManagerStore_GetAllProviderContextSidAreaPolicies",
      "EnterprisePolicyManagerStore_GetAllProviderContextSidAreas",
      "EnterprisePolicyManagerStore_GetAllProviderContextSids",
      "EnterprisePolicyManagerStore_GetAllProviderIds",
      "EnterprisePolicyManagerStore_GetAllProviderPolicyStringValues",
      "EnterprisePolicyManagerStore_GetAllURIsOfProviders",
      "EnterprisePolicyManagerStore_GetBinaryPolicyValue",
      "EnterprisePolicyManagerStore_GetCurrentPolicyValue",
      "EnterprisePolicyManagerStore_GetEnrollmentState",
      "EnterprisePolicyManagerStore_GetEnrollmentTypeFromEnrollment",
      "EnterprisePolicyManagerStore_GetIntPolicyValue",
      "EnterprisePolicyManagerStore_GetPolicyDoNotAllowFromMetadata",
      "EnterprisePolicyManagerStore_GetPolicyLowHighRangeFromMetadata",
      "EnterprisePolicyManagerStore_GetPolicyTypeFromMetadata",
      "EnterprisePolicyManagerStore_GetProviderContextSidAreaPolicyValue",
      "EnterprisePolicyManagerStore_GetSnapshotOfPolicyValue",
      "EnterprisePolicyManagerStore_GetStringPolicyValue",
      "EnterprisePolicyManagerStore_GetTrueArea",
      "EnterprisePolicyManagerStore_GetWinningProvider",
      "EnterprisePolicyManagerStore_IngestAdmxTextBlob",
      "EnterprisePolicyManagerStore_IsADMXIngestionAllowed",
      "EnterprisePolicyManagerStore_IsAreaPolicySLAPIAllowed",
      "EnterprisePolicyManagerStore_IsAreaPolicySLAPIAllowedGivenSLAPIPolicyString",
      "EnterprisePolicyManagerStore_IsPolicyAreaForIngestedAdmx",
      "EnterprisePolicyManagerStore_IsPolicySetByMobileDeviceManager",
      "EnterprisePolicyManagerStore_IsURISetByProvider",
      "EnterprisePolicyManagerStore_IsValidArea",
      "EnterprisePolicyManagerStore_IsValidPolicy",
      "EnterprisePolicyManagerStore_PerformEvaluatorMerge",
      "EnterprisePolicyManagerStore_PublishAnyDelayedWnfs",
      "EnterprisePolicyManagerStore_PublishPolicyWNFCache",
      "EnterprisePolicyManagerStore_ReadPolicyMetadata",
      "EnterprisePolicyManagerStore_RefreshAll",
      "EnterprisePolicyManagerStore_ReleaseMergeLock",
      "EnterprisePolicyManagerStore_SetEnrollmentDormantState",
      "EnterprisePolicyManagerStore_SetGlobalValueChangedDirtyFlagInCurrentForArea",
      "EnterprisePolicyManagerStore_SetProviderContextSidAreaPolicyValue",
      "EnterprisePolicyManagerStore_VerifyAdmxPoliciesAreNotSet",
      "MDMWinsOverGP_IsGPPolicySetByMDMEx",
      "PolicyManager_FreeBinaryValue",
      "PolicyManager_FreeGetPolicyData",
      "PolicyManager_FreeGroupAreaPolicyCollection",
      "PolicyManager_FreeStringValue",
      "PolicyManager_FreeStringValues",
      "PolicyManager_GetAboveLockPolicy_AllowActionCenterNotifications",
      "PolicyManager_GetAccountsPolicy_AllowAddingNonMicrosoftAccountsManually",
      "PolicyManager_GetAccountsPolicy_AllowMicrosoftAccountConnection",
      "PolicyManager_GetApplicationManagementPolicy_AllowStore",
      "PolicyManager_GetApplicationManagementPolicy_ApplicationRestrictions",
      "PolicyManager_GetBrowserPolicy_AllowBrowser",
      "PolicyManager_GetCameraPolicy_AllowCamera",
      "PolicyManager_GetConnectivityPolicy_AllowNFC",
      "PolicyManager_GetConnectivityPolicy_AllowUSBConnection",
      "PolicyManager_GetDeviceLockPolicy_AllowIdleReturnWithoutPassword",
      "PolicyManager_GetDeviceLockPolicy_AllowSimpleDevicePassword",
      "PolicyManager_GetDeviceLockPolicy_AlphanumericDevicePasswordRequired",
      "PolicyManager_GetDeviceLockPolicy_DevicePasswordEnabled",
      "PolicyManager_GetDeviceLockPolicy_DevicePasswordExpiration",
      "PolicyManager_GetDeviceLockPolicy_DevicePasswordHistory",
      "PolicyManager_GetDeviceLockPolicy_MaxDevicePasswordFailedAttempts",
      "PolicyManager_GetDeviceLockPolicy_MaxInactivityTimeDeviceLock",
      "PolicyManager_GetDeviceLockPolicy_MinDevicePasswordComplexCharacters",
      "PolicyManager_GetDeviceLockPolicy_MinDevicePasswordLength",
      "PolicyManager_GetExperiencePolicy_AllowCopyPaste",
      "PolicyManager_GetExperiencePolicy_AllowCortana",
      "PolicyManager_GetExperiencePolicy_AllowScreenCapture",
      "PolicyManager_GetExperiencePolicy_AllowSyncMySettings",
      "PolicyManager_GetExperiencePolicy_AllowVoiceRecording",
      "PolicyManager_GetGroupAreaPolicyCollectionGivenGroupName",
      "PolicyManager_GetPolicy",
      "PolicyManager_GetPolicyBinary",
      "PolicyManager_GetPolicyBinaryGivenEnrollmentId",
      "PolicyManager_GetPolicyInt",
      "PolicyManager_GetPolicyIntGivenEnrollmentId",
      "PolicyManager_GetPolicyString",
      "PolicyManager_GetPolicyStringGivenEnrollmentId",
      "PolicyManager_GetPolicyStringValues",
      "PolicyManager_GetSearchPolicy_AllowSearchToUseLocation",
      "PolicyManager_GetSearchPolicy_SafeSearchPermissions",
      "PolicyManager_GetSecurityPolicy_AllowManualRootCertificateInstallation",
      "PolicyManager_GetSecurityPolicy_RequireDeviceEncryption",
      "PolicyManager_GetSystemPolicy_AllowLocation",
      "PolicyManager_GetSystemPolicy_AllowStorageCard",
      "PolicyManager_GetSystemPolicy_AllowUserToResetPhone",
      "PolicyManager_GetWiFiPolicy_AllowAutoConnectToWiFiSenseHotspots",
      "PolicyManager_GetWiFiPolicy_AllowInternetSharing",
      "PolicyManager_GetWiFiPolicy_AllowManualWiFiConfiguration",
      "PolicyManager_GetWiFiPolicy_AllowWiFi",
      "PolicyManager_IsPolicySetByMobileDeviceManager",
      "PolicyManager_PublishPolicyWNFCache",
      "SettingsManagerStore_GetWnfsForSettingPath",
      "SettingsManagerStore_ReleaseWnfNames"
    ]
  },
  "ImageHashSignatures": {
    "sha2": "310a5d51040408ac6abb14f219cc8bfc285c204ab5161b397fd62908f5706b5c"
  },
  "scan": {
    "intentions": 9,
    "uniq_apis_matched": 22,
    "results": [
      {
        "intent": "Enumerate Files or Directories on the Target System",
        "tag": "Discovery:T1083 - File and Directory Discovery",
        "component": "Filesystem",
        "inputs": 5,
        "matches": 1,
        "apis": [
          "FindFirstFileW"
        ]
      },
      {
        "intent": "Manipulate Windows Tokens",
        "tag": "Defense Evasion:T1134 - Access Token Manipulation",
        "component": "Privileges",
        "inputs": 10,
        "matches": 4,
        "apis": [
          "AdjustTokenPrivileges",
          "CheckTokenMembership",
          "OpenProcessToken",
          "OpenThreadToken"
        ]
      },
      {
        "intent": "Implements Delayed Loads of DLL Resources",
        "tag": "Expert Input:IBO.0005 - Load DLL Resources With Delay During Runtime",
        "component": "---",
        "inputs": 2,
        "matches": 2,
        "apis": [
          "DelayLoadFailureHook",
          "ResolveDelayLoadedAPI"
        ]
      },
      {
        "intent": "Implements Features To Enumerate The Windows Registry",
        "tag": "Expert Input:IBO.0009 - Enumerate The Windows Registry",
        "component": "Registry",
        "inputs": 6,
        "matches": 2,
        "apis": [
          "RegEnumKeyExW",
          "RegEnumValueW"
        ]
      },
      {
        "intent": "Delete Files From Disk Potentially Erasing Important Evidence To Cover Attack Activity",
        "tag": "Defense Evasion:T1070.004 - File Deletion",
        "component": "Filesystem",
        "inputs": 2,
        "matches": 1,
        "apis": [
          "DeleteFileW"
        ]
      },
      {
        "intent": "Query And Discover Windows Registry Configuration Settings",
        "tag": "Discovery:T1012 - Query Registry",
        "component": "Registry",
        "inputs": 11,
        "matches": 3,
        "apis": [
          "RegGetValueW",
          "RegQueryInfoKeyW",
          "RegQueryValueExW"
        ]
      },
      {
        "intent": "Query and Discovery General Attributes From The Target System",
        "tag": "Discovery:T1082 - System Information Discovery",
        "component": "---",
        "inputs": 3,
        "matches": 1,
        "apis": [
          "RtlGetVersion"
        ]
      },
      {
        "intent": "Stealing Tokens To Impersonate Windows Identities",
        "tag": "Privilege Escalation:T1134.001 - Token Impersonation/Theft",
        "component": "Privileges",
        "inputs": 4,
        "matches": 1,
        "apis": [
          "ImpersonateLoggedOnUser"
        ]
      },
      {
        "intent": "Implements Features To Create/Manipulate The Windows Registry",
        "tag": "Expert Input:IBO.0008 - Create/Manipulate The Windows Registry",
        "component": "Registry",
        "inputs": 33,
        "matches": 7,
        "apis": [
          "RegCreateKeyExW",
          "RegDeleteKeyExW",
          "RegDeleteKeyW",
          "RegDeleteValueW",
          "RegOpenCurrentUser",
          "RegOpenKeyExW",
          "RegSetValueExW"
        ]
      }
    ]
  }
}