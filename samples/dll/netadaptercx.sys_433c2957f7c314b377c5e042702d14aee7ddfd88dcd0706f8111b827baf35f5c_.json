{
  "name": "netadaptercx.sys",
  "path": "\\\\?\\C:\\Windows\\System32\\drivers\\NetAdapterCx.sys",
  "size": 210944,
  "type": "win-pe",
  "is_64": true,
  "is_lib": false,
  "is_dotnet": false,
  "has_imports": true,
  "has_exports": false,
  "subsystem": 1,
  "subsystem_caption": "Device Drivers And Native Windows processes",
  "libs": [
    "ndis.sys",
    "netio.sys",
    "ntoskrnl.exe",
    "wdfldr.sys",
    "wpprecorder.sys"
  ],
  "imports": [
    {
      "lib": "wdfldr.sys",
      "count": 5,
      "functions": [
        "WdfRegisterClassLibrary",
        "WdfVersionBind",
        "WdfVersionBindClass",
        "WdfVersionUnbind",
        "WdfVersionUnbindClass"
      ]
    },
    {
      "lib": "ndis.sys",
      "count": 45,
      "functions": [
        "NdisAdvanceNetBufferDataStart",
        "NdisAllocateNetBufferAndNetBufferList",
        "NdisAllocateNetBufferListPool",
        "NdisCloseConfiguration",
        "NdisConvertNdisStatusToNtStatus",
        "NdisConvertNtStatusToNdisStatus",
        "NdisFreeNetBufferList",
        "NdisFreeNetBufferListPool",
        "NdisMDeregisterMiniportDriver",
        "NdisMIndicateReceiveNetBufferLists",
        "NdisMIndicateStatusEx",
        "NdisMOidRequestComplete",
        "NdisMPauseComplete",
        "NdisMRestartComplete",
        "NdisMSendNetBufferListsComplete",
        "NdisMSetMiniportAttributes",
        "NdisOpenConfigurationEx",
        "NdisOpenConfigurationKeyByName",
        "NdisReadConfiguration",
        "NdisReadNetworkAddress",
        "NdisRetreatNetBufferDataStart",
        "NdisWdfAsyncPowerReferenceCompleteNotification",
        "NdisWdfChangeSingleInstance",
        "NdisWdfCloseIrpHandler",
        "NdisWdfCreateIrpHandler",
        "NdisWdfDeregisterCx",
        "NdisWdfDeviceControlIrpHandler",
        "NdisWdfDeviceInternalControlIrpHandler",
        "NdisWdfExecuteMethod",
        "NdisWdfGetAdapterContextFromAdapterHandle",
        "NdisWdfGetGuidToOidMap",
        "NdisWdfMiniportDataPathStart",
        "NdisWdfMiniportDereference",
        "NdisWdfMiniportSetPower",
        "NdisWdfMiniportStarted",
        "NdisWdfMiniportTryReference",
        "NdisWdfNotifyWmiAdapterArrival",
        "NdisWdfPnPAddDevice",
        "NdisWdfPnpPowerEventHandler",
        "NdisWdfQueryAllData",
        "NdisWdfQuerySingleInstance",
        "NdisWdfReadConfiguration",
        "NdisWdfRegisterCx",
        "NdisWdfRegisterMiniportDriver",
        "NdisWriteConfiguration"
      ]
    },
    {
      "lib": "ntoskrnl.exe",
      "count": 86,
      "functions": [
        "DbgPrintEx",
        "EtwRegister",
        "EtwSetInformation",
        "EtwUnregister",
        "EtwWriteTransfer",
        "ExAcquirePushLockExclusiveEx",
        "ExAcquirePushLockSharedEx",
        "ExAcquireRundownProtectionEx",
        "ExAllocatePoolWithTag",
        "ExFreePool",
        "ExFreePoolWithTag",
        "ExInitializeRundownProtection",
        "ExReInitializeRundownProtection",
        "ExReleasePushLockEx",
        "ExReleasePushLockExclusiveEx",
        "ExReleaseRundownProtectionEx",
        "ExWaitForRundownProtectionRelease",
        "IoAllocateWorkItem",
        "IoFileObjectType",
        "IoFreeWorkItem",
        "IoQueueWorkItem",
        "IoRegisterPlugPlayNotification",
        "IoUnregisterPlugPlayNotificationEx",
        "IoWMIRegistrationControl",
        "IofCompleteRequest",
        "KdRefreshDebuggerNotPresent",
        "KeAcquireSpinLockRaiseToDpc",
        "KeClearEvent",
        "KeEnterCriticalRegion",
        "KeFlushIoBuffers",
        "KeGetCurrentProcessorNumberEx",
        "KeGetProcessorNumberFromIndex",
        "KeInitializeEvent",
        "KeInitializeSpinLock",
        "KeLeaveCriticalRegion",
        "KeLowerIrql",
        "KeQueryMaximumProcessorCountEx",
        "KeReleaseSpinLock",
        "KeSetBasePriorityThread",
        "KeSetEvent",
        "KeSetSystemGroupAffinityThread",
        "KeWaitForSingleObject",
        "KfRaiseIrql",
        "MmAllocateMappingAddress",
        "MmBuildMdlForNonPagedPool",
        "MmFreeMappingAddress",
        "MmGetPhysicalAddress",
        "MmGetSystemRoutineAddress",
        "MmIsDriverVerifyingByAddress",
        "MmMapLockedPagesSpecifyCache",
        "MmMapLockedPagesWithReservedMapping",
        "MmSizeOfMdl",
        "MmUnmapLockedPages",
        "MmUnmapReservedMapping",
        "ObReferenceObjectByHandle",
        "ObfDereferenceObject",
        "ObfReferenceObject",
        "PcwAddInstance",
        "PcwRegister",
        "PcwUnregister",
        "PsCreateSystemThread",
        "PsGetThreadId",
        "RtlClearAllBitsEx",
        "RtlClearBitEx",
        "RtlCopyUnicodeString",
        "RtlEqualUnicodeString",
        "RtlInitUnicodeString",
        "RtlInitializeBitMapEx",
        "RtlQueryFeatureConfiguration",
        "RtlQueryFeatureConfigurationChangeStamp",
        "RtlRegisterFeatureConfigurationChangeNotification",
        "RtlSetBitEx",
        "RtlUnicodeStringToInteger",
        "RtlUnregisterFeatureConfigurationChangeNotification",
        "ZwClose",
        "ZwOpenFile",
        "ZwOpenKey",
        "ZwQuerySystemInformation",
        "ZwQueryValueKey",
        "ZwSetInformationThread",
        "_strnicmp",
        "_vsnprintf",
        "_vsnwprintf",
        "vswprintf_s",
        "wcscmp",
        "wcsstr"
      ]
    },
    {
      "lib": "wpprecorder.sys",
      "count": 6,
      "functions": [
        "WppAutoLogStart",
        "WppAutoLogStop",
        "WppAutoLogTrace",
        "imp_WppRecorderLogCreate",
        "imp_WppRecorderLogDelete",
        "imp_WppRecorderReplay"
      ]
    },
    {
      "lib": "netio.sys",
      "count": 1,
      "functions": [
        "GetIfEntry2Ex"
      ]
    }
  ],
  "hashes": {
    "sha2": "433c2957f7c314b377c5e042702d14aee7ddfd88dcd0706f8111b827baf35f5c",
    "ssdeep": "3072:Q8HOqQxZ0lOy06Lpti5OttLIrO0oFgo9IldhT+LBSDqsi7XuWSEm5qK/3i:QlqIqlL0ON9AAnfup5Q"
  }
}