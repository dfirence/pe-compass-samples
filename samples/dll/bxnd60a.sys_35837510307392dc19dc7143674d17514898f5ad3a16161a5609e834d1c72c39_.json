{
  "name": "bxnd60a.sys",
  "path": "\\\\?\\C:\\Windows\\System32\\DriverStore\\FileRepository\\netbxnda.inf_amd64_1fff3bc87a99b0f1\\bxnd60a.sys",
  "size": 139576,
  "is_64": true,
  "is_lib": false,
  "is_dotnet": false,
  "has_imports": true,
  "has_exports": false,
  "subsystem": 1,
  "subsystem_caption": "Device Drivers And Native Windows processes",
  "libs": [
    "hal.dll",
    "ndis.sys",
    "ntoskrnl.exe"
  ],
  "imports": [
    {
      "lib": "hal.dll",
      "count": 1,
      "functions": [
        "KeStallExecutionProcessor"
      ]
    },
    {
      "lib": "ndis.sys",
      "count": 60,
      "functions": [
        "NdisAdvanceNetBufferDataStart",
        "NdisAdvanceNetBufferListDataStart",
        "NdisAllocateFragmentNetBufferList",
        "NdisAllocateIoWorkItem",
        "NdisAllocateMdl",
        "NdisAllocateMemoryWithTag",
        "NdisAllocateNetBufferAndNetBufferList",
        "NdisAllocateNetBufferListPool",
        "NdisAllocateNetBufferPool",
        "NdisCloseConfiguration",
        "NdisFreeFragmentNetBufferList",
        "NdisFreeIoWorkItem",
        "NdisFreeMdl",
        "NdisFreeMemory",
        "NdisFreeNetBufferList",
        "NdisFreeNetBufferListPool",
        "NdisFreeNetBufferPool",
        "NdisGetDataBuffer",
        "NdisGetRoutineAddress",
        "NdisGetVersion",
        "NdisInitializeEvent",
        "NdisInitializeString",
        "NdisMAllocateNetBufferSGList",
        "NdisMAllocateSharedMemory",
        "NdisMCancelTimer",
        "NdisMDeregisterMiniportDriver",
        "NdisMDeregisterScatterGatherDma",
        "NdisMFreeNetBufferSGList",
        "NdisMFreeSharedMemory",
        "NdisMGetDeviceProperty",
        "NdisMGetOffloadHandlers",
        "NdisMIndicateReceiveNetBufferLists",
        "NdisMIndicateStatusEx",
        "NdisMInitializeTimer",
        "NdisMInitiateOffloadComplete",
        "NdisMInvalidateOffloadComplete",
        "NdisMOidRequestComplete",
        "NdisMQueryAdapterInstanceName",
        "NdisMRegisterMiniportDriver",
        "NdisMRegisterScatterGatherDma",
        "NdisMResetComplete",
        "NdisMSendNetBufferListsComplete",
        "NdisMSetMiniportAttributes",
        "NdisMSleep",
        "NdisMTerminateOffloadComplete",
        "NdisMUpdateOffloadComplete",
        "NdisOpenConfigurationEx",
        "NdisQueueIoWorkItem",
        "NdisReadConfiguration",
        "NdisReadNetworkAddress",
        "NdisRetreatNetBufferDataStart",
        "NdisRetreatNetBufferListDataStart",
        "NdisSetEvent",
        "NdisSetOptionalHandlers",
        "NdisSetTimer",
        "NdisSystemActiveProcessorCount",
        "NdisSystemProcessorCount",
        "NdisWaitEvent",
        "NdisWriteConfiguration",
        "NdisWriteEventLogEntry"
      ]
    },
    {
      "lib": "ntoskrnl.exe",
      "count": 39,
      "functions": [
        "ExAllocatePoolWithTag",
        "ExDeleteNPagedLookasideList",
        "ExFreePoolWithTag",
        "ExInitializeNPagedLookasideList",
        "ExQueryDepthSList",
        "ExpInterlockedPopEntrySList",
        "ExpInterlockedPushEntrySList",
        "IoAllocateIrp",
        "IoAllocateMdl",
        "IoBuildPartialMdl",
        "IoFreeIrp",
        "IoFreeMdl",
        "IofCallDriver",
        "KeAcquireInStackQueuedSpinLockAtDpcLevel",
        "KeAcquireSpinLockAtDpcLevel",
        "KeAcquireSpinLockRaiseToDpc",
        "KeFlushIoBuffers",
        "KeInitializeEvent",
        "KeLowerIrql",
        "KeQueryTimeIncrement",
        "KeReleaseInStackQueuedSpinLockFromDpcLevel",
        "KeReleaseSpinLock",
        "KeReleaseSpinLockFromDpcLevel",
        "KeSetEvent",
        "KeWaitForSingleObject",
        "KfRaiseIrql",
        "MmAllocateMappingAddress",
        "MmBuildMdlForNonPagedPool",
        "MmFreeMappingAddress",
        "MmGetSystemRoutineAddress",
        "MmMapLockedPagesSpecifyCache",
        "MmMapLockedPagesWithReservedMapping",
        "MmUnmapReservedMapping",
        "RtlCompareMemory",
        "RtlInitUnicodeString",
        "RtlIntegerToUnicodeString",
        "RtlQueryRegistryValues",
        "RtlUnicodeStringToAnsiString",
        "memcpy_s"
      ]
    }
  ],
  "hashes": {
    "sha2": "35837510307392dc19dc7143674d17514898f5ad3a16161a5609e834d1c72c39",
    "ssdeep": "3072:lQd8SHaSiNmD/EVQLK9anJMRGK6gkt3KN75BkrsuujYmF+KZna:KuSHGNeEVQLlqRGK6gkt3yCmFK"
  }
}