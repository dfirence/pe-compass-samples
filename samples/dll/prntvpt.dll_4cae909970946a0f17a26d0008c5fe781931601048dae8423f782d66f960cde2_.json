{
  "name": "prntvpt.dll",
  "path": "\\\\?\\C:\\Windows\\System32\\prntvpt.dll",
  "size": 190464,
  "is_64": true,
  "is_lib": true,
  "is_dotnet": false,
  "has_imports": true,
  "has_exports": true,
  "subsystem": 3,
  "subsystem_caption": "The Windows Character (Console UI) Subsystem",
  "libs": [
    "advapi32.dll",
    "api-ms-win-core-com-l1-1-0.dll",
    "gdi32.dll",
    "kernel32.dll",
    "msvcrt.dll",
    "oleaut32.dll",
    "rpcrt4.dll",
    "user32.dll",
    "version.dll",
    "winspool.drv"
  ],
  "imports": [
    {
      "lib": "oleaut32.dll",
      "count": 16,
      "functions": [
        "BSTR_UserFree64",
        "BSTR_UserMarshal64",
        "BSTR_UserSize64",
        "BSTR_UserUnmarshal64",
        "ORDINAL 12",
        "ORDINAL 2",
        "ORDINAL 277",
        "ORDINAL 283",
        "ORDINAL 284",
        "ORDINAL 285",
        "ORDINAL 286",
        "ORDINAL 4",
        "ORDINAL 6",
        "ORDINAL 7",
        "ORDINAL 8",
        "ORDINAL 9"
      ]
    },
    {
      "lib": "gdi32.dll",
      "count": 4,
      "functions": [
        "CreateICW",
        "DeleteDC",
        "GdiIsUMPDSandboxingEnabled",
        "GetDeviceCaps"
      ]
    },
    {
      "lib": "rpcrt4.dll",
      "count": 19,
      "functions": [
        "CStdStubBuffer_AddRef",
        "CStdStubBuffer_Connect",
        "CStdStubBuffer_CountRefs",
        "CStdStubBuffer_DebugServerQueryInterface",
        "CStdStubBuffer_DebugServerRelease",
        "CStdStubBuffer_Disconnect",
        "CStdStubBuffer_Invoke",
        "CStdStubBuffer_IsIIDSupported",
        "CStdStubBuffer_QueryInterface",
        "IUnknown_AddRef_Proxy",
        "IUnknown_QueryInterface_Proxy",
        "IUnknown_Release_Proxy",
        "NdrCStdStubBuffer_Release",
        "NdrDllCanUnloadNow",
        "NdrDllGetClassObject",
        "NdrDllRegisterProxy",
        "NdrDllUnregisterProxy",
        "NdrOleAllocate",
        "NdrOleFree"
      ]
    },
    {
      "lib": "msvcrt.dll",
      "count": 28,
      "functions": [
        "_XcptFilter",
        "__C_specific_handler",
        "__CxxFrameHandler3",
        "__dllonexit",
        "_amsg_exit",
        "_callnewh",
        "_errno",
        "_initterm",
        "_lock",
        "_onexit",
        "_purecall",
        "_unlock",
        "_vsnwprintf",
        "_wcsicmp",
        "_wtoi",
        "free",
        "malloc",
        "memcmp",
        "memcpy",
        "memcpy_s",
        "memset",
        "realloc",
        "wcscat_s",
        "wcschr",
        "wcscmp",
        "wcscpy_s",
        "wcsncmp",
        "wcsncpy_s"
      ]
    },
    {
      "lib": "kernel32.dll",
      "count": 43,
      "functions": [
        "CloseHandle",
        "CreateFileW",
        "DeleteCriticalSection",
        "EnterCriticalSection",
        "FindResourceExW",
        "FreeLibrary",
        "GetCurrentProcess",
        "GetCurrentProcessId",
        "GetCurrentThread",
        "GetCurrentThreadId",
        "GetLastError",
        "GetModuleFileNameW",
        "GetModuleHandleW",
        "GetProcAddress",
        "GetProcessHeap",
        "GetSystemDirectoryW",
        "GetSystemTimeAsFileTime",
        "GetTickCount",
        "HeapAlloc",
        "HeapFree",
        "InitializeCriticalSection",
        "LeaveCriticalSection",
        "LoadLibraryExW",
        "LoadResource",
        "LocalAlloc",
        "LocalFree",
        "MultiByteToWideChar",
        "OutputDebugStringA",
        "QueryPerformanceCounter",
        "RaiseException",
        "RtlCaptureContext",
        "RtlLookupFunctionEntry",
        "RtlVirtualUnwind",
        "SetUnhandledExceptionFilter",
        "SizeofResource",
        "Sleep",
        "TerminateProcess",
        "TlsAlloc",
        "TlsFree",
        "TlsGetValue",
        "TlsSetValue",
        "UnhandledExceptionFilter",
        "lstrcmpiW"
      ]
    },
    {
      "lib": "advapi32.dll",
      "count": 13,
      "functions": [
        "EventRegister",
        "EventUnregister",
        "EventWriteTransfer",
        "GetTokenInformation",
        "OpenProcessToken",
        "OpenThreadToken",
        "RegCloseKey",
        "RegCreateKeyExW",
        "RegDeleteValueW",
        "RegEnumKeyExW",
        "RegOpenKeyExW",
        "RegQueryInfoKeyW",
        "RegSetValueExW"
      ]
    },
    {
      "lib": "user32.dll",
      "count": 3,
      "functions": [
        "CharNextW",
        "LoadStringW",
        "UnregisterClassA"
      ]
    },
    {
      "lib": "api-ms-win-core-com-l1-1-0.dll",
      "count": 8,
      "functions": [
        "CoCreateInstance",
        "CoInitializeEx",
        "CoTaskMemAlloc",
        "CoTaskMemFree",
        "CoTaskMemRealloc",
        "CoUninitialize",
        "CreateStreamOnHGlobal",
        "StringFromGUID2"
      ]
    },
    {
      "lib": "winspool.drv",
      "count": 7,
      "functions": [
        "ClosePrinter",
        "DeviceCapabilitiesW",
        "DocumentPropertiesW",
        "GetPrinterDriverW",
        "GetPrinterW",
        "IsValidDevmodeW",
        "OpenPrinterW"
      ]
    },
    {
      "lib": "version.dll",
      "count": 3,
      "functions": [
        "GetFileVersionInfoSizeW",
        "GetFileVersionInfoW",
        "VerQueryValueW"
      ]
    }
  ],
  "exports": {
    "count": 33,
    "functions": [
      "BindPTProviderThunk",
      "ConvertDevModeToPrintTicketThunk",
      "ConvertDevModeToPrintTicketThunk2",
      "ConvertPrintTicketToDevModeThunk",
      "ConvertPrintTicketToDevModeThunk2",
      "DllCanUnloadNow",
      "DllGetClassObject",
      "DllMain",
      "DllRegisterServer",
      "DllUnregisterServer",
      "GetDeviceDefaultPrintTicketThunk",
      "GetDeviceNamespacesThunk",
      "GetPrintCapabilitiesThunk",
      "GetPrintCapabilitiesThunk2",
      "GetPrintDeviceCapabilitiesThunk",
      "GetPrintDeviceCapabilitiesThunk2",
      "GetPrintDeviceResourcesThunk",
      "GetPrintDeviceResourcesThunk2",
      "GetSchemaVersionThunk",
      "MergeAndValidatePrintTicketThunk",
      "MergeAndValidatePrintTicketThunk2",
      "PTCloseProvider",
      "PTConvertDevModeToPrintTicket",
      "PTConvertPrintTicketToDevMode",
      "PTGetPrintCapabilities",
      "PTGetPrintDeviceCapabilities",
      "PTGetPrintDeviceResources",
      "PTMergeAndValidatePrintTicket",
      "PTOpenProvider",
      "PTOpenProviderEx",
      "PTQuerySchemaVersionSupport",
      "PTReleaseMemory",
      "UnbindPTProviderThunk"
    ]
  },
  "hashes": {
    "sha2": "4cae909970946a0f17a26d0008c5fe781931601048dae8423f782d66f960cde2",
    "ssdeep": "3072:meXkYolmRh1EUrwYshW2o+k9nDO6hlZ/HEcXzjTzhYyxdISsvPCrNyvmCIk3RW:meXx7Rr/UzS1nDBhlZ/pYysaR"
  },
  "intent": {
    "intentions": 5,
    "uniq_apis_matched": 9,
    "results": [
      {
        "intent": "Can Create/Manipulate The Windows Registry",
        "tag": "Expert Input:IBO.008 - Create/Manipulate The Windows Registry",
        "component": "Registry",
        "inputs": 33,
        "matches": 4,
        "apis": [
          "RegCreateKeyExW",
          "RegDeleteValueW",
          "RegOpenKeyExW",
          "RegSetValueExW"
        ]
      },
      {
        "intent": "Can Terminate Processes On The Target System",
        "tag": "Expert Input:IBO.0025",
        "component": "Processes",
        "inputs": 1,
        "matches": 1,
        "apis": [
          "TerminateProcess"
        ]
      },
      {
        "intent": "Queries And Discovers Windows Registry Configuration Settings",
        "tag": "Discovery:T1012 - Query Registry",
        "component": "Registry",
        "inputs": 11,
        "matches": 1,
        "apis": [
          "RegQueryInfoKeyW"
        ]
      },
      {
        "intent": "Can Enumerate The Windows Registry",
        "tag": "Expert Input:IBO.009 - Enumerate The Windows Registry",
        "component": "Registry",
        "inputs": 6,
        "matches": 1,
        "apis": [
          "RegEnumKeyExW"
        ]
      },
      {
        "intent": "Can Access And Read Windows Tokens",
        "tag": "Expert Input:IBO.0020 - Windows Token Access",
        "component": "Privileges",
        "inputs": 4,
        "matches": 2,
        "apis": [
          "OpenProcessToken",
          "OpenThreadToken"
        ]
      }
    ]
  }
}