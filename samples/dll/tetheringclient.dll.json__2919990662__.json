{
  "pe_name": "tetheringclient.dll",
  "pe_type": 267,
  "pe_size": 61440,
  "pe_subsystem": 3,
  "pe_subsystem_caption": "The Windows character (Cosole UI) subsystem",
  "pe_path": "c:\\Windows\\WinSxS\\wow64_microsoft-onecore-tetheringservice_31bf3856ad364e35_10.0.19041.1_none_4df5d394baba4ce9\\tetheringclient.dll",
  "pe_timedate_stamp": 828639753,
  "pe_timedate_human": "1996-04-04T17:42:33.000Z",
  "ImageDLLImports": [
    {
      "name": "msvcrt.dll",
      "imports": 36,
      "functions": [
        "??0exception@@QAE@ABV0@@Z",
        "??0exception@@QAE@XZ",
        "??1exception@@UAE@XZ",
        "??1type_info@@UAE@XZ",
        "??3@YAXPAX@Z",
        "??_V@YAXPAX@Z",
        "?terminate@@YAXXZ",
        "?what@exception@@UBEPBDXZ",
        "_CxxThrowException",
        "_XcptFilter",
        "__CxxFrameHandler3",
        "__dllonexit",
        "_amsg_exit",
        "_callnewh",
        "_errno",
        "_except_handler4_common",
        "_initterm",
        "_lock",
        "_onexit",
        "_purecall",
        "_unlock",
        "_vsnwprintf",
        "_wcsnicmp",
        "_wtoi",
        "calloc",
        "free",
        "isalpha",
        "malloc",
        "memcpy",
        "memcpy_s",
        "memmove",
        "memmove_s",
        "memset",
        "realloc",
        "toupper",
        "wcscpy_s"
      ]
    },
    {
      "name": "api-ms-win-eventing-classicprovider-l1-1-0.dll",
      "imports": 6,
      "functions": [
        "GetTraceEnableFlags",
        "GetTraceEnableLevel",
        "GetTraceLoggerHandle",
        "RegisterTraceGuidsW",
        "TraceMessage",
        "UnregisterTraceGuids"
      ]
    },
    {
      "name": "api-ms-win-core-libraryloader-l1-2-0.dll",
      "imports": 5,
      "functions": [
        "DisableThreadLibraryCalls",
        "FreeLibrary",
        "GetModuleFileNameA",
        "LoadLibraryExW",
        "LoadStringW"
      ]
    },
    {
      "name": "api-ms-win-core-synch-l1-1-0.dll",
      "imports": 6,
      "functions": [
        "AcquireSRWLockExclusive",
        "DeleteCriticalSection",
        "EnterCriticalSection",
        "InitializeCriticalSection",
        "LeaveCriticalSection",
        "ReleaseSRWLockExclusive"
      ]
    },
    {
      "name": "rpcrt4.dll",
      "imports": 7,
      "functions": [
        "NdrClientCall4",
        "RpcBindingBind",
        "RpcBindingCreateW",
        "RpcBindingFree",
        "RpcExceptionFilter",
        "RpcImpersonateClient",
        "RpcRevertToSelf"
      ]
    },
    {
      "name": "api-ms-win-service-management-l1-1-0.dll",
      "imports": 4,
      "functions": [
        "CloseServiceHandle",
        "OpenSCManagerW",
        "OpenServiceW",
        "StartServiceW"
      ]
    },
    {
      "name": "api-ms-win-core-errorhandling-l1-1-0.dll",
      "imports": 5,
      "functions": [
        "GetLastError",
        "RaiseException",
        "SetLastError",
        "SetUnhandledExceptionFilter",
        "UnhandledExceptionFilter"
      ]
    },
    {
      "name": "api-ms-win-service-winsvc-l1-1-0.dll",
      "imports": 1,
      "functions": [
        "QueryServiceStatus"
      ]
    },
    {
      "name": "api-ms-win-core-synch-l1-2-0.dll",
      "imports": 2,
      "functions": [
        "InitOnceExecuteOnce",
        "Sleep"
      ]
    },
    {
      "name": "api-ms-win-core-profile-l1-1-0.dll",
      "imports": 1,
      "functions": [
        "QueryPerformanceCounter"
      ]
    },
    {
      "name": "api-ms-win-core-processthreads-l1-1-0.dll",
      "imports": 4,
      "functions": [
        "GetCurrentProcess",
        "GetCurrentProcessId",
        "GetCurrentThreadId",
        "TerminateProcess"
      ]
    },
    {
      "name": "api-ms-win-core-sysinfo-l1-1-0.dll",
      "imports": 3,
      "functions": [
        "GetComputerNameExW",
        "GetSystemTimeAsFileTime",
        "GetTickCount"
      ]
    },
    {
      "name": "api-ms-win-service-private-l1-1-0.dll",
      "imports": 1,
      "functions": [
        "WaitServiceState"
      ]
    },
    {
      "name": "ntdll.dll",
      "imports": 5,
      "functions": [
        "NtQueryKey",
        "NtQueryWnfStateData",
        "RtlGetPersistedStateLocation",
        "RtlSubscribeWnfStateChangeNotification",
        "RtlUnsubscribeWnfNotificationWaitForCompletion"
      ]
    },
    {
      "name": "wlanapi.dll",
      "imports": 5,
      "functions": [
        "WFDCloseHandleInt",
        "WFDFreeMemoryInt",
        "WFDOpenHandleInt",
        "WFDQueryPropertyInt",
        "WlanFreeMemory"
      ]
    },
    {
      "name": "wwapi.dll",
      "imports": 4,
      "functions": [
        "WwanCloseHandle",
        "WwanFreeMemory",
        "WwanOpenHandle",
        "WwanQueryInterface"
      ]
    },
    {
      "name": "policymanager.dll",
      "imports": 1,
      "functions": [
        "PolicyManager_GetWiFiPolicy_AllowInternetSharing"
      ]
    },
    {
      "name": "systemeventsbrokerclient.dll",
      "imports": 2,
      "functions": [
        "SebQueryEventData",
        "SebQueryEventPackage"
      ]
    },
    {
      "name": "mobilenetworking.dll",
      "imports": 0,
      "functions": []
    },
    {
      "name": "api-ms-win-core-heap-l1-1-0.dll",
      "imports": 2,
      "functions": [
        "GetProcessHeap",
        "HeapFree"
      ]
    },
    {
      "name": "api-ms-win-core-winrt-string-l1-1-0.dll",
      "imports": 3,
      "functions": [
        "WindowsCreateString",
        "WindowsCreateStringReference",
        "WindowsDeleteString"
      ]
    },
    {
      "name": "api-ms-win-core-com-l1-1-0.dll",
      "imports": 2,
      "functions": [
        "CoCreateInstance",
        "StringFromGUID2"
      ]
    },
    {
      "name": "api-ms-win-core-registry-l1-1-0.dll",
      "imports": 7,
      "functions": [
        "RegCloseKey",
        "RegCreateKeyExW",
        "RegGetValueW",
        "RegLoadMUIStringW",
        "RegOpenKeyExW",
        "RegQueryValueExW",
        "RegSetValueExW"
      ]
    },
    {
      "name": "api-ms-win-core-winrt-l1-1-0.dll",
      "imports": 1,
      "functions": [
        "RoGetActivationFactory"
      ]
    },
    {
      "name": "api-ms-win-core-debug-l1-1-0.dll",
      "imports": 1,
      "functions": [
        "OutputDebugStringA"
      ]
    },
    {
      "name": "api-ms-win-core-sysinfo-l1-2-0.dll",
      "imports": 1,
      "functions": [
        "GetProductInfo"
      ]
    },
    {
      "name": "bcrypt.dll",
      "imports": 1,
      "functions": [
        "BCryptGenRandom"
      ]
    },
    {
      "name": "oleaut32.dll",
      "imports": 0,
      "functions": []
    },
    {
      "name": "api-ms-win-core-heap-l2-1-0.dll",
      "imports": 2,
      "functions": [
        "LocalAlloc",
        "LocalFree"
      ]
    },
    {
      "name": "crypt32.dll",
      "imports": 2,
      "functions": [
        "CryptProtectData",
        "CryptUnprotectData"
      ]
    },
    {
      "name": "api-ms-win-core-file-l1-1-0.dll",
      "imports": 1,
      "functions": [
        "GetFullPathNameW"
      ]
    },
    {
      "name": "api-ms-win-core-processenvironment-l1-1-0.dll",
      "imports": 1,
      "functions": [
        "ExpandEnvironmentStringsW"
      ]
    },
    {
      "name": "api-ms-win-eventing-provider-l1-1-0.dll",
      "imports": 5,
      "functions": [
        "EventProviderEnabled",
        "EventRegister",
        "EventSetInformation",
        "EventUnregister",
        "EventWriteTransfer"
      ]
    }
  ],
  "ImageDLLExports": {
    "exports": 32,
    "functions": [
      "TetheringGetSharedInterfaceIndices",
      "TetheringAuthorize",
      "TetheringDeinitApi",
      "TetheringFreeMemory",
      "TetheringFreePeerList",
      "TetheringGetClientCount",
      "TetheringGetDefaultInterface",
      "TetheringGetErrorString",
      "TetheringGetIsPeerlessTimeoutEnabled",
      "TetheringGetLastApiError",
      "TetheringGetMaxClientCount",
      "TetheringGetPeerList",
      "TetheringGetPreferredInterface",
      "TetheringGetPrivateConnectionSettings",
      "TetheringGetPublicConnectionSettings",
      "TetheringGetSharingState",
      "TetheringInitApi",
      "TetheringIs5GHzSupported",
      "TetheringIsAllowed",
      "TetheringRegisterNotification",
      "TetheringSetIsPeerlessTimeoutEnabled",
      "TetheringSetPreferredInterface",
      "TetheringSetPrivateConnectionSettings",
      "TetheringSetPrivateConnectionSettingsAsync",
      "TetheringSetPublicConnectionSettings",
      "TetheringSetSharingState",
      "TetheringSetSharingStateAsync",
      "TetheringStartSharing",
      "TetheringStartSharingAsync",
      "TetheringStopSharing",
      "TetheringStopSharingAsync",
      "TetheringUnregisterNotification"
    ]
  },
  "ImageHashSignatures": {
    "sha2": "cacf0b31f528398fc9a5ecb935f65ce4bce669d4da165e864944d4bb2967269a"
  },
  "scan": {
    "intentions": 4,
    "uniq_apis_matched": 10,
    "results": [
      {
        "intent": "Implements Features To Create/Manipulate System Services",
        "tag": "Expert Input:IBO.0007 - Create/Manipulate System Services",
        "component": "Services",
        "inputs": 19,
        "matches": 2,
        "apis": [
          "CloseServiceHandle",
          "StartServiceW"
        ]
      },
      {
        "intent": "Implements Features To Create/Manipulate The Windows Registry",
        "tag": "Expert Input:IBO.0008 - Create/Manipulate The Windows Registry",
        "component": "Registry",
        "inputs": 33,
        "matches": 3,
        "apis": [
          "RegCreateKeyExW",
          "RegOpenKeyExW",
          "RegSetValueExW"
        ]
      },
      {
        "intent": "Query And Discover Windows Registry Configuration Settings",
        "tag": "Discovery:T1012 - Query Registry",
        "component": "Registry",
        "inputs": 11,
        "matches": 2,
        "apis": [
          "RegGetValueW",
          "RegQueryValueExW"
        ]
      },
      {
        "intent": "Implements Features To Enumerate/Discover System Services And Their Configuration Data",
        "tag": "Expert Input:IBO.0006 - Enumerate System Services",
        "component": "Services",
        "inputs": 28,
        "matches": 3,
        "apis": [
          "OpenSCManagerW",
          "OpenServiceW",
          "QueryServiceStatus"
        ]
      }
    ]
  }
}