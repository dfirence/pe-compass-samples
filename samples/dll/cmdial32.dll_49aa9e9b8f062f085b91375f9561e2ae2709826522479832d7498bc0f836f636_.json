{
  "name": "cmdial32.dll",
  "path": "\\\\?\\C:\\Windows\\SysWOW64\\cmdial32.dll",
  "size": 491008,
  "is_64": false,
  "is_lib": true,
  "is_dotnet": true,
  "has_imports": true,
  "has_exports": true,
  "subsystem": 3,
  "subsystem_caption": "The Windows Character (Console UI) Subsystem",
  "libs": [
    "advapi32.dll",
    "cmpbk32.dll",
    "cmutil.dll",
    "eappcfg.dll",
    "gdi32.dll",
    "kernel32.dll",
    "msvcrt.dll",
    "ole32.dll",
    "rasapi32.dll",
    "setnetworklocation.dll",
    "setupapi.dll",
    "shell32.dll",
    "user32.dll",
    "userenv.dll"
  ],
  "imports": [
    {
      "lib": "kernel32.dll",
      "count": 83,
      "functions": [
        "Beep",
        "CloseHandle",
        "CompareFileTime",
        "CompareStringW",
        "CopyFileW",
        "CreateDirectoryW",
        "CreateEventW",
        "CreateFileMappingW",
        "CreateFileW",
        "CreateMutexW",
        "CreateProcessW",
        "DisableThreadLibraryCalls",
        "DuplicateHandle",
        "ExpandEnvironmentStringsW",
        "FindClose",
        "FindFirstFileW",
        "FindNextFileW",
        "FormatMessageA",
        "FormatMessageW",
        "FreeLibrary",
        "GetCurrentDirectoryW",
        "GetCurrentProcess",
        "GetCurrentProcessId",
        "GetCurrentThread",
        "GetCurrentThreadId",
        "GetFileTime",
        "GetFileType",
        "GetLastError",
        "GetModuleFileNameW",
        "GetModuleHandleA",
        "GetPrivateProfileIntW",
        "GetPrivateProfileStringA",
        "GetPrivateProfileStringW",
        "GetProcAddress",
        "GetProcessHeap",
        "GetSystemDirectoryW",
        "GetSystemTime",
        "GetSystemTimeAsFileTime",
        "GetTickCount",
        "GetVolumeInformationA",
        "GetWindowsDirectoryW",
        "GlobalAlloc",
        "GlobalFree",
        "GlobalHandle",
        "GlobalLock",
        "GlobalReAlloc",
        "GlobalSize",
        "GlobalUnlock",
        "HeapAlloc",
        "HeapFree",
        "LoadLibraryExA",
        "LoadLibraryExW",
        "LocalAlloc",
        "LocalFree",
        "MapViewOfFile",
        "MulDiv",
        "MultiByteToWideChar",
        "OpenEventW",
        "OpenFileMappingW",
        "OpenProcess",
        "QueryPerformanceCounter",
        "ReleaseMutex",
        "RtlUnwind",
        "SetCurrentDirectoryW",
        "SetEvent",
        "SetFileAttributesW",
        "SetFileTime",
        "SetLastError",
        "SetUnhandledExceptionFilter",
        "Sleep",
        "SystemTimeToFileTime",
        "TerminateProcess",
        "UnhandledExceptionFilter",
        "UnmapViewOfFile",
        "WaitForSingleObject",
        "WideCharToMultiByte",
        "WritePrivateProfileStringA",
        "WritePrivateProfileStringW",
        "lstrcmpA",
        "lstrcmpW",
        "lstrcmpiW",
        "lstrlenA",
        "lstrlenW"
      ]
    },
    {
      "lib": "ole32.dll",
      "count": 8,
      "functions": [
        "CoCreateInstance",
        "CoInitialize",
        "CoInitializeEx",
        "CoTaskMemAlloc",
        "CoTaskMemFree",
        "CoUninitialize",
        "StringFromGUID2",
        "StringFromIID"
      ]
    },
    {
      "lib": "setnetworklocation.dll",
      "count": 3,
      "functions": [
        "ORDINAL 1",
        "ORDINAL 3",
        "ORDINAL 4"
      ]
    },
    {
      "lib": "rasapi32.dll",
      "count": 5,
      "functions": [
        "RasGetConnectStatusW",
        "RasGetCredentialsW",
        "RasGetEntryHrasconnW",
        "RasSetCredentialsW",
        "RasSetEapUserDataW"
      ]
    },
    {
      "lib": "userenv.dll",
      "count": 1,
      "functions": [
        "ExpandEnvironmentStringsForUserW"
      ]
    },
    {
      "lib": "cmutil.dll",
      "count": 69,
      "functions": [
        "??0CIniW@@QAE@PAUHINSTANCE__@@PBG111@Z",
        "??1CIniW@@QAE@XZ",
        "?Clear@CIniW@@QAEXXZ",
        "?Clear@CmLogFile@@QAEXH@Z",
        "?DeInit@CmLogFile@@QAEJXZ",
        "?GPPB@CIniW@@QBEHPBG0H@Z",
        "?GPPI@CIniW@@QBEKPBG0K@Z",
        "?GPPS@CIniW@@QBEPAGPBG00@Z",
        "?GetFile@CIniW@@QBEPBGXZ",
        "?GetHInst@CIniW@@QBEPAUHINSTANCE__@@XZ",
        "?GetRegPath@CIniW@@QBEPBGXZ",
        "?GetSection@CIniW@@QBEPBGXZ",
        "?Init@CmLogFile@@QAEJPAUHINSTANCE__@@HPBG@Z",
        "?LoadSection@CIniW@@QBEPAGPBG@Z",
        "?Log@CmLogFile@@QAAXW4_CMLOG_ITEM@@ZZ",
        "?SetEntry@CIniW@@QAEXPBG@Z",
        "?SetEntryFromIdx@CIniW@@QAEXK@Z",
        "?SetFile@CIniW@@QAEXPBG@Z",
        "?SetHInst@CIniW@@QAEXPAUHINSTANCE__@@@Z",
        "?SetICSDataPath@CIniW@@QAEXPBG@Z",
        "?SetParams@CmLogFile@@QAEJHKPBG@Z",
        "?SetPrimaryFile@CIniW@@QAEXPBG@Z",
        "?SetPrimaryRegPath@CIniW@@QAEXPBG@Z",
        "?SetReadICSData@CIniW@@QAEXH@Z",
        "?SetRegPath@CIniW@@QAEXPBG@Z",
        "?SetSection@CIniW@@QAEXPBG@Z",
        "?SetWriteICSData@CIniW@@QAEXH@Z",
        "?Start@CmLogFile@@QAEJH@Z",
        "?Stop@CmLogFile@@QAEJXZ",
        "?WPPB@CIniW@@QAEXPBG0H@Z",
        "?WPPI@CIniW@@QAEXPBG0K@Z",
        "?WPPS@CIniW@@QAEXPBG00@Z",
        "CmAtolW",
        "CmBuildFullPathFromRelativeW",
        "CmCompareStringW",
        "CmConvertRelativePathW",
        "CmConvertStrToIPv6AddrW",
        "CmEndOfStrW",
        "CmFmtMsgW",
        "CmFree",
        "CmIsDigitW",
        "CmIsSpaceW",
        "CmLoadIconW",
        "CmLoadImageW",
        "CmLoadSmallIconW",
        "CmLoadStringW",
        "CmMalloc",
        "CmMoveMemory",
        "CmParsePathW",
        "CmRealloc",
        "CmStrCatAllocA",
        "CmStrCatAllocW",
        "CmStrCharStuffingW",
        "CmStrCpyAllocA",
        "CmStrCpyAllocW",
        "CmStrStrW",
        "CmStrTrimW",
        "CmStrchrW",
        "CmStripFileNameW",
        "CmStripPathAndExtW",
        "CmStrrchrW",
        "CmStrtokW",
        "GetOSBuildNumber",
        "GetOSMajorVersion",
        "GetOSVersion",
        "IsLogonAsSystem",
        "SzToWzWithAlloc",
        "WzToSz",
        "WzToSzWithAlloc"
      ]
    },
    {
      "lib": "setupapi.dll",
      "count": 5,
      "functions": [
        "SetupDiDestroyDeviceInfoList",
        "SetupDiEnumDeviceInfo",
        "SetupDiGetClassDevsW",
        "SetupDiGetDeviceInstanceIdW",
        "SetupDiOpenDevRegKey"
      ]
    },
    {
      "lib": "msvcrt.dll",
      "count": 13,
      "functions": [
        "_XcptFilter",
        "_amsg_exit",
        "_initterm",
        "_vsnprintf",
        "_vsnwprintf",
        "free",
        "iswalpha",
        "malloc",
        "memcpy",
        "memset",
        "wcspbrk",
        "wcsrchr",
        "wcsstr"
      ]
    },
    {
      "lib": "user32.dll",
      "count": 82,
      "functions": [
        "BeginPaint",
        "CallWindowProcW",
        "CharLowerW",
        "CharNextW",
        "CharPrevW",
        "CharUpperW",
        "CheckDlgButton",
        "CopyRect",
        "CreateWindowExW",
        "DefWindowProcW",
        "DeleteMenu",
        "DestroyWindow",
        "DialogBoxParamA",
        "DialogBoxParamW",
        "DispatchMessageW",
        "EnableMenuItem",
        "EnableWindow",
        "EndDialog",
        "EndPaint",
        "FindWindowA",
        "FindWindowExW",
        "GetClassInfoExW",
        "GetClientRect",
        "GetCursor",
        "GetDC",
        "GetDesktopWindow",
        "GetDlgItem",
        "GetDlgItemInt",
        "GetDlgItemTextW",
        "GetFocus",
        "GetParent",
        "GetSystemMenu",
        "GetSystemMetrics",
        "GetThreadDesktop",
        "GetUserObjectInformationW",
        "GetWindowLongA",
        "GetWindowLongW",
        "GetWindowRect",
        "GetWindowTextLengthW",
        "GetWindowTextW",
        "GetWindowThreadProcessId",
        "InvalidateRect",
        "IsDlgButtonChecked",
        "IsWindow",
        "IsWindowEnabled",
        "IsWindowVisible",
        "KillTimer",
        "LoadCursorW",
        "LoadStringA",
        "MapWindowPoints",
        "MessageBoxA",
        "MessageBoxExW",
        "MessageBoxW",
        "MoveWindow",
        "MsgWaitForMultipleObjects",
        "OffsetRect",
        "PeekMessageW",
        "PostMessageA",
        "PostMessageW",
        "RegisterClassExW",
        "ReleaseDC",
        "SendDlgItemMessageA",
        "SendDlgItemMessageW",
        "SendMessageA",
        "SendMessageW",
        "SetCursor",
        "SetDlgItemInt",
        "SetDlgItemTextA",
        "SetDlgItemTextW",
        "SetFocus",
        "SetForegroundWindow",
        "SetTimer",
        "SetWindowLongA",
        "SetWindowLongW",
        "SetWindowPos",
        "SetWindowTextW",
        "ShowCursor",
        "ShowWindow",
        "SystemParametersInfoW",
        "TranslateMessage",
        "UnregisterClassW",
        "UpdateWindow"
      ]
    },
    {
      "lib": "gdi32.dll",
      "count": 14,
      "functions": [
        "CreateCompatibleDC",
        "CreateDIBitmap",
        "CreatePalette",
        "DeleteDC",
        "DeleteObject",
        "GetDIBits",
        "GetDeviceCaps",
        "GetObjectA",
        "RealizePalette",
        "SelectObject",
        "SelectPalette",
        "SetStretchBltMode",
        "StretchBlt",
        "UnrealizeObject"
      ]
    },
    {
      "lib": "eappcfg.dll",
      "count": 4,
      "functions": [
        "EapHostPeerFreeErrorMemory",
        "EapHostPeerFreeMemory",
        "EapHostPeerGetMethods",
        "EapHostPeerQueryCredentialInputFields"
      ]
    },
    {
      "lib": "advapi32.dll",
      "count": 36,
      "functions": [
        "AddAccessAllowedAce",
        "AdjustTokenPrivileges",
        "AllocateAndInitializeSid",
        "CloseServiceHandle",
        "CreateProcessAsUserW",
        "DuplicateTokenEx",
        "FreeSid",
        "GetLengthSid",
        "GetSidSubAuthority",
        "GetSidSubAuthorityCount",
        "GetTokenInformation",
        "InitializeAcl",
        "InitializeSecurityDescriptor",
        "InitiateSystemShutdownW",
        "LookupPrivilegeValueW",
        "OpenProcessToken",
        "OpenSCManagerA",
        "OpenServiceA",
        "OpenThreadToken",
        "QueryServiceStatus",
        "RegCloseKey",
        "RegCreateKeyExA",
        "RegCreateKeyExW",
        "RegDeleteKeyW",
        "RegDeleteValueW",
        "RegEnumKeyExW",
        "RegOpenKeyExA",
        "RegOpenKeyExW",
        "RegOpenKeyW",
        "RegQueryValueExA",
        "RegQueryValueExW",
        "RegSetValueExA",
        "RegSetValueExW",
        "SetSecurityDescriptorDacl",
        "StartServiceA",
        "TraceMessage"
      ]
    },
    {
      "lib": "shell32.dll",
      "count": 3,
      "functions": [
        "ORDINAL 258",
        "SHFileOperationW",
        "ShellExecuteW"
      ]
    },
    {
      "lib": "cmpbk32.dll",
      "count": 22,
      "functions": [
        "PhoneBookCopyFilter",
        "PhoneBookEnumCountries",
        "PhoneBookEnumNumbers",
        "PhoneBookEnumNumbersWithRegionsZero",
        "PhoneBookEnumRegions",
        "PhoneBookFreeFilter",
        "PhoneBookGetCountryId",
        "PhoneBookGetCountryNameA",
        "PhoneBookGetCountryNameW",
        "PhoneBookGetCurrentCountryId",
        "PhoneBookGetPhoneCanonicalA",
        "PhoneBookGetPhoneDUNA",
        "PhoneBookGetPhoneDescA",
        "PhoneBookGetPhoneDispA",
        "PhoneBookGetPhoneNonCanonicalA",
        "PhoneBookGetPhoneType",
        "PhoneBookGetRegionNameA",
        "PhoneBookHasPhoneType",
        "PhoneBookLoad",
        "PhoneBookMatchFilter",
        "PhoneBookParseInfoA",
        "PhoneBookUnload"
      ]
    }
  ],
  "exports": {
    "count": 13,
    "functions": [
      "AutoDialFunc",
      "CmCustomDialDlg",
      "CmCustomHangUp",
      "CmReConnect",
      "GetCustomProperty",
      "InetDialHandler",
      "RasCustomDeleteEntryNotify",
      "RasCustomDial",
      "RasCustomDialDlg",
      "RasCustomEntryDlg",
      "RasCustomHangUp",
      "_AutoDialFunc@16",
      "_InetDialHandler@16"
    ]
  },
  "hashes": {
    "sha2": "49aa9e9b8f062f085b91375f9561e2ae2709826522479832d7498bc0f836f636",
    "ssdeep": "6144:OYQpumCB01d9bEDPOVBD89AFy++NW/r1d37CjWiE4qboQi1f/A3aOHM:0uAbE6VBUA0LNyRTow"
  },
  "intent": {
    "intentions": 13,
    "uniq_apis_matched": 29,
    "results": [
      {
        "intent": "Enumerates Files or Directories on the Target System",
        "tag": "Discovery:T1083 - File and Directory Discovery",
        "component": "Filesystem",
        "inputs": 5,
        "matches": 1,
        "apis": [
          "FindFirstFileW"
        ]
      },
      {
        "intent": "Can Execute or Spawn New Processes On The Target System",
        "tag": "Expert Input:IBO.0002 - Spawn New Process",
        "component": "Processes",
        "inputs": 7,
        "matches": 2,
        "apis": [
          "CreateProcessW",
          "ShellExecuteW"
        ]
      },
      {
        "intent": "Can Manipulate Access Control Mechanisms",
        "tag": "Expert Input:IBO.00021 - Windows Access Control Lists",
        "component": "Privileges",
        "inputs": 15,
        "matches": 3,
        "apis": [
          "AddAccessAllowedAce",
          "InitializeAcl",
          "SetSecurityDescriptorDacl"
        ]
      },
      {
        "intent": "Can Access And Read Windows Tokens",
        "tag": "Expert Input:IBO.00020 - Windows Token Access",
        "component": "Privileges",
        "inputs": 4,
        "matches": 2,
        "apis": [
          "OpenProcessToken",
          "OpenThreadToken"
        ]
      },
      {
        "intent": "Can Create/Manipulate The Windows Registry",
        "tag": "Expert Input:IBO.0008 - Create/Manipulate The Windows Registry",
        "component": "Registry",
        "inputs": 33,
        "matches": 9,
        "apis": [
          "RegCreateKeyExA",
          "RegCreateKeyExW",
          "RegDeleteKeyW",
          "RegDeleteValueW",
          "RegOpenKeyExA",
          "RegOpenKeyExW",
          "RegOpenKeyW",
          "RegSetValueExA",
          "RegSetValueExW"
        ]
      },
      {
        "intent": "Can Enumerate The Windows Registry",
        "tag": "Expert Input:IBO.0009 - Enumerate The Windows Registry",
        "component": "Registry",
        "inputs": 6,
        "matches": 1,
        "apis": [
          "RegEnumKeyExW"
        ]
      },
      {
        "intent": "Can Enumerate/Discover System Services And Their Configuration Data",
        "tag": "Expert Input:IBO.0006 - Enumerate System Services",
        "component": "Services",
        "inputs": 28,
        "matches": 3,
        "apis": [
          "OpenSCManagerA",
          "OpenServiceA",
          "QueryServiceStatus"
        ]
      },
      {
        "intent": "Can Terminate Processes On The Target System",
        "tag": "Expert Input:IBO.0025",
        "component": "---",
        "inputs": 1,
        "matches": 1,
        "apis": [
          "TerminateProcess"
        ]
      },
      {
        "intent": "Manipulates Windows Tokens",
        "tag": "Defense Evasion:T1134 - Access Token Manipulation",
        "component": "Privileges",
        "inputs": 4,
        "matches": 1,
        "apis": [
          "AdjustTokenPrivileges"
        ]
      },
      {
        "intent": "Coordinates System Reboots Resulting In Loss of Attack Evidence Present in System Memory",
        "tag": "Impact:T1529 - System Shutdown/Reboot",
        "component": "---",
        "inputs": 6,
        "matches": 1,
        "apis": [
          "InitiateSystemShutdownW"
        ]
      },
      {
        "intent": "Can Create/Manipulate System Services",
        "tag": "Expert Input:IBO.0007 - Create/Manipulate System Services",
        "component": "Services",
        "inputs": 19,
        "matches": 2,
        "apis": [
          "CloseServiceHandle",
          "StartServiceA"
        ]
      },
      {
        "intent": "Can Execute or Spawn New Processes On The Target System As Another User Identity",
        "tag": "Expert Input:IBO.0003 - Spawn New Process As Different User",
        "component": "Processes",
        "inputs": 2,
        "matches": 1,
        "apis": [
          "CreateProcessAsUserW"
        ]
      },
      {
        "intent": "Queries And Discovers Windows Registry Configuration Settings",
        "tag": "Discovery:T1012 - Query Registry",
        "component": "Registry",
        "inputs": 11,
        "matches": 2,
        "apis": [
          "RegQueryValueExA",
          "RegQueryValueExW"
        ]
      }
    ]
  }
}