{
  "name": "dxgwdi.dll",
  "path": "\\\\?\\C:\\Windows\\System32\\dxgwdi.dll",
  "size": 22528,
  "is_64": true,
  "is_lib": true,
  "is_dotnet": false,
  "has_imports": true,
  "has_exports": true,
  "subsystem": 3,
  "subsystem_caption": "The Windows Character (Console UI) Subsystem",
  "libs": [
    "advapi32.dll",
    "gdi32.dll",
    "kernel32.dll",
    "msvcrt.dll",
    "newdev.dll",
    "ntdll.dll",
    "ole32.dll",
    "version.dll",
    "wdi.dll",
    "wtsapi32.dll"
  ],
  "imports": [
    {
      "lib": "wdi.dll",
      "count": 9,
      "functions": [
        "WdiAddParameter",
        "WdiGetDiagnosticModuleId",
        "WdiGetEvent",
        "WdiGetParameterByIndex",
        "WdiGetParameterCount",
        "WdiGetParameterData",
        "WdiGetParameterDataLength",
        "WdiSetProblemDetectionResult",
        "WdiSetResolution"
      ]
    },
    {
      "lib": "ntdll.dll",
      "count": 4,
      "functions": [
        "RtlCaptureContext",
        "RtlCompareMemory",
        "RtlLookupFunctionEntry",
        "RtlVirtualUnwind"
      ]
    },
    {
      "lib": "wtsapi32.dll",
      "count": 1,
      "functions": [
        "WTSQueryUserToken"
      ]
    },
    {
      "lib": "ole32.dll",
      "count": 3,
      "functions": [
        "CoCreateInstance",
        "CoInitializeEx",
        "CoUninitialize"
      ]
    },
    {
      "lib": "newdev.dll",
      "count": 1,
      "functions": [
        "DiInstallDevice"
      ]
    },
    {
      "lib": "gdi32.dll",
      "count": 3,
      "functions": [
        "D3DKMTCloseAdapter",
        "D3DKMTEscape",
        "D3DKMTOpenAdapterFromDeviceName"
      ]
    },
    {
      "lib": "version.dll",
      "count": 3,
      "functions": [
        "GetFileVersionInfoSizeW",
        "GetFileVersionInfoW",
        "VerQueryValueW"
      ]
    },
    {
      "lib": "kernel32.dll",
      "count": 20,
      "functions": [
        "CloseHandle",
        "DelayLoadFailureHook",
        "FormatMessageW",
        "GetCurrentProcess",
        "GetCurrentProcessId",
        "GetCurrentThreadId",
        "GetLastError",
        "GetSystemTimeAsFileTime",
        "GetTickCount",
        "LocalAlloc",
        "LocalFree",
        "QueryPerformanceCounter",
        "RegisterWaitUntilOOBECompleted",
        "ResolveDelayLoadedAPI",
        "SetUnhandledExceptionFilter",
        "Sleep",
        "TerminateProcess",
        "UnhandledExceptionFilter",
        "UnregisterWaitUntilOOBECompleted",
        "WTSGetActiveConsoleSessionId"
      ]
    },
    {
      "lib": "advapi32.dll",
      "count": 7,
      "functions": [
        "DeregisterEventSource",
        "GetTokenInformation",
        "RegCloseKey",
        "RegCreateKeyExW",
        "RegSetValueExW",
        "RegisterEventSourceW",
        "ReportEventW"
      ]
    },
    {
      "lib": "msvcrt.dll",
      "count": 10,
      "functions": [
        "_XcptFilter",
        "__C_specific_handler",
        "_amsg_exit",
        "_initterm",
        "_vsnwprintf",
        "_wcsnicmp",
        "free",
        "malloc",
        "memcpy",
        "memset"
      ]
    }
  ],
  "exports": {
    "count": 3,
    "functions": [
      "WdiDiagnosticModuleMain",
      "WdiGetDiagnosticModuleInterfaceVersion",
      "WdiHandleInstance"
    ]
  },
  "hashes": {
    "sha2": "c5b18df1d78b79794b4e1c5bd8ee229836f7fa576ab7eb59258c4bc8e37914ad",
    "ssdeep": "384:Swro8vxha10358HB6tpZgqHcEzn6ICKtSzyNgZwCvUoZ0MCASZ1OWFFYW:SwLvaW35O6tUmjt1N5xMC5X"
  },
  "intent": {
    "intentions": 3,
    "uniq_apis_matched": 5,
    "results": [
      {
        "intent": "Can Terminate Processes On The Target System",
        "tag": "Expert Input:IBO.0025",
        "component": "Processes",
        "inputs": 1,
        "matches": 1,
        "apis": [
          "TerminateProcess"
        ]
      },
      {
        "intent": "Can Create/Manipulate The Windows Registry",
        "tag": "Expert Input:IBO.008 - Create/Manipulate The Windows Registry",
        "component": "Registry",
        "inputs": 33,
        "matches": 2,
        "apis": [
          "RegCreateKeyExW",
          "RegSetValueExW"
        ]
      },
      {
        "intent": "Can Delay Loading of DLLs Until Runtime/Process Execution",
        "tag": "Expert Input:IBO.005 - Load DLL Resources With Delay During Runtime",
        "component": "Memory",
        "inputs": 2,
        "matches": 2,
        "apis": [
          "DelayLoadFailureHook",
          "ResolveDelayLoadedAPI"
        ]
      }
    ]
  }
}