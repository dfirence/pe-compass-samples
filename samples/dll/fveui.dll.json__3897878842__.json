{
  "pe_name": "fveui.dll",
  "pe_type": 523,
  "pe_size": 324096,
  "pe_subsystem": 2,
  "pe_subsystem_caption": "The Windows graphical user interface (GUI) subsystem",
  "pe_path": "c:\\Windows\\WinSxS\\amd64_microsoft-windows-securestartup-ui-libs_31bf3856ad364e35_10.0.19041.1620_none_b04c7ac4f21205f7\\fveui.dll",
  "pe_timedate_stamp": 2666528911,
  "pe_timedate_human": "2054-07-01T14:28:31.000Z",
  "ImageDLLImports": [
    {
      "name": "msvcrt.dll",
      "imports": 35,
      "functions": [
        "??0exception@@QEAA@AEBQEBD@Z",
        "??0exception@@QEAA@AEBQEBDH@Z",
        "??0exception@@QEAA@AEBV0@@Z",
        "??1exception@@UEAA@XZ",
        "??1type_info@@UEAA@XZ",
        "??3@YAXPEAX@Z",
        "??_V@YAXPEAX@Z",
        "?terminate@@YAXXZ",
        "?what@exception@@UEBAPEBDXZ",
        "_CxxThrowException",
        "_XcptFilter",
        "__C_specific_handler",
        "__CxxFrameHandler3",
        "__dllonexit",
        "_amsg_exit",
        "_callnewh",
        "_initterm",
        "_lock",
        "_onexit",
        "_purecall",
        "_stricmp",
        "_unlock",
        "_vsnwprintf",
        "free",
        "iswascii",
        "malloc",
        "memcmp",
        "memcpy",
        "memmove",
        "memset",
        "toupper",
        "wcschr",
        "wcscmp",
        "wcsnlen",
        "wcstoul"
      ]
    },
    {
      "name": "kernel32.dll",
      "imports": 57,
      "functions": [
        "AcquireSRWLockExclusive",
        "ActivateActCtx",
        "CloseHandle",
        "CompareStringOrdinal",
        "CreateActCtxW",
        "CreateEventW",
        "DeactivateActCtx",
        "DelayLoadFailureHook",
        "DeleteCriticalSection",
        "DeleteFileW",
        "EnterCriticalSection",
        "FindActCtxSectionStringW",
        "FreeLibrary",
        "GetCurrentProcess",
        "GetCurrentProcessId",
        "GetCurrentThread",
        "GetCurrentThreadId",
        "GetDriveTypeW",
        "GetFileAttributesW",
        "GetLastError",
        "GetModuleFileNameA",
        "GetModuleFileNameW",
        "GetModuleHandleExW",
        "GetProcAddress",
        "GetProcessHeap",
        "GetProcessMitigationPolicy",
        "GetSystemTimeAsFileTime",
        "GetSystemWindowsDirectoryW",
        "GetTickCount",
        "GetVolumePathNameW",
        "GetVolumePathNamesForVolumeNameW",
        "HeapAlloc",
        "HeapFree",
        "HeapSize",
        "InitializeCriticalSectionEx",
        "LeaveCriticalSection",
        "LoadLibraryExW",
        "LoadLibraryW",
        "LocalAlloc",
        "LocalFree",
        "MultiByteToWideChar",
        "OutputDebugStringA",
        "QueryActCtxW",
        "QueryPerformanceCounter",
        "RaiseException",
        "ReleaseSRWLockExclusive",
        "ResolveDelayLoadedAPI",
        "RtlCaptureContext",
        "RtlCompareMemory",
        "RtlLookupFunctionEntry",
        "RtlVirtualUnwind",
        "SetEvent",
        "SetLastError",
        "SetUnhandledExceptionFilter",
        "Sleep",
        "TerminateProcess",
        "UnhandledExceptionFilter"
      ]
    },
    {
      "name": "advapi32.dll",
      "imports": 48,
      "functions": [
        "AdjustTokenPrivileges",
        "AllocateAndInitializeSid",
        "CheckTokenMembership",
        "CloseServiceHandle",
        "CryptAcquireContextW",
        "CryptDestroyKey",
        "CryptGetKeyParam",
        "CryptGetProvParam",
        "CryptGetUserKey",
        "CryptReleaseContext",
        "DuplicateTokenEx",
        "EventProviderEnabled",
        "EventRegister",
        "EventSetInformation",
        "EventUnregister",
        "EventWriteTransfer",
        "FreeSid",
        "GetTraceEnableFlags",
        "GetTraceEnableLevel",
        "GetTraceLoggerHandle",
        "LsaClose",
        "LsaFreeMemory",
        "LsaOpenPolicy",
        "LsaQueryInformationPolicy",
        "OpenProcessToken",
        "OpenSCManagerW",
        "OpenServiceW",
        "OpenThreadToken",
        "QueryServiceStatus",
        "RegCloseKey",
        "RegCreateKeyExW",
        "RegDeleteKeyValueW",
        "RegDeleteTreeW",
        "RegEnumKeyExW",
        "RegEnumValueW",
        "RegGetValueA",
        "RegGetValueW",
        "RegLoadKeyW",
        "RegOpenKeyExW",
        "RegQueryInfoKeyW",
        "RegSetKeyValueW",
        "RegSetValueExW",
        "RegUnLoadKeyW",
        "RegisterTraceGuidsW",
        "SetThreadToken",
        "StartServiceW",
        "TraceMessage",
        "UnregisterTraceGuids"
      ]
    },
    {
      "name": "oleaut32.dll",
      "imports": 0,
      "functions": []
    },
    {
      "name": "shell32.dll",
      "imports": 1,
      "functions": [
        "ShellExecuteW"
      ]
    },
    {
      "name": "fveapi.dll",
      "imports": 47,
      "functions": [
        "FveAddAuthMethodInformation",
        "FveAttemptAutoUnlock",
        "FveAuthElementFromPassPhraseW",
        "FveAuthElementFromRecoveryPasswordW",
        "FveAuthElementGetKeyFileNameW",
        "FveAuthElementReadExternalKeyW",
        "FveBackupRecoveryInformationToADEx",
        "FveBindDataVolume",
        "FveCheckTpmCapability",
        "FveCloseHandle",
        "FveCloseVolume",
        "FveCommitChanges",
        "FveConversionEncryptEx",
        "FveConversionResume",
        "FveConversionStop",
        "FveConversionStopEx",
        "FveDeleteAuthMethod",
        "FveFindFirstVolume",
        "FveFindNextVolume",
        "FveGetAuthMethodGuids",
        "FveGetAuthMethodInformation",
        "FveGetDescriptionW",
        "FveGetIdentity",
        "FveGetRecoveryPasswordBackupInformation",
        "FveGetSecureBootBindingState",
        "FveGetStatus",
        "FveGetVolumeNameW",
        "FveInitializeDeviceEncryption2",
        "FveIsAnyDataVolumeBoundToOSVolume",
        "FveIsBoundDataVolume",
        "FveIsBoundDataVolumeToOSVolume",
        "FveIsDeviceLockedOut",
        "FveIsHybridVolumeW",
        "FveIsVolumeEncryptable",
        "FveNeedsDiscoveryVolumeUpdate",
        "FveOpenVolumeByHandle",
        "FveOpenVolumeExW",
        "FveOpenVolumeW",
        "FveRevertVolume",
        "FveSelectBestRecoveryPasswordByBackupInformation",
        "FveServiceDiscoveryVolume",
        "FveSetAllowKeyExport",
        "FveSetFipsAllowDisabled",
        "FveUnbindAllDataVolumeFromOSVolume",
        "FveUnbindDataVolume",
        "FveUnlockVolumeWithAccessMode",
        "FveUpgradeVolume"
      ]
    },
    {
      "name": "fvecerts.dll",
      "imports": 8,
      "functions": [
        "FveCertCanCertificateBeAdded",
        "FveCertCreateCertInfo",
        "FveCertFilterForValidCertificates",
        "FveCertFreeCertInfo",
        "FveCertGetCertHashFromCertContext",
        "FveCertGetPrivateKeyHandle",
        "FveCertGetPublicKeyHandle",
        "FveCertIsAlternateCert"
      ]
    },
    {
      "name": "crypt32.dll",
      "imports": 8,
      "functions": [
        "CertAddCertificateContextToStore",
        "CertAddCertificateLinkToStore",
        "CertCloseStore",
        "CertEnumCertificatesInStore",
        "CertFreeCertificateContext",
        "CertOpenStore",
        "CertSetCertificateContextProperty",
        "CryptQueryObject"
      ]
    },
    {
      "name": "profapi.dll",
      "imports": 0,
      "functions": []
    },
    {
      "name": "credui.dll",
      "imports": 1,
      "functions": [
        "CredUIPromptForWindowsCredentialsW"
      ]
    },
    {
      "name": "rpcrt4.dll",
      "imports": 7,
      "functions": [
        "NdrClientCall3",
        "RpcBindingFree",
        "RpcBindingFromStringBindingW",
        "RpcBindingSetAuthInfoExW",
        "RpcStringBindingComposeW",
        "RpcStringFreeW",
        "UuidFromStringW"
      ]
    },
    {
      "name": "user32.dll",
      "imports": 2,
      "functions": [
        "LoadStringW",
        "PostMessageW"
      ]
    },
    {
      "name": "ntdll.dll",
      "imports": 6,
      "functions": [
        "NtPowerInformation",
        "NtQuerySystemInformation",
        "RtlDosPathNameToNtPathName_U_WithStatus",
        "RtlFreeUnicodeString",
        "RtlNtStatusToDosError",
        "RtlStringFromGUID"
      ]
    },
    {
      "name": "api-ms-win-core-winrt-l1-1-0.dll",
      "imports": 1,
      "functions": [
        "RoGetActivationFactory"
      ]
    },
    {
      "name": "api-ms-win-core-winrt-string-l1-1-0.dll",
      "imports": 1,
      "functions": [
        "WindowsCreateStringReference"
      ]
    },
    {
      "name": "bcd.dll",
      "imports": 7,
      "functions": [
        "BcdCloseObject",
        "BcdCloseStore",
        "BcdEnumerateAndUnpackElements",
        "BcdEnumerateObjects",
        "BcdGetElementData",
        "BcdOpenObject",
        "BcdOpenSystemStore"
      ]
    },
    {
      "name": "api-ms-win-core-com-l1-1-0.dll",
      "imports": 6,
      "functions": [
        "CLSIDFromString",
        "CoInitializeEx",
        "CoTaskMemFree",
        "CoUninitialize",
        "CoWaitForMultipleHandles",
        "StringFromGUID2"
      ]
    },
    {
      "name": "bcrypt.dll",
      "imports": 6,
      "functions": [
        "BCryptCloseAlgorithmProvider",
        "BCryptCreateHash",
        "BCryptDestroyHash",
        "BCryptFinishHash",
        "BCryptHashData",
        "BCryptOpenAlgorithmProvider"
      ]
    }
  ],
  "ImageDLLExports": {
    "exports": 45,
    "functions": [
      "??0VolumeFveStatus@@IEAA@XZ",
      "??0VolumeFveStatus@@QEAA@K_KJW4_FVE_WIPING_STATE@@@Z",
      "??4BuiVolume@@QEAAAEAV0@AEBV0@@Z",
      "??4VolumeFveStatus@@QEAAAEAV0@$$QEAV0@@Z",
      "??4VolumeFveStatus@@QEAAAEAV0@AEBV0@@Z",
      "?FailedDryRun@VolumeFveStatus@@QEBA_NXZ",
      "?GetExtendedFlags@VolumeFveStatus@@QEBA_KXZ",
      "?GetLastConvertStatus@VolumeFveStatus@@QEBAJXZ",
      "?GetStatusFlags@VolumeFveStatus@@QEBAKXZ",
      "?HasExternalKey@VolumeFveStatus@@QEBA_NXZ",
      "?HasPBKDF2RecoveryPassword@VolumeFveStatus@@QEBA_NXZ",
      "?HasPassphraseProtector@VolumeFveStatus@@QEBA_NXZ",
      "?HasPinProtector@VolumeFveStatus@@QEBA_NXZ",
      "?HasRecoveryData@VolumeFveStatus@@QEBA_NXZ",
      "?HasRecoveryPassword@VolumeFveStatus@@QEBA_NXZ",
      "?HasSmartCardProtector@VolumeFveStatus@@QEBA_NXZ",
      "?HasStartupKeyProtector@VolumeFveStatus@@QEBA_NXZ",
      "?HasTpmProtector@VolumeFveStatus@@QEBA_NXZ",
      "?IsConverting@VolumeFveStatus@@QEBA_NXZ",
      "?IsCsvMetadataVolume@VolumeFveStatus@@QEBA_NXZ",
      "?IsDEAutoProvisioned@VolumeFveStatus@@QEBA_NXZ",
      "?IsDecrypted@VolumeFveStatus@@QEBA_NXZ",
      "?IsDecrypting@VolumeFveStatus@@QEBA_NXZ",
      "?IsDisabled@VolumeFveStatus@@QEBA_NXZ",
      "?IsEDriveVolume@VolumeFveStatus@@QEBA_NXZ",
      "?IsEncrypted@VolumeFveStatus@@QEBA_NXZ",
      "?IsEncrypting@VolumeFveStatus@@QEBA_NXZ",
      "?IsLocked@VolumeFveStatus@@QEBA_NXZ",
      "?IsOn@VolumeFveStatus@@QEBA_NXZ",
      "?IsOsCriticalVolume@VolumeFveStatus@@QEBA_NXZ",
      "?IsOsVolume@VolumeFveStatus@@QEBA_NXZ",
      "?IsPartiallyConverted@VolumeFveStatus@@QEBA_NXZ",
      "?IsPaused@VolumeFveStatus@@QEBA_NXZ",
      "?IsPreProvisioned@VolumeFveStatus@@QEBA_NXZ",
      "?IsRoamingDevice@VolumeFveStatus@@QEBA_NXZ",
      "?IsSecure@VolumeFveStatus@@QEBA_NXZ",
      "?IsUnknownFveVersion@VolumeFveStatus@@QEBA_NXZ",
      "?IsWiping@VolumeFveStatus@@QEBA_NXZ",
      "?NO_DRIVE_LETTER@BuiVolume@@2IB",
      "?NeedsRestart@VolumeFveStatus@@QEBA_NXZ",
      "DllCanUnloadNow",
      "DllGetClassObject",
      "FveuiEnumSmartCardCerts",
      "FveuiUserSelectCert",
      "FveuiUserSelectSmartCard"
    ]
  },
  "ImageHashSignatures": {
    "sha2": "d309f61e0fd556bd47fc2db27cf8ca1614ff20c44574b1e59cfebaca4a28b41d"
  },
  "scan": {
    "intentions": 10,
    "uniq_apis_matched": 23,
    "results": [
      {
        "intent": "Implements Delayed Loads of DLL Resources",
        "tag": "Expert Input:IBO.0005 - Load DLL Resources With Delay During Runtime",
        "component": "---",
        "inputs": 2,
        "matches": 2,
        "apis": [
          "DelayLoadFailureHook",
          "ResolveDelayLoadedAPI"
        ]
      },
      {
        "intent": "Implements Features To Execute or Spawn New Processes On The Target System",
        "tag": "Expert Input:IBO.0002 - Spawn New Process",
        "component": "Processes",
        "inputs": 7,
        "matches": 1,
        "apis": [
          "ShellExecuteW"
        ]
      },
      {
        "intent": "Implements Features To Enumerate/Discover System Services And Their Configuration Data",
        "tag": "Expert Input:IBO.0006 - Enumerate System Services",
        "component": "Services",
        "inputs": 28,
        "matches": 3,
        "apis": [
          "OpenSCManagerW",
          "OpenServiceW",
          "QueryServiceStatus"
        ]
      },
      {
        "intent": "Query And Discover Windows Registry Configuration Settings",
        "tag": "Discovery:T1012 - Query Registry",
        "component": "Registry",
        "inputs": 11,
        "matches": 3,
        "apis": [
          "RegGetValueA",
          "RegGetValueW",
          "RegQueryInfoKeyW"
        ]
      },
      {
        "intent": "Delete Files From Disk Potentially Erasing Important Evidence To Cover Attack Activity",
        "tag": "Defense Evasion:T1070.004 - File Deletion",
        "component": "Filesystem",
        "inputs": 2,
        "matches": 1,
        "apis": [
          "DeleteFileW"
        ]
      },
      {
        "intent": "Implements Features To Create/Manipulate System Services",
        "tag": "Expert Input:IBO.0007 - Create/Manipulate System Services",
        "component": "Services",
        "inputs": 19,
        "matches": 2,
        "apis": [
          "CloseServiceHandle",
          "StartServiceW"
        ]
      },
      {
        "intent": "Implements Features To Enumerate The Windows Registry",
        "tag": "Expert Input:IBO.0009 - Enumerate The Windows Registry",
        "component": "Registry",
        "inputs": 6,
        "matches": 2,
        "apis": [
          "RegEnumKeyExW",
          "RegEnumValueW"
        ]
      },
      {
        "intent": "Manipulate Windows Tokens",
        "tag": "Defense Evasion:T1134 - Access Token Manipulation",
        "component": "Privileges",
        "inputs": 10,
        "matches": 4,
        "apis": [
          "AdjustTokenPrivileges",
          "CheckTokenMembership",
          "OpenProcessToken",
          "OpenThreadToken"
        ]
      },
      {
        "intent": "Create Token To Impersonate",
        "tag": "Privilege Escalation:T1134.003 - Make and Impersonate Token",
        "component": "Privileges",
        "inputs": 2,
        "matches": 1,
        "apis": [
          "SetThreadToken"
        ]
      },
      {
        "intent": "Implements Features To Create/Manipulate The Windows Registry",
        "tag": "Expert Input:IBO.0008 - Create/Manipulate The Windows Registry",
        "component": "Registry",
        "inputs": 33,
        "matches": 4,
        "apis": [
          "RegCreateKeyExW",
          "RegOpenKeyExW",
          "RegSetKeyValueW",
          "RegSetValueExW"
        ]
      }
    ]
  }
}