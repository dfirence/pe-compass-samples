{
  "name": "presentationhost_v0400.dll",
  "path": "\\\\?\\C:\\Windows\\WinSxS\\x86_netfx4-presentationhostdll_b03f5f7f11d50a3a_4.0.15805.340_none_f465986b0e978d7a\\PresentationHost_v0400.dll",
  "size": 233872,
  "is_64": false,
  "is_lib": true,
  "is_dotnet": true,
  "has_imports": true,
  "has_exports": true,
  "subsystem": 3,
  "subsystem_caption": "The Windows Character (Console UI) Subsystem",
  "libs": [
    "advapi32.dll",
    "gdi32.dll",
    "kernel32.dll",
    "mscoree.dll",
    "ntdll.dll",
    "ole32.dll",
    "oleaut32.dll",
    "psapi.dll",
    "shell32.dll",
    "shlwapi.dll",
    "ucrtbase_clr0400.dll",
    "urlmon.dll",
    "user32.dll",
    "vcruntime140_clr0400.dll",
    "version.dll",
    "wininet.dll"
  ],
  "imports": [
    {
      "lib": "user32.dll",
      "count": 79,
      "functions": [
        "BeginPaint",
        "CallWindowProcW",
        "CharNextW",
        "CheckMenuItem",
        "ClientToScreen",
        "CreateAcceleratorTableW",
        "CreateMenu",
        "CreateWindowExW",
        "DefWindowProcW",
        "DestroyAcceleratorTable",
        "DestroyMenu",
        "DestroyWindow",
        "DispatchMessageW",
        "EnableMenuItem",
        "EndPaint",
        "FillRect",
        "GetActiveWindow",
        "GetClassInfoExW",
        "GetClassInfoW",
        "GetClassNameW",
        "GetClientRect",
        "GetDC",
        "GetDesktopWindow",
        "GetDlgItem",
        "GetFocus",
        "GetKeyState",
        "GetMenuItemCount",
        "GetMenuItemID",
        "GetMenuItemInfoW",
        "GetMenuStringW",
        "GetMessageExtraInfo",
        "GetMessageW",
        "GetParent",
        "GetSubMenu",
        "GetSysColor",
        "GetWindow",
        "GetWindowLongW",
        "GetWindowTextLengthW",
        "GetWindowTextW",
        "GetWindowThreadProcessId",
        "InsertMenuW",
        "InvalidateRect",
        "InvalidateRgn",
        "IsChild",
        "IsWindow",
        "KillTimer",
        "LoadCursorW",
        "LoadMenuW",
        "LoadStringW",
        "MessageBeep",
        "MessageBoxW",
        "MoveWindow",
        "MsgWaitForMultipleObjects",
        "PeekMessageW",
        "PostMessageW",
        "PostQuitMessage",
        "PostThreadMessageW",
        "RedrawWindow",
        "RegisterClassExW",
        "RegisterClassW",
        "RegisterRawInputDevices",
        "RegisterWindowMessageW",
        "ReleaseCapture",
        "ReleaseDC",
        "RemoveMenu",
        "ScreenToClient",
        "SendMessageW",
        "SetCapture",
        "SetFocus",
        "SetMessageExtraInfo",
        "SetParent",
        "SetTimer",
        "SetWindowLongW",
        "SetWindowPos",
        "SetWindowTextW",
        "ShowWindow",
        "TranslateMessage",
        "UnregisterClassW",
        "WaitForInputIdle"
      ]
    },
    {
      "lib": "psapi.dll",
      "count": 1,
      "functions": [
        "GetMappedFileNameW"
      ]
    },
    {
      "lib": "kernel32.dll",
      "count": 110,
      "functions": [
        "ActivateActCtx",
        "CloseHandle",
        "CreateActCtxW",
        "CreateEventW",
        "CreateFileMappingW",
        "CreateFileW",
        "CreateMutexW",
        "CreateProcessW",
        "CreateTimerQueueTimer",
        "CreateToolhelp32Snapshot",
        "DeactivateActCtx",
        "DecodePointer",
        "DeleteCriticalSection",
        "DeleteTimerQueueTimer",
        "DisableThreadLibraryCalls",
        "EncodePointer",
        "EnterCriticalSection",
        "ExitProcess",
        "ExpandEnvironmentStringsW",
        "FileTimeToSystemTime",
        "FindClose",
        "FindFirstFileW",
        "FindResourceExW",
        "FindResourceW",
        "FlushInstructionCache",
        "FormatMessageW",
        "FreeLibrary",
        "GetCommandLineW",
        "GetCurrentProcess",
        "GetCurrentProcessId",
        "GetCurrentThread",
        "GetCurrentThreadId",
        "GetEnvironmentVariableW",
        "GetExitCodeProcess",
        "GetFileAttributesExW",
        "GetLastError",
        "GetLocaleInfoW",
        "GetModuleFileNameW",
        "GetModuleHandleW",
        "GetNativeSystemInfo",
        "GetProcAddress",
        "GetProcessHeap",
        "GetProcessTimes",
        "GetStartupInfoW",
        "GetSystemDefaultUILanguage",
        "GetSystemDirectoryW",
        "GetSystemTimeAsFileTime",
        "GetTempFileNameW",
        "GetTempPathW",
        "GetThreadContext",
        "GetUserDefaultLangID",
        "GetUserDefaultUILanguage",
        "GetVersionExW",
        "GlobalAlloc",
        "GlobalLock",
        "GlobalUnlock",
        "HeapAlloc",
        "HeapFree",
        "InitializeCriticalSectionEx",
        "InitializeSListHead",
        "InterlockedPopEntrySList",
        "InterlockedPushEntrySList",
        "IsDebuggerPresent",
        "IsProcessorFeaturePresent",
        "IsWow64Process",
        "LeaveCriticalSection",
        "LoadLibraryExA",
        "LoadLibraryExW",
        "LoadLibraryW",
        "LoadResource",
        "LocalAlloc",
        "LocalFree",
        "LockResource",
        "MapViewOfFile",
        "Module32FirstW",
        "Module32NextW",
        "MulDiv",
        "MultiByteToWideChar",
        "OpenEventW",
        "OpenProcess",
        "OutputDebugStringW",
        "QueryPerformanceCounter",
        "QueueUserWorkItem",
        "RaiseException",
        "RegisterWaitForSingleObject",
        "ReleaseActCtx",
        "ReleaseMutex",
        "ResetEvent",
        "ResumeThread",
        "SearchPathW",
        "SetEvent",
        "SetLastError",
        "SetThreadContext",
        "SetUnhandledExceptionFilter",
        "SizeofResource",
        "SuspendThread",
        "SwitchToThread",
        "TerminateProcess",
        "UnhandledExceptionFilter",
        "UnmapViewOfFile",
        "VirtualAlloc",
        "VirtualFree",
        "VirtualProtect",
        "VirtualQuery",
        "WaitForMultipleObjects",
        "WaitForSingleObject",
        "WaitForSingleObjectEx",
        "WriteFile",
        "lstrcmpW",
        "lstrcmpiW"
      ]
    },
    {
      "lib": "version.dll",
      "count": 3,
      "functions": [
        "GetFileVersionInfoSizeW",
        "GetFileVersionInfoW",
        "VerQueryValueW"
      ]
    },
    {
      "lib": "ucrtbase_clr0400.dll",
      "count": 32,
      "functions": [
        "__stdio_common_vswprintf",
        "__stdio_common_vswprintf_s",
        "_beginthreadex",
        "_callnewh",
        "_cexit",
        "_configure_narrow_argv",
        "_crt_atexit",
        "_errno",
        "_execute_onexit_table",
        "_initialize_narrow_environment",
        "_initialize_onexit_table",
        "_initterm",
        "_initterm_e",
        "_invalid_parameter_noinfo",
        "_recalloc",
        "_register_onexit_function",
        "_seh_filter_dll",
        "_ultow_s",
        "_wcsicmp",
        "_wcslwr_s",
        "_wcsnicmp",
        "bsearch",
        "free",
        "isdigit",
        "iswdigit",
        "malloc",
        "terminate",
        "tolower",
        "wcscat_s",
        "wcscpy_s",
        "wcsncmp",
        "wcsncpy_s"
      ]
    },
    {
      "lib": "shlwapi.dll",
      "count": 6,
      "functions": [
        "AssocQueryStringW",
        "PathAppendW",
        "PathCombineW",
        "PathFindExtensionW",
        "PathIsURLW",
        "UrlCreateFromPathW"
      ]
    },
    {
      "lib": "mscoree.dll",
      "count": 3,
      "functions": [
        "CLRCreateInstance",
        "CoEEShutDownCOM",
        "LoadLibraryShim"
      ]
    },
    {
      "lib": "wininet.dll",
      "count": 5,
      "functions": [
        "InternetCrackUrlW",
        "InternetCreateUrlW",
        "InternetErrorDlg",
        "InternetGetCookieExW",
        "InternetSetCookieExW"
      ]
    },
    {
      "lib": "oleaut32.dll",
      "count": 13,
      "functions": [
        "ORDINAL 10",
        "ORDINAL 146",
        "ORDINAL 150",
        "ORDINAL 161",
        "ORDINAL 162",
        "ORDINAL 2",
        "ORDINAL 277",
        "ORDINAL 4",
        "ORDINAL 420",
        "ORDINAL 6",
        "ORDINAL 7",
        "ORDINAL 8",
        "ORDINAL 9"
      ]
    },
    {
      "lib": "advapi32.dll",
      "count": 38,
      "functions": [
        "AddAccessAllowedAce",
        "AddAce",
        "CopySid",
        "CreateProcessAsUserW",
        "CreateRestrictedToken",
        "CreateWellKnownSid",
        "EqualSid",
        "GetAce",
        "GetAclInformation",
        "GetKernelObjectSecurity",
        "GetLengthSid",
        "GetSecurityDescriptorDacl",
        "GetSidSubAuthority",
        "GetSidSubAuthorityCount",
        "GetTokenInformation",
        "GetTraceEnableFlags",
        "GetTraceEnableLevel",
        "GetTraceLoggerHandle",
        "InitializeAcl",
        "LsaClose",
        "LsaLookupPrivilegeValue",
        "LsaNtStatusToWinError",
        "LsaOpenPolicy",
        "OpenProcessToken",
        "RegCloseKey",
        "RegCreateKeyExW",
        "RegDeleteKeyW",
        "RegDeleteValueW",
        "RegEnumKeyExW",
        "RegEnumKeyW",
        "RegEnumValueW",
        "RegOpenKeyExW",
        "RegQueryInfoKeyW",
        "RegQueryValueExW",
        "RegSetValueExW",
        "RegisterTraceGuidsW",
        "SetTokenInformation",
        "TraceEvent"
      ]
    },
    {
      "lib": "vcruntime140_clr0400.dll",
      "count": 12,
      "functions": [
        "_CxxThrowException",
        "__CxxFrameHandler3",
        "__std_type_info_destroy_list",
        "__vcrt_InitializeCriticalSectionEx",
        "_except_handler4_common",
        "_purecall",
        "memcmp",
        "memcpy",
        "memmove",
        "memset",
        "wcschr",
        "wcsstr"
      ]
    },
    {
      "lib": "shell32.dll",
      "count": 5,
      "functions": [
        "CommandLineToArgvW",
        "SHGetFolderPathW",
        "SHGetKnownFolderPath",
        "ShellExecuteExW",
        "ShellExecuteW"
      ]
    },
    {
      "lib": "urlmon.dll",
      "count": 11,
      "functions": [
        "CoInternetCombineUrl",
        "CoInternetCreateSecurityManager",
        "CoInternetParseUrl",
        "CompareSecurityIds",
        "CreateURLMoniker",
        "CreateURLMonikerEx",
        "GetClassFileOrMime",
        "RegisterBindStatusCallback",
        "URLDownloadToCacheFileW",
        "URLOpenBlockingStreamW",
        "UrlMkGetSessionOption"
      ]
    },
    {
      "lib": "ole32.dll",
      "count": 25,
      "functions": [
        "CLSIDFromProgID",
        "CLSIDFromString",
        "CoAllowSetForegroundWindow",
        "CoCreateInstance",
        "CoGetClassObject",
        "CoInitialize",
        "CoMarshalInterThreadInterfaceInStream",
        "CoRegisterClassObject",
        "CoRegisterMessageFilter",
        "CoReleaseMarshalData",
        "CoRevokeClassObject",
        "CoTaskMemAlloc",
        "CoTaskMemFree",
        "CoTaskMemRealloc",
        "CoUninitialize",
        "CoUnmarshalInterface",
        "CreateBindCtx",
        "CreateStreamOnHGlobal",
        "OleCreateMenuDescriptor",
        "OleDestroyMenuDescriptor",
        "OleInitialize",
        "OleLockRunning",
        "OleTranslateAccelerator",
        "OleUninitialize",
        "StringFromGUID2"
      ]
    },
    {
      "lib": "gdi32.dll",
      "count": 10,
      "functions": [
        "BitBlt",
        "CreateCompatibleBitmap",
        "CreateCompatibleDC",
        "CreateSolidBrush",
        "DeleteDC",
        "DeleteObject",
        "GetDeviceCaps",
        "GetObjectW",
        "GetStockObject",
        "SelectObject"
      ]
    },
    {
      "lib": "ntdll.dll",
      "count": 2,
      "functions": [
        "RtlGetVersion",
        "RtlInitUnicodeString"
      ]
    }
  ],
  "exports": {
    "count": 27,
    "functions": [
      "Activate",
      "CreateIDispatchSTAForwarder",
      "DRMCloseEnvironmentHandle",
      "DRMCloseHandle",
      "DRMCreateBoundLicense",
      "DRMCreateEnablingBitsDecryptor",
      "DRMCreateEnablingBitsEncryptor",
      "DRMCreateLicenseStorageSession",
      "DRMDecrypt",
      "DRMEncrypt",
      "DRMGetBoundLicenseAttribute",
      "DRMGetBoundLicenseObject",
      "DRMGetBoundLicenseObjectCount",
      "DRMGetInfo",
      "DRMGetServiceLocation",
      "DRMGetSignedIssuanceLicense",
      "DRMInitEnvironment",
      "Deactivate",
      "DllMain",
      "DllRegisterServer",
      "DllUnregisterServer",
      "ForwardTranslateAccelerator",
      "LoadFromHistory",
      "ProcessCommandLine",
      "ProcessUnhandledException",
      "SaveToHistory",
      "SetFakeActiveWindow"
    ]
  },
  "hashes": {
    "sha2": "f4a3604945cdb62afa205f0a3477ab683eb2c7cdbb1a723b5ab6dd21c7ea2712",
    "ssdeep": "6144:2eqDYUoL+0LJPwrvAWTip9wwT6d/2bi3xI5VQ:LGYUoPepTip9dT6Em3xqQ"
  },
  "intent": {
    "intentions": 15,
    "uniq_apis_matched": 29,
    "results": [
      {
        "intent": "Can Enumerate The Windows Registry",
        "tag": "Expert Input:IBO.009 - Enumerate The Windows Registry",
        "component": "Registry",
        "inputs": 6,
        "matches": 3,
        "apis": [
          "RegEnumKeyExW",
          "RegEnumKeyW",
          "RegEnumValueW"
        ]
      },
      {
        "intent": "Connects Over HTTP, HTTPS To Download Content On The Target System",
        "tag": "Command And Control:T1105 - Ingress Tool Transfer",
        "component": "Networking",
        "inputs": 21,
        "matches": 2,
        "apis": [
          "InternetCrackUrlW",
          "InternetCreateUrlW"
        ]
      },
      {
        "intent": "Can Manipulate Access Control Mechanisms",
        "tag": "Expert Input:IBO.0021 - Windows Access Control Lists",
        "component": "Privileges",
        "inputs": 15,
        "matches": 3,
        "apis": [
          "AddAccessAllowedAce",
          "AddAce",
          "InitializeAcl"
        ]
      },
      {
        "intent": "Can Access And Read Windows Tokens",
        "tag": "Expert Input:IBO.0020 - Windows Token Access",
        "component": "Privileges",
        "inputs": 4,
        "matches": 1,
        "apis": [
          "OpenProcessToken"
        ]
      },
      {
        "intent": "Can Create/Manipulate The Windows Registry",
        "tag": "Expert Input:IBO.008 - Create/Manipulate The Windows Registry",
        "component": "Registry",
        "inputs": 33,
        "matches": 5,
        "apis": [
          "RegCreateKeyExW",
          "RegDeleteKeyW",
          "RegDeleteValueW",
          "RegOpenKeyExW",
          "RegSetValueExW"
        ]
      },
      {
        "intent": "Can Terminate Processes On The Target System",
        "tag": "Expert Input:IBO.0025",
        "component": "Processes",
        "inputs": 1,
        "matches": 1,
        "apis": [
          "TerminateProcess"
        ]
      },
      {
        "intent": "Enumerates Running Processes/Applications",
        "tag": "Discovery:T1057 - Process Discovery",
        "component": "Processes",
        "inputs": 5,
        "matches": 1,
        "apis": [
          "CreateToolHelp32Snapshot"
        ]
      },
      {
        "intent": "Queries and Discovers General Attributes From The Target System",
        "tag": "Discovery:T1082 - System Information Discovery",
        "component": "---",
        "inputs": 3,
        "matches": 2,
        "apis": [
          "GetNativeSystemInfo",
          "RtlGetVersion"
        ]
      },
      {
        "intent": "Enumerates Files or Directories on the Target System",
        "tag": "Discovery:T1083 - File and Directory Discovery",
        "component": "Filesystem",
        "inputs": 5,
        "matches": 1,
        "apis": [
          "FindFirstFileW"
        ]
      },
      {
        "intent": "Can Be Invoked With CommandLine Arguments From a Console/Terminal",
        "tag": "Expert Input:IBO.001 - Accepts CommandLine Arguments",
        "component": "Processes",
        "inputs": 3,
        "matches": 1,
        "apis": [
          "CommandLineToArgvW"
        ]
      },
      {
        "intent": "Can Coordinate Scheduled Jobs/Tasks",
        "tag": "Expert Input:IBO.0023 - Windows OS Object Syncronization",
        "component": "ScheduledTasks",
        "inputs": 6,
        "matches": 2,
        "apis": [
          "CreateTimerQueueTimer",
          "DeleteTimerQueueTimer"
        ]
      },
      {
        "intent": "Can Execute or Spawn New Processes On The Target System As Another User Identity",
        "tag": "Expert Input:IBO.003 - Spawn New Process As Different User",
        "component": "Processes",
        "inputs": 2,
        "matches": 1,
        "apis": [
          "CreateProcessAsUserW"
        ]
      },
      {
        "intent": "Queries And Discovers Windows Registry Configuration Settings",
        "tag": "Discovery:T1012 - Query Registry",
        "component": "Registry",
        "inputs": 11,
        "matches": 2,
        "apis": [
          "RegQueryInfoKeyW",
          "RegQueryValueExW"
        ]
      },
      {
        "intent": "Creates Token To Impersonate",
        "tag": "Privilege Escalation:T1134.003 - Make and Impersonate Token",
        "component": "Privileges",
        "inputs": 2,
        "matches": 1,
        "apis": [
          "SetTokenInformation"
        ]
      },
      {
        "intent": "Can Execute or Spawn New Processes On The Target System",
        "tag": "Expert Input:IBO.002 - Spawn New Process",
        "component": "Processes",
        "inputs": 7,
        "matches": 3,
        "apis": [
          "CreateProcessW",
          "ShellExecuteExW",
          "ShellExecuteW"
        ]
      }
    ]
  }
}