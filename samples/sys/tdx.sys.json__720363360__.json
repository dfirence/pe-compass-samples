{
  "pe_name": "tdx.sys",
  "pe_type": 523,
  "pe_size": 117584,
  "pe_subsystem": 1,
  "pe_subsystem_caption": "Device drivers and native Windows processes",
  "pe_path": "c:\\Windows\\System32\\drivers\\tdx.sys",
  "pe_timedate_stamp": 1609542534,
  "pe_timedate_human": "2021-01-01T23:08:54.000Z",
  "ImageDLLImports": [
    {
      "name": "ntoskrnl.dll",
      "imports": 74,
      "functions": [
        "ExAllocatePoolWithTag",
        "ExAllocatePoolWithTagPriority",
        "ExCreateCallback",
        "ExFreePoolWithTag",
        "ExNotifyCallback",
        "IoAcquireCancelSpinLock",
        "IoAllocateMdl",
        "IoAllocateWorkItem",
        "IoCreateDevice",
        "IoCreateSymbolicLink",
        "IoDeleteDevice",
        "IoDeleteSymbolicLink",
        "IoFileObjectType",
        "IoFreeMdl",
        "IoFreeWorkItem",
        "IoGetCurrentProcess",
        "IoGetFileObjectGenericMapping",
        "IoGetIrpExtraCreateParameter",
        "IoGetTopLevelIrp",
        "IoInitializeWorkItem",
        "IoIs32bitProcess",
        "IoQueueWorkItem",
        "IoQueueWorkItemEx",
        "IoReleaseCancelSpinLock",
        "IoSizeofWorkItem",
        "IoUninitializeWorkItem",
        "IoWMIRegistrationControl",
        "IofCompleteRequest",
        "KeAcquireInStackQueuedSpinLock",
        "KeAcquireInStackQueuedSpinLockAtDpcLevel",
        "KeAcquireSpinLockAtDpcLevel",
        "KeAcquireSpinLockRaiseToDpc",
        "KeCancelTimer",
        "KeDelayExecutionThread",
        "KeFlushQueuedDpcs",
        "KeGetCurrentProcessorNumberEx",
        "KeInitializeDpc",
        "KeInitializeEvent",
        "KeInitializeMutex",
        "KeInitializeSemaphore",
        "KeInitializeSpinLock",
        "KeInitializeTimer",
        "KeLowerIrql",
        "KeQueryMaximumProcessorCountEx",
        "KeReleaseInStackQueuedSpinLock",
        "KeReleaseInStackQueuedSpinLockFromDpcLevel",
        "KeReleaseMutex",
        "KeReleaseSemaphore",
        "KeReleaseSpinLock",
        "KeReleaseSpinLockFromDpcLevel",
        "KeSetEvent",
        "KeSetTimer",
        "KeWaitForSingleObject",
        "MmGetSystemRoutineAddress",
        "MmMapLockedPagesSpecifyCache",
        "MmProbeAndLockPages",
        "MmUnlockPages",
        "ObDereferenceSecurityDescriptor",
        "ObLogSecurityDescriptor",
        "ObReferenceObjectByHandle",
        "ObfDereferenceObject",
        "PsGetCurrentProcess",
        "RtlCompareMemory",
        "RtlCopyUnicodeString",
        "RtlInitUnicodeString",
        "RtlUnicodeStringToInteger",
        "SeAssignSecurity",
        "SeLockSubjectContext",
        "SeUnlockSubjectContext",
        "ZwClose",
        "ZwOpenKey",
        "ZwQueryValueKey",
        "__C_specific_handler",
        "_vsnwprintf"
      ]
    },
    {
      "name": "netio.dll",
      "imports": 19,
      "functions": [
        "NmrClientAttachProvider",
        "NmrClientDetachProviderComplete",
        "NmrDeregisterClient",
        "NmrDeregisterProvider",
        "NmrProviderDetachClientComplete",
        "NmrRegisterClient",
        "NmrRegisterProvider",
        "NmrWaitForClientDeregisterComplete",
        "NmrWaitForProviderDeregisterComplete",
        "NsiAllocateAndGetTable",
        "NsiDeregisterChangeNotification",
        "NsiFreeTable",
        "NsiGetAllParameters",
        "NsiGetParameter",
        "NsiRegisterChangeNotification",
        "NsiSetAllParameters",
        "RtlCopyBufferToMdl",
        "RtlCopyMdlToBuffer",
        "RtlCopyMdlToMdl"
      ]
    },
    {
      "name": "tdi.dll",
      "imports": 9,
      "functions": [
        "TdiDeregisterDeviceObject",
        "TdiDeregisterNetAddress",
        "TdiDeregisterProvider",
        "TdiMapUserRequest",
        "TdiPnPPowerRequest",
        "TdiProviderReady",
        "TdiRegisterDeviceObject",
        "TdiRegisterNetAddress",
        "TdiRegisterProvider"
      ]
    },
    {
      "name": "ndis.dll",
      "imports": 1,
      "functions": [
        "NdisIfGetInterfaceIndexFromNetLuid"
      ]
    }
  ],
  "ImageDLLExports": {
    "exports": 0,
    "functions": []
  },
  "ImageHashSignatures": {
    "sha2": "bb34dc5199de15f7d57ae52df427c39d2fd34fafa8136f783f2f089cdeba0130"
  }
}