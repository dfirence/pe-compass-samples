{
  "pe_name": "vmci.sys",
  "pe_type": 523,
  "pe_size": 116544,
  "pe_subsystem": 1,
  "pe_subsystem_caption": "Device drivers and native Windows processes",
  "pe_path": "c:\\Windows\\System32\\DriverStore\\FileRepository\\vmci.inf_amd64_5e38a278d114b813\\vmci.sys",
  "pe_timedate_stamp": 1563253414,
  "pe_timedate_human": "2019-07-16T05:03:34.000Z",
  "ImageDLLImports": [
    {
      "name": "ntoskrnl.dll",
      "imports": 115,
      "functions": [
        "DbgPrintEx",
        "ExAcquireFastMutex",
        "ExAllocatePoolWithTag",
        "ExCreateCallback",
        "ExEventObjectType",
        "ExFreePool",
        "ExFreePoolWithTag",
        "ExNotifyCallback",
        "ExReleaseFastMutex",
        "InitSafeBootMode",
        "IoAcquireRemoveLockEx",
        "IoAllocateErrorLogEntry",
        "IoAllocateMdl",
        "IoAllocateWorkItem",
        "IoAttachDeviceToDeviceStack",
        "IoConnectInterrupt",
        "IoCreateDevice",
        "IoCreateSymbolicLink",
        "IoDeleteDevice",
        "IoDeleteSymbolicLink",
        "IoDetachDevice",
        "IoDeviceObjectType",
        "IoDisconnectInterrupt",
        "IoFreeMdl",
        "IoFreeWorkItem",
        "IoGetCurrentProcess",
        "IoGetDeviceProperty",
        "IoGetFileObjectGenericMapping",
        "IoInitializeRemoveLockEx",
        "IoIsWdmVersionAvailable",
        "IoQueueWorkItem",
        "IoReleaseRemoveLockAndWaitEx",
        "IoReleaseRemoveLockEx",
        "IoWriteErrorLogEntry",
        "IofCallDriver",
        "IofCompleteRequest",
        "KeAcquireSpinLockAtDpcLevel",
        "KeAcquireSpinLockRaiseToDpc",
        "KeBugCheckEx",
        "KeClearEvent",
        "KeInitializeDpc",
        "KeInitializeEvent",
        "KeInitializeSemaphore",
        "KeInitializeSpinLock",
        "KeInsertQueueDpc",
        "KeQueryActiveProcessors",
        "KeReadStateSemaphore",
        "KeReleaseSemaphore",
        "KeReleaseSpinLock",
        "KeReleaseSpinLockFromDpcLevel",
        "KeSetEvent",
        "KeWaitForMultipleObjects",
        "KeWaitForSingleObject",
        "MmBuildMdlForNonPagedPool",
        "MmGetSystemRoutineAddress",
        "MmMapLockedPagesSpecifyCache",
        "MmProbeAndLockPages",
        "MmUnlockPages",
        "MmUnmapLockedPages",
        "ObOpenObjectByPointer",
        "ObReferenceObjectByHandle",
        "ObfDereferenceObject",
        "PoCallDriver",
        "PoRequestPowerIrp",
        "PoSetPowerState",
        "PoStartNextPowerIrp",
        "ProbeForRead",
        "ProbeForWrite",
        "PsCreateSystemThread",
        "PsTerminateSystemThread",
        "RtlAbsoluteToSelfRelativeSD",
        "RtlAddAccessAllowedAce",
        "RtlCompareUnicodeString",
        "RtlCopySid",
        "RtlCreateAcl",
        "RtlCreateSecurityDescriptor",
        "RtlEqualSid",
        "RtlFreeUnicodeString",
        "RtlGetDaclSecurityDescriptor",
        "RtlGetGroupSecurityDescriptor",
        "RtlGetOwnerSecurityDescriptor",
        "RtlGetSaclSecurityDescriptor",
        "RtlInitUnicodeString",
        "RtlInitializeSid",
        "RtlLengthRequiredSid",
        "RtlLengthSecurityDescriptor",
        "RtlLengthSid",
        "RtlQueryRegistryValues",
        "RtlSetDaclSecurityDescriptor",
        "RtlSetGroupSecurityDescriptor",
        "RtlSetOwnerSecurityDescriptor",
        "RtlSubAuthoritySid",
        "RtlValidSid",
        "SeAccessCheck",
        "SeCaptureSecurityDescriptor",
        "SeCaptureSubjectContext",
        "SeExports",
        "SeQueryInformationToken",
        "SeReleaseSubjectContext",
        "SeValidSecurityDescriptor",
        "ZwClose",
        "ZwCreateKey",
        "ZwOpenKey",
        "ZwQueryValueKey",
        "ZwSetSecurityObject",
        "ZwSetValueKey",
        "ZwWaitForSingleObject",
        "__C_specific_handler",
        "_snwprintf",
        "_vsnprintf",
        "_vsnprintf_s",
        "_wcsnicmp",
        "strchr",
        "strncmp",
        "wcschr"
      ]
    }
  ],
  "ImageDLLExports": {
    "exports": 2,
    "functions": [
      "DllInitialize",
      "DllUnload"
    ]
  },
  "ImageHashSignatures": {
    "sha2": "9fc7f440658f628fcd08f31e874b5ef8567b8cef03282109fe6caf2be56a239b"
  }
}