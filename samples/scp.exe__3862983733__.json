{
  "pe_name": "scp.exe",
  "pe_type": 523,
  "pe_size": 307712,
  "pe_subsystem": 3,
  "pe_subsystem_caption": "The Windows Character (Console UI) Subsystem",
  "pe_path": "pe-samples/lolbas/scp.exe",
  "pe_timedate_stamp": 1584509438,
  "pe_timedate_human": "2020-03-18T05:30:38.000Z",
  "ImageDLLImports": [
    {
      "name": "libcrypto.dll",
      "imports": 4,
      "functions": [
        "ERR_get_error",
        "RAND_bytes",
        "RAND_status",
        "SSLeay"
      ]
    },
    {
      "name": "kernel32.dll",
      "imports": 139,
      "functions": [
        "Beep",
        "CancelIo",
        "CancelIoEx",
        "CancelSynchronousIo",
        "CancelWaitableTimer",
        "CloseHandle",
        "CompareStringW",
        "CreateDirectoryW",
        "CreateEventA",
        "CreateFileA",
        "CreateFileW",
        "CreateNamedPipeA",
        "CreateProcessW",
        "CreateThread",
        "CreateWaitableTimerA",
        "CreateWaitableTimerW",
        "DeleteCriticalSection",
        "DeviceIoControl",
        "DuplicateHandle",
        "EnterCriticalSection",
        "ExitProcess",
        "ExitThread",
        "ExpandEnvironmentStringsW",
        "FileTimeToSystemTime",
        "FillConsoleOutputAttribute",
        "FillConsoleOutputCharacterA",
        "FindClose",
        "FindFirstFileExW",
        "FindNextFileW",
        "FlushFileBuffers",
        "FreeEnvironmentStringsW",
        "FreeLibrary",
        "FreeLibraryAndExitThread",
        "GetACP",
        "GetCPInfo",
        "GetCommandLineA",
        "GetCommandLineW",
        "GetComputerNameW",
        "GetConsoleCP",
        "GetConsoleCursorInfo",
        "GetConsoleMode",
        "GetConsoleScreenBufferInfo",
        "GetCurrentDirectoryW",
        "GetCurrentProcess",
        "GetCurrentProcessId",
        "GetCurrentThreadId",
        "GetDiskFreeSpaceExW",
        "GetDriveTypeW",
        "GetEnvironmentStringsW",
        "GetExitCodeProcess",
        "GetFileAttributesExW",
        "GetFileInformationByHandle",
        "GetFileSizeEx",
        "GetFileType",
        "GetFinalPathNameByHandleW",
        "GetFullPathNameW",
        "GetLastError",
        "GetLogicalDriveStringsW",
        "GetModuleFileNameW",
        "GetModuleHandleExW",
        "GetModuleHandleW",
        "GetOEMCP",
        "GetProcAddress",
        "GetProcessHeap",
        "GetStartupInfoW",
        "GetStdHandle",
        "GetStringTypeW",
        "GetSystemDirectoryW",
        "GetSystemTimeAsFileTime",
        "GetTickCount64",
        "GetTimeZoneInformation",
        "GetWindowsDirectoryW",
        "HeapAlloc",
        "HeapFree",
        "HeapReAlloc",
        "HeapSize",
        "InitializeCriticalSectionAndSpinCount",
        "InitializeSListHead",
        "IsDebuggerPresent",
        "IsProcessorFeaturePresent",
        "IsValidCodePage",
        "LCMapStringW",
        "LeaveCriticalSection",
        "LoadLibraryExW",
        "LocalFree",
        "MultiByteToWideChar",
        "OpenThread",
        "PeekNamedPipe",
        "QueryPerformanceCounter",
        "QueueUserAPC",
        "RaiseException",
        "ReadConsoleInputW",
        "ReadConsoleOutputA",
        "ReadConsoleW",
        "ReadFile",
        "ReadFileEx",
        "ResetEvent",
        "RtlCaptureContext",
        "RtlLookupFunctionEntry",
        "RtlUnwindEx",
        "RtlVirtualUnwind",
        "ScrollConsoleScreenBufferA",
        "SetConsoleCtrlHandler",
        "SetConsoleCursorInfo",
        "SetConsoleCursorPosition",
        "SetConsoleMode",
        "SetConsoleOutputCP",
        "SetConsoleScreenBufferSize",
        "SetConsoleTextAttribute",
        "SetConsoleWindowInfo",
        "SetEndOfFile",
        "SetEnvironmentVariableW",
        "SetEvent",
        "SetFileAttributesW",
        "SetFilePointerEx",
        "SetFileTime",
        "SetHandleInformation",
        "SetLastError",
        "SetStdHandle",
        "SetUnhandledExceptionFilter",
        "SetWaitableTimer",
        "SleepEx",
        "SystemTimeToTzSpecificLocalTime",
        "TerminateProcess",
        "TlsAlloc",
        "TlsFree",
        "TlsGetValue",
        "TlsSetValue",
        "UnhandledExceptionFilter",
        "VerSetConditionMask",
        "VerifyVersionInfoW",
        "WaitForMultipleObjectsEx",
        "WaitForSingleObject",
        "WaitForSingleObjectEx",
        "WideCharToMultiByte",
        "WriteConsoleOutputA",
        "WriteConsoleW",
        "WriteFile",
        "WriteFileEx"
      ]
    },
    {
      "name": "ws2_32.dll",
      "imports": 5,
      "functions": [
        "WSADuplicateSocketW",
        "WSAGetOverlappedResult",
        "WSARecv",
        "WSASend",
        "WSASocketW"
      ]
    },
    {
      "name": "advapi32.dll",
      "imports": 17,
      "functions": [
        "ConvertSidToStringSidW",
        "ConvertStringSecurityDescriptorToSecurityDescriptorW",
        "CopySid",
        "GetAce",
        "GetLengthSid",
        "GetNamedSecurityInfoW",
        "GetTokenInformation",
        "IsValidAcl",
        "IsValidSecurityDescriptor",
        "IsValidSid",
        "IsWellKnownSid",
        "LookupAccountNameW",
        "LookupAccountSidW",
        "OpenProcessToken",
        "RegCloseKey",
        "RegOpenKeyExW",
        "RegQueryValueExW"
      ]
    },
    {
      "name": "crypt32.dll",
      "imports": 2,
      "functions": [
        "CryptBinaryToStringA",
        "CryptStringToBinaryA"
      ]
    },
    {
      "name": "shlwapi.dll",
      "imports": 1,
      "functions": [
        "PathMatchSpecW"
      ]
    },
    {
      "name": "user32.dll",
      "imports": 3,
      "functions": [
        "FindWindowA",
        "GetWindowPlacement",
        "ShowWindow"
      ]
    }
  ],
  "ImageDLLExports": {
    "exports": 0,
    "functions": []
  },
  "ImageHashSignatures": {
    "sha2": "9f109ced3d575702764073be91f83e46501db38659c6192e76a30e219f7ca9ac",
    "ssdeep": "6144:TT7yixYLGW8X5aJhe6+cit56maoTlfJF9:jfoGW8X5aDe6+BumLTb"
  },
  "scan": {
    "intentions": 8,
    "uniq_apis_matched": 10,
    "results": [
      {
        "intent": "Implement Features To Communicate via NamedPipes",
        "tag": "Expert Input:IBO.0004 - Implement Named Pipes",
        "component": "Processes",
        "inputs": 12,
        "matches": 2,
        "apis": [
          "CreateNamedPipeA",
          "PeekNamedPipe"
        ]
      },
      {
        "intent": "Discover Time Configuration Settings On The Target System",
        "tag": "Discovery:T1124 - System Time Discovery",
        "component": "---",
        "inputs": 5,
        "matches": 1,
        "apis": [
          "GetTimeZoneInformation"
        ]
      },
      {
        "intent": "Query And Discover Windows Registry Configuration Settings",
        "tag": "Discovery:T1012 - Query Registry",
        "component": "Registry",
        "inputs": 11,
        "matches": 1,
        "apis": [
          "RegQueryValueExW"
        ]
      },
      {
        "intent": "Enumerate Files or Directories on the Target System",
        "tag": "Discovery:T1083 - File and Directory Discovery",
        "component": "Filesystem",
        "inputs": 5,
        "matches": 1,
        "apis": [
          "FindFirstFileExW"
        ]
      },
      {
        "intent": "Implements Features To Execute or Spawn New Processes On The Target System",
        "tag": "Expert Input:IBO.0002 - Spawn New Process",
        "component": "Processes",
        "inputs": 7,
        "matches": 1,
        "apis": [
          "CreateProcessw"
        ]
      },
      {
        "intent": "Manipulate Windows Tokens",
        "tag": "Defense Evasion:T1134 - Access Token Manipulation",
        "component": "Privileges",
        "inputs": 10,
        "matches": 1,
        "apis": [
          "OpenProcessToken"
        ]
      },
      {
        "intent": "Implements Features To Create/Manipulate The Windows Registry",
        "tag": "Expert Input:IBO.0008 - Create/Manipulate The Windows Registry",
        "component": "Registry",
        "inputs": 33,
        "matches": 1,
        "apis": [
          "RegOpenKeyExW"
        ]
      },
      {
        "intent": "Implements Features To Transmit/Receive Data Over The Network",
        "tag": "Expert Input:IBO.00011 - Network Socket Send/Receive",
        "component": "Networking",
        "inputs": 16,
        "matches": 2,
        "apis": [
          "WSARecv",
          "WSASend"
        ]
      }
    ]
  },
  "paths": [
    "pe-samples/lolbas/scp.exe"
  ]
}