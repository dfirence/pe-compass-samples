{
  "pe_name": "ssh-agent.exe",
  "pe_type": 523,
  "pe_size": 382976,
  "pe_subsystem": 3,
  "pe_subsystem_caption": "The Windows character (Cosole UI) subsystem",
  "pe_path": "c:\\Windows\\System32\\OpenSSH\\ssh-agent.exe",
  "pe_timedate_stamp": 1584509449,
  "pe_timedate_human": "2020-03-18T05:30:49.000Z",
  "ImageDLLImports": [
    {
      "name": "libcrypto.dll",
      "imports": 73,
      "functions": [
        "AES_encrypt",
        "AES_set_encrypt_key",
        "BN_CTX_free",
        "BN_CTX_get",
        "BN_CTX_new",
        "BN_CTX_start",
        "BN_bin2bn",
        "BN_bn2bin",
        "BN_clear_free",
        "BN_cmp",
        "BN_div",
        "BN_dup",
        "BN_free",
        "BN_new",
        "BN_num_bits",
        "BN_sub",
        "BN_value_one",
        "DSA_SIG_free",
        "DSA_SIG_new",
        "DSA_do_sign",
        "DSA_do_verify",
        "DSA_free",
        "DSA_new",
        "ECDSA_SIG_free",
        "ECDSA_SIG_new",
        "ECDSA_do_sign",
        "ECDSA_do_verify",
        "EC_GROUP_get_order",
        "EC_GROUP_method_of",
        "EC_KEY_free",
        "EC_KEY_get0_group",
        "EC_KEY_get0_private_key",
        "EC_KEY_get0_public_key",
        "EC_KEY_new_by_curve_name",
        "EC_KEY_set_private_key",
        "EC_KEY_set_public_key",
        "EC_METHOD_get_field_type",
        "EC_POINT_free",
        "EC_POINT_get_affine_coordinates_GFp",
        "EC_POINT_is_at_infinity",
        "EC_POINT_mul",
        "EC_POINT_new",
        "EC_POINT_oct2point",
        "EC_POINT_point2oct",
        "ERR_get_error",
        "EVP_CIPHER_CTX_ctrl",
        "EVP_CIPHER_CTX_free",
        "EVP_CIPHER_CTX_get_app_data",
        "EVP_CIPHER_CTX_key_length",
        "EVP_CIPHER_CTX_new",
        "EVP_CIPHER_CTX_set_app_data",
        "EVP_CIPHER_CTX_set_key_length",
        "EVP_Cipher",
        "EVP_CipherInit",
        "EVP_Digest",
        "EVP_aes_128_cbc",
        "EVP_aes_128_gcm",
        "EVP_aes_192_cbc",
        "EVP_aes_256_cbc",
        "EVP_aes_256_gcm",
        "EVP_des_ede3_cbc",
        "EVP_md5",
        "EVP_sha1",
        "EVP_sha256",
        "EVP_sha384",
        "EVP_sha512",
        "RAND_bytes",
        "RSA_blinding_on",
        "RSA_free",
        "RSA_new",
        "RSA_public_decrypt",
        "RSA_sign",
        "RSA_size"
      ]
    },
    {
      "name": "kernel32.dll",
      "imports": 114,
      "functions": [
        "Beep",
        "CloseHandle",
        "CompareStringW",
        "ConnectNamedPipe",
        "CreateEventA",
        "CreateFileA",
        "CreateFileW",
        "CreateIoCompletionPort",
        "CreateNamedPipeW",
        "CreateProcessW",
        "CreateThread",
        "CreateWaitableTimerA",
        "DeleteCriticalSection",
        "EnterCriticalSection",
        "ExitProcess",
        "ExitThread",
        "FillConsoleOutputAttribute",
        "FillConsoleOutputCharacterA",
        "FindClose",
        "FindFirstFileExW",
        "FindNextFileW",
        "FlushFileBuffers",
        "FreeEnvironmentStringsW",
        "FreeLibrary",
        "FreeLibraryAndExitThread",
        "GetACP",
        "GetCPInfo",
        "GetCommandLineA",
        "GetCommandLineW",
        "GetConsoleCP",
        "GetConsoleCursorInfo",
        "GetConsoleMode",
        "GetConsoleScreenBufferInfo",
        "GetCurrentDirectoryW",
        "GetCurrentProcess",
        "GetCurrentProcessId",
        "GetCurrentThreadId",
        "GetEnvironmentStringsW",
        "GetExitCodeProcess",
        "GetFileSizeEx",
        "GetFileType",
        "GetLastError",
        "GetLocalTime",
        "GetModuleFileNameW",
        "GetModuleHandleExW",
        "GetModuleHandleW",
        "GetNamedPipeClientProcessId",
        "GetOEMCP",
        "GetOverlappedResult",
        "GetProcAddress",
        "GetProcessHeap",
        "GetQueuedCompletionStatus",
        "GetStartupInfoW",
        "GetStdHandle",
        "GetStringTypeW",
        "GetSystemTimeAsFileTime",
        "HeapAlloc",
        "HeapFree",
        "HeapReAlloc",
        "HeapSize",
        "InitializeCriticalSectionAndSpinCount",
        "InitializeSListHead",
        "IsDebuggerPresent",
        "IsProcessorFeaturePresent",
        "IsValidCodePage",
        "LCMapStringW",
        "LeaveCriticalSection",
        "LoadLibraryExW",
        "LocalFree",
        "MultiByteToWideChar",
        "OpenProcess",
        "OpenThread",
        "QueryPerformanceCounter",
        "QueueUserAPC",
        "RaiseException",
        "ReadConsoleOutputA",
        "ReadConsoleW",
        "ReadFile",
        "RtlCaptureContext",
        "RtlLookupFunctionEntry",
        "RtlUnwindEx",
        "RtlVirtualUnwind",
        "ScrollConsoleScreenBufferA",
        "SetConsoleCtrlHandler",
        "SetConsoleCursorInfo",
        "SetConsoleCursorPosition",
        "SetConsoleScreenBufferSize",
        "SetConsoleTextAttribute",
        "SetConsoleWindowInfo",
        "SetCurrentDirectoryW",
        "SetEndOfFile",
        "SetEnvironmentVariableW",
        "SetEvent",
        "SetFilePointerEx",
        "SetHandleInformation",
        "SetLastError",
        "SetStdHandle",
        "SetUnhandledExceptionFilter",
        "SleepEx",
        "TerminateProcess",
        "TlsAlloc",
        "TlsFree",
        "TlsGetValue",
        "TlsSetValue",
        "UnhandledExceptionFilter",
        "WaitForMultipleObjects",
        "WaitForMultipleObjectsEx",
        "WaitForSingleObject",
        "WaitForSingleObjectEx",
        "WideCharToMultiByte",
        "WriteConsoleOutputA",
        "WriteConsoleW",
        "WriteFile",
        "WriteFileEx"
      ]
    },
    {
      "name": "advapi32.dll",
      "imports": 29,
      "functions": [
        "CheckTokenMembership",
        "ConvertStringSecurityDescriptorToSecurityDescriptorW",
        "CreateWellKnownSid",
        "DuplicateToken",
        "EventRegister",
        "EventWrite",
        "GetTokenInformation",
        "ImpersonateLoggedOnUser",
        "IsWellKnownSid",
        "OpenProcessToken",
        "OpenSCManagerW",
        "OpenServiceW",
        "RegCloseKey",
        "RegCreateKeyExA",
        "RegCreateKeyExW",
        "RegDeleteKeyExA",
        "RegDeleteTreeA",
        "RegDeleteTreeW",
        "RegEnumKeyExW",
        "RegOpenCurrentUser",
        "RegOpenKeyExA",
        "RegOpenKeyExW",
        "RegQueryValueExW",
        "RegSetValueExW",
        "RegisterServiceCtrlHandlerW",
        "RevertToSelf",
        "SetServiceStatus",
        "StartServiceA",
        "StartServiceCtrlDispatcherW"
      ]
    },
    {
      "name": "crypt32.dll",
      "imports": 3,
      "functions": [
        "CryptProtectData",
        "CryptStringToBinaryA",
        "CryptUnprotectData"
      ]
    },
    {
      "name": "ws2_32.dll",
      "imports": 1,
      "functions": [
        "WSASend"
      ]
    },
    {
      "name": "user32.dll",
      "imports": 3,
      "functions": [
        "FindWindowA",
        "GetWindowPlacement",
        "ShowWindow"
      ]
    }
  ],
  "ImageDLLExports": {
    "exports": 0,
    "functions": []
  },
  "ImageHashSignatures": {
    "sha2": "71f4cc7595c6d5e93aaa14259df817c6c1d4bbcf285545fd980f6dbc86a30379"
  },
  "scan": {
    "intentions": 11,
    "uniq_apis_matched": 23,
    "results": [
      {
        "intent": "Query And Discover Windows Registry Configuration Settings",
        "tag": "Discovery:T1012 - Query Registry",
        "component": "Registry",
        "inputs": 11,
        "matches": 1,
        "apis": [
          "RegQueryValueExW"
        ]
      },
      {
        "intent": "Implements Features To Execute or Spawn New Processes On The Target System",
        "tag": "Expert Input:IBO.0002 - Spawn New Process",
        "component": "Processes",
        "inputs": 7,
        "matches": 1,
        "apis": [
          "CreateProcessw"
        ]
      },
      {
        "intent": "Implements Features To Enumerate/Discover System Services And Their Configuration Data",
        "tag": "Expert Input:IBO.0006 - Enumerate System Services",
        "component": "Services",
        "inputs": 28,
        "matches": 2,
        "apis": [
          "OpenSCManagerW",
          "OpenServiceW"
        ]
      },
      {
        "intent": "Implements Features To Transmit/Receive Data Over The Network",
        "tag": "Expert Input:IBO.00011 - Network Socket Send/Receive",
        "component": "Networking",
        "inputs": 16,
        "matches": 1,
        "apis": [
          "WSASend"
        ]
      },
      {
        "intent": "Stealing Tokens To Impersonate Windows Identities",
        "tag": "Privilege Escalation:T1134.001 - Token Impersonation/Theft",
        "component": "Privileges",
        "inputs": 4,
        "matches": 2,
        "apis": [
          "DuplicateToken",
          "ImpersonateLoggedOnUser"
        ]
      },
      {
        "intent": "Implement Features To Communicate via NamedPipes",
        "tag": "Expert Input:IBO.0004 - Implement Named Pipes",
        "component": "Processes",
        "inputs": 12,
        "matches": 1,
        "apis": [
          "ConnectNamedPipe"
        ]
      },
      {
        "intent": "Implements Features To Enumerate The Windows Registry",
        "tag": "Expert Input:IBO.0009 - Enumerate The Windows Registry",
        "component": "Registry",
        "inputs": 6,
        "matches": 1,
        "apis": [
          "RegEnumKeyExW"
        ]
      },
      {
        "intent": "Manipulate Windows Tokens",
        "tag": "Defense Evasion:T1134 - Access Token Manipulation",
        "component": "Privileges",
        "inputs": 10,
        "matches": 2,
        "apis": [
          "CheckTokenMembership",
          "OpenProcessToken"
        ]
      },
      {
        "intent": "Enumerate Files or Directories on the Target System",
        "tag": "Discovery:T1083 - File and Directory Discovery",
        "component": "Filesystem",
        "inputs": 5,
        "matches": 1,
        "apis": [
          "FindFirstFileExW"
        ]
      },
      {
        "intent": "Implements Features To Create/Manipulate The Windows Registry",
        "tag": "Expert Input:IBO.0008 - Create/Manipulate The Windows Registry",
        "component": "Registry",
        "inputs": 33,
        "matches": 7,
        "apis": [
          "RegCreateKeyExA",
          "RegCreateKeyExW",
          "RegDeleteKeyExA",
          "RegOpenCurrentUser",
          "RegOpenKeyExA",
          "RegOpenKeyExW",
          "RegSetValueExW"
        ]
      },
      {
        "intent": "Implements Features To Create/Manipulate System Services",
        "tag": "Expert Input:IBO.0007 - Create/Manipulate System Services",
        "component": "Services",
        "inputs": 19,
        "matches": 4,
        "apis": [
          "RegisterServiceCtrlHandlerW",
          "SetServiceStatus",
          "StartServiceA",
          "StartServiceCtrlDispatcherW"
        ]
      }
    ]
  }
}