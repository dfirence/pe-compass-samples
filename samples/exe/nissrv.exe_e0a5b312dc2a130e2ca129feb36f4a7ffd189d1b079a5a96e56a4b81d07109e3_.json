{
  "name": "nissrv.exe",
  "path": "\\\\?\\C:\\Windows\\WinSxS\\amd64_windows-defender-nis-service_31bf3856ad364e35_10.0.19041.1_none_d3e3ad84b24cfdfe\\NisSrv.exe",
  "size": 3004048,
  "is_64": true,
  "is_lib": false,
  "is_dotnet": false,
  "has_imports": true,
  "has_exports": false,
  "subsystem": 3,
  "subsystem_caption": "The Windows Character (Console UI) Subsystem",
  "libs": [
    "advapi32.dll",
    "api-ms-win-core-libraryloader-l1-2-0.dll",
    "api-ms-win-core-path-l1-1-0.dll",
    "api-ms-win-core-realtime-l1-1-1.dll",
    "api-ms-win-core-winrt-l1-1-0.dll",
    "api-ms-win-crt-convert-l1-1-0.dll",
    "api-ms-win-crt-filesystem-l1-1-0.dll",
    "api-ms-win-crt-heap-l1-1-0.dll",
    "api-ms-win-crt-locale-l1-1-0.dll",
    "api-ms-win-crt-math-l1-1-0.dll",
    "api-ms-win-crt-multibyte-l1-1-0.dll",
    "api-ms-win-crt-runtime-l1-1-0.dll",
    "api-ms-win-crt-stdio-l1-1-0.dll",
    "api-ms-win-crt-string-l1-1-0.dll",
    "api-ms-win-crt-utility-l1-1-0.dll",
    "bcrypt.dll",
    "crypt32.dll",
    "kernel32.dll",
    "mpclient.dll",
    "netapi32.dll",
    "normaliz.dll",
    "ntdll.dll",
    "ole32.dll",
    "oleaut32.dll",
    "shell32.dll",
    "shlwapi.dll",
    "slc.dll",
    "user32.dll",
    "version.dll",
    "winhttp.dll",
    "ws2_32.dll"
  ],
  "imports": [
    {
      "lib": "mpclient.dll",
      "count": 11,
      "functions": [
        "MpClientUtilExportFunctions",
        "MpConfigClose",
        "MpConfigGetValueAlloc",
        "MpConfigInitialize",
        "MpConfigOpen",
        "MpConfigUninitialize",
        "MpFreeMemory",
        "MpHandleClose",
        "MpManagerOpen",
        "MpNotificationRegister",
        "MpUtilsExportFunctions"
      ]
    },
    {
      "lib": "user32.dll",
      "count": 2,
      "functions": [
        "CharNextW",
        "UnregisterClassA"
      ]
    },
    {
      "lib": "api-ms-win-crt-math-l1-1-0.dll",
      "count": 6,
      "functions": [
        "ceil",
        "frexp",
        "ldexp",
        "log2",
        "pow",
        "powf"
      ]
    },
    {
      "lib": "netapi32.dll",
      "count": 2,
      "functions": [
        "NetApiBufferFree",
        "NetGetJoinInformation"
      ]
    },
    {
      "lib": "api-ms-win-core-realtime-l1-1-1.dll",
      "count": 1,
      "functions": [
        "QueryInterruptTimePrecise"
      ]
    },
    {
      "lib": "ws2_32.dll",
      "count": 3,
      "functions": [
        "ORDINAL 15",
        "ORDINAL 8",
        "inet_ntop"
      ]
    },
    {
      "lib": "crypt32.dll",
      "count": 2,
      "functions": [
        "CryptBinaryToStringW",
        "CryptUnprotectMemory"
      ]
    },
    {
      "lib": "api-ms-win-crt-utility-l1-1-0.dll",
      "count": 1,
      "functions": [
        "rand_s"
      ]
    },
    {
      "lib": "api-ms-win-crt-filesystem-l1-1-0.dll",
      "count": 5,
      "functions": [
        "_lock_file",
        "_unlock_file",
        "_wremove",
        "_wrename",
        "_wrmdir"
      ]
    },
    {
      "lib": "ole32.dll",
      "count": 10,
      "functions": [
        "CoCreateGuid",
        "CoCreateInstance",
        "CoImpersonateClient",
        "CoInitializeEx",
        "CoRevertToSelf",
        "CoTaskMemAlloc",
        "CoTaskMemFree",
        "CoTaskMemRealloc",
        "CoUninitialize",
        "StringFromGUID2"
      ]
    },
    {
      "lib": "winhttp.dll",
      "count": 17,
      "functions": [
        "WinHttpAddRequestHeaders",
        "WinHttpCloseHandle",
        "WinHttpConnect",
        "WinHttpGetProxyForUrl",
        "WinHttpOpen",
        "WinHttpOpenRequest",
        "WinHttpQueryAuthSchemes",
        "WinHttpQueryDataAvailable",
        "WinHttpQueryHeaders",
        "WinHttpReadData",
        "WinHttpReceiveResponse",
        "WinHttpSendRequest",
        "WinHttpSetCredentials",
        "WinHttpSetOption",
        "WinHttpSetStatusCallback",
        "WinHttpSetTimeouts",
        "WinHttpWriteData"
      ]
    },
    {
      "lib": "normaliz.dll",
      "count": 1,
      "functions": [
        "IdnToAscii"
      ]
    },
    {
      "lib": "api-ms-win-core-winrt-l1-1-0.dll",
      "count": 1,
      "functions": [
        "RoInitialize"
      ]
    },
    {
      "lib": "api-ms-win-crt-multibyte-l1-1-0.dll",
      "count": 1,
      "functions": [
        "_ismbblead"
      ]
    },
    {
      "lib": "api-ms-win-crt-runtime-l1-1-0.dll",
      "count": 22,
      "functions": [
        "__p___argc",
        "__p___wargv",
        "_c_exit",
        "_cexit",
        "_configure_wide_argv",
        "_crt_atexit",
        "_errno",
        "_exit",
        "_get_initial_wide_environment",
        "_initialize_onexit_table",
        "_initialize_wide_environment",
        "_initterm",
        "_initterm_e",
        "_invalid_parameter_noinfo",
        "_invalid_parameter_noinfo_noreturn",
        "_register_onexit_function",
        "_register_thread_local_exe_atexit_callback",
        "_seh_filter_exe",
        "_set_app_type",
        "abort",
        "exit",
        "terminate"
      ]
    },
    {
      "lib": "slc.dll",
      "count": 1,
      "functions": [
        "SLGetWindowsInformationDWORD"
      ]
    },
    {
      "lib": "api-ms-win-crt-heap-l1-1-0.dll",
      "count": 10,
      "functions": [
        "_callnewh",
        "_calloc_base",
        "_free_base",
        "_malloc_base",
        "_recalloc",
        "_set_new_mode",
        "calloc",
        "free",
        "malloc",
        "realloc"
      ]
    },
    {
      "lib": "advapi32.dll",
      "count": 33,
      "functions": [
        "CloseServiceHandle",
        "ControlService",
        "EventRegister",
        "EventSetInformation",
        "EventUnregister",
        "EventWriteTransfer",
        "GetTraceEnableFlags",
        "GetTraceEnableLevel",
        "GetTraceLoggerHandle",
        "ImpersonateLoggedOnUser",
        "OpenProcessToken",
        "OpenSCManagerW",
        "OpenServiceW",
        "OpenThreadToken",
        "RegCloseKey",
        "RegCreateKeyExW",
        "RegDeleteValueW",
        "RegEnumKeyExW",
        "RegGetValueW",
        "RegOpenCurrentUser",
        "RegOpenKeyExW",
        "RegQueryInfoKeyW",
        "RegQueryValueExW",
        "RegSetKeyValueW",
        "RegSetValueExW",
        "RegisterServiceCtrlHandlerExW",
        "RegisterTraceGuidsW",
        "RevertToSelf",
        "SetServiceStatus",
        "StartServiceCtrlDispatcherW",
        "StartServiceW",
        "TraceMessage",
        "UnregisterTraceGuids"
      ]
    },
    {
      "lib": "api-ms-win-crt-stdio-l1-1-0.dll",
      "count": 25,
      "functions": [
        "__p__commode",
        "__stdio_common_vsnprintf_s",
        "__stdio_common_vsnwprintf_s",
        "__stdio_common_vsprintf",
        "__stdio_common_vsprintf_s",
        "__stdio_common_vswprintf",
        "__stdio_common_vswprintf_s",
        "_fseeki64",
        "_fsopen",
        "_get_stream_buffer_pointers",
        "_set_fmode",
        "_wfopen",
        "_wfsopen",
        "fclose",
        "feof",
        "fflush",
        "fgetc",
        "fgetpos",
        "fgetws",
        "fputc",
        "fseek",
        "fsetpos",
        "fwrite",
        "setvbuf",
        "ungetc"
      ]
    },
    {
      "lib": "shlwapi.dll",
      "count": 1,
      "functions": [
        "PathFindFileNameW"
      ]
    },
    {
      "lib": "api-ms-win-core-libraryloader-l1-2-0.dll",
      "count": 1,
      "functions": [
        "GetModuleHandleA"
      ]
    },
    {
      "lib": "version.dll",
      "count": 3,
      "functions": [
        "GetFileVersionInfoSizeW",
        "GetFileVersionInfoW",
        "VerQueryValueW"
      ]
    },
    {
      "lib": "api-ms-win-crt-locale-l1-1-0.dll",
      "count": 12,
      "functions": [
        "___lc_codepage_func",
        "___lc_collate_cp_func",
        "___lc_locale_name_func",
        "___mb_cur_max_func",
        "__pctype_func",
        "_configthreadlocale",
        "_create_locale",
        "_free_locale",
        "_lock_locales",
        "_unlock_locales",
        "localeconv",
        "setlocale"
      ]
    },
    {
      "lib": "api-ms-win-crt-convert-l1-1-0.dll",
      "count": 15,
      "functions": [
        "_i64toa_s",
        "_i64tow_s",
        "_itow_s",
        "_ui64toa_s",
        "_ui64tow_s",
        "_wcstod_l",
        "_wtoi",
        "strtod",
        "strtof",
        "strtol",
        "strtoll",
        "wcstod",
        "wcstol",
        "wcstoll",
        "wcstoull"
      ]
    },
    {
      "lib": "api-ms-win-core-path-l1-1-0.dll",
      "count": 2,
      "functions": [
        "PathAllocCanonicalize",
        "PathAllocCombine"
      ]
    },
    {
      "lib": "shell32.dll",
      "count": 2,
      "functions": [
        "ORDINAL 171",
        "SHGetKnownFolderPath"
      ]
    },
    {
      "lib": "ntdll.dll",
      "count": 1,
      "functions": [
        "RtlGetVersion"
      ]
    },
    {
      "lib": "api-ms-win-crt-string-l1-1-0.dll",
      "count": 29,
      "functions": [
        "__strncnt",
        "_isctype_l",
        "_stricmp",
        "_wcsdup",
        "_wcsicmp",
        "isalpha",
        "isdigit",
        "islower",
        "isspace",
        "isupper",
        "iswascii",
        "iswdigit",
        "iswlower",
        "iswspace",
        "iswupper",
        "iswxdigit",
        "memset",
        "strcpy_s",
        "strcspn",
        "strnlen",
        "tolower",
        "towlower",
        "towupper",
        "wcscmp",
        "wcscpy_s",
        "wcsncmp",
        "wcsncpy_s",
        "wcsnlen",
        "wcstok_s"
      ]
    },
    {
      "lib": "oleaut32.dll",
      "count": 1,
      "functions": [
        "ORDINAL 277"
      ]
    },
    {
      "lib": "bcrypt.dll",
      "count": 7,
      "functions": [
        "BCryptCloseAlgorithmProvider",
        "BCryptCreateHash",
        "BCryptDestroyHash",
        "BCryptFinishHash",
        "BCryptGetProperty",
        "BCryptHashData",
        "BCryptOpenAlgorithmProvider"
      ]
    },
    {
      "lib": "kernel32.dll",
      "count": 138,
      "functions": [
        "AcquireSRWLockExclusive",
        "AcquireSRWLockShared",
        "CancelIoEx",
        "CancelThreadpoolIo",
        "CloseHandle",
        "CloseThreadpool",
        "CloseThreadpoolIo",
        "CloseThreadpoolTimer",
        "CloseThreadpoolWork",
        "CompareStringEx",
        "ConvertFiberToThread",
        "ConvertThreadToFiber",
        "CopyFile2",
        "CreateDirectoryW",
        "CreateEventW",
        "CreateFiberEx",
        "CreateFile2",
        "CreateFileMappingW",
        "CreateFileW",
        "CreateMutexExW",
        "CreateMutexW",
        "CreateSemaphoreExW",
        "CreateThreadpool",
        "CreateThreadpoolIo",
        "CreateThreadpoolTimer",
        "CreateThreadpoolWork",
        "DebugBreak",
        "DecodePointer",
        "DeleteCriticalSection",
        "DeleteFiber",
        "DeviceIoControl",
        "DuplicateHandle",
        "EncodePointer",
        "EnterCriticalSection",
        "ExpandEnvironmentStringsW",
        "FindClose",
        "FindFirstFileExW",
        "FindNextFileW",
        "FindResourceExW",
        "FindResourceW",
        "FormatMessageW",
        "FreeLibrary",
        "GetCurrentProcess",
        "GetCurrentProcessId",
        "GetCurrentThread",
        "GetCurrentThreadId",
        "GetFileAttributesExW",
        "GetFileAttributesW",
        "GetFileInformationByHandleEx",
        "GetFileSizeEx",
        "GetLastError",
        "GetLocaleInfoEx",
        "GetLongPathNameW",
        "GetModuleFileNameA",
        "GetModuleFileNameW",
        "GetModuleHandleExW",
        "GetModuleHandleW",
        "GetPackageFullName",
        "GetPackagesByPackageFamily",
        "GetProcAddress",
        "GetProcessHeap",
        "GetProcessId",
        "GetProcessTimes",
        "GetStringTypeW",
        "GetSystemDirectoryW",
        "GetSystemInfo",
        "GetSystemPreferredUILanguages",
        "GetSystemTimeAsFileTime",
        "GetSystemTimePreciseAsFileTime",
        "GetThreadPreferredUILanguages",
        "GetTickCount",
        "GetUserPreferredUILanguages",
        "GetVersionExW",
        "HeapAlloc",
        "HeapFree",
        "HeapSetInformation",
        "InitOnceExecuteOnce",
        "InitializeConditionVariable",
        "InitializeCriticalSection",
        "InitializeCriticalSectionAndSpinCount",
        "InitializeCriticalSectionEx",
        "InitializeSListHead",
        "InitializeSRWLock",
        "IsDebuggerPresent",
        "IsThreadAFiber",
        "LCMapStringEx",
        "LeaveCriticalSection",
        "LoadLibraryExW",
        "LoadResource",
        "LocalFree",
        "LockResource",
        "MapViewOfFile",
        "MultiByteToWideChar",
        "OpenSemaphoreW",
        "OutputDebugStringW",
        "QueryFullProcessImageNameW",
        "QueryPerformanceCounter",
        "QueryPerformanceFrequency",
        "QueryUnbiasedInterruptTime",
        "RaiseException",
        "ReleaseMutex",
        "ReleaseSRWLockExclusive",
        "ReleaseSRWLockShared",
        "ReleaseSemaphore",
        "ResetEvent",
        "RtlLookupFunctionEntry",
        "RtlPcToFileHeader",
        "RtlUnwindEx",
        "SetErrorMode",
        "SetEvent",
        "SetLastError",
        "SetThreadPreferredUILanguages",
        "SetThreadpoolThreadMaximum",
        "SetThreadpoolTimer",
        "SizeofResource",
        "Sleep",
        "SleepConditionVariableCS",
        "SleepConditionVariableSRW",
        "StartThreadpoolIo",
        "SubmitThreadpoolWork",
        "SwitchToFiber",
        "SwitchToThread",
        "TerminateProcess",
        "TlsAlloc",
        "TlsFree",
        "TlsGetValue",
        "TlsSetValue",
        "TryAcquireSRWLockExclusive",
        "UnmapViewOfFile",
        "WaitForSingleObject",
        "WaitForSingleObjectEx",
        "WaitForThreadpoolIoCallbacks",
        "WaitForThreadpoolTimerCallbacks",
        "WaitForThreadpoolWorkCallbacks",
        "WakeAllConditionVariable",
        "WakeConditionVariable",
        "WideCharToMultiByte",
        "lstrcmpiW"
      ]
    }
  ],
  "hashes": {
    "sha2": "e0a5b312dc2a130e2ca129feb36f4a7ffd189d1b079a5a96e56a4b81d07109e3",
    "ssdeep": "49152:uCG8qJpuUcmUmujq2r8gr/vrhLO+vKXjZJP71IFWdzWQECq8r37UnR:u5CbhLajkWHEsr37"
  },
  "intent": {
    "intentions": 13,
    "uniq_apis_matched": 36,
    "results": [
      {
        "intent": "Can Access And Read Windows Tokens",
        "tag": "Expert Input:IBO.0020 - Windows Token Access",
        "component": "Privileges",
        "inputs": 4,
        "matches": 2,
        "apis": [
          "OpenProcessToken",
          "OpenThreadToken"
        ]
      },
      {
        "intent": "Can Enumerate The Windows Registry",
        "tag": "Expert Input:IBO.009 - Enumerate The Windows Registry",
        "component": "Registry",
        "inputs": 6,
        "matches": 1,
        "apis": [
          "RegEnumKeyExW"
        ]
      },
      {
        "intent": "Queries And Discovers Windows Registry Configuration Settings",
        "tag": "Discovery:T1012 - Query Registry",
        "component": "Registry",
        "inputs": 11,
        "matches": 3,
        "apis": [
          "RegGetValueW",
          "RegQueryInfoKeyW",
          "RegQueryValueExW"
        ]
      },
      {
        "intent": "Enumerates Files or Directories on the Target System",
        "tag": "Discovery:T1083 - File and Directory Discovery",
        "component": "Filesystem",
        "inputs": 5,
        "matches": 1,
        "apis": [
          "FindFirstFileExW"
        ]
      },
      {
        "intent": "Can Create/Manipulate System Services",
        "tag": "Expert Input:IBO.007 - Create/Manipulate System Services",
        "component": "Services",
        "inputs": 19,
        "matches": 6,
        "apis": [
          "CloseServiceHandle",
          "ControlService",
          "RegisterServiceCtrlHandlerExW",
          "SetServiceStatus",
          "StartServiceCtrlDispatcherW",
          "StartServiceW"
        ]
      },
      {
        "intent": "Can Terminate Processes On The Target System",
        "tag": "Expert Input:IBO.0025",
        "component": "Processes",
        "inputs": 1,
        "matches": 1,
        "apis": [
          "TerminateProcess"
        ]
      },
      {
        "intent": "Steals Tokens To Impersonate Windows Identities",
        "tag": "Privilege Escalation:T1134.001 - Token Impersonation/Theft",
        "component": "Privileges",
        "inputs": 5,
        "matches": 1,
        "apis": [
          "ImpersonateLoggedOnUser"
        ]
      },
      {
        "intent": "Can Enumerate/Discover System Services And Their Configuration Data",
        "tag": "Expert Input:IBO.006 - Enumerate System Services",
        "component": "Services",
        "inputs": 28,
        "matches": 2,
        "apis": [
          "OpenSCManagerW",
          "OpenServiceW"
        ]
      },
      {
        "intent": "Queries and Discovers General Attributes From The Target System",
        "tag": "Discovery:T1082 - System Information Discovery",
        "component": "---",
        "inputs": 3,
        "matches": 1,
        "apis": [
          "RtlGetVersion"
        ]
      },
      {
        "intent": "Can Create/Manipulate The Windows Registry",
        "tag": "Expert Input:IBO.008 - Create/Manipulate The Windows Registry",
        "component": "Registry",
        "inputs": 33,
        "matches": 6,
        "apis": [
          "RegCreateKeyExW",
          "RegDeleteValueW",
          "RegOpenCurrentUser",
          "RegOpenKeyExW",
          "RegSetKeyValueW",
          "RegSetValueExW"
        ]
      },
      {
        "intent": "Can Conduct Cryptographic Operations",
        "tag": "Expert Input:IBO.0022 - Windows Cryptography Facilities",
        "component": "Crypto",
        "inputs": 71,
        "matches": 7,
        "apis": [
          "BCryptCloseAlgorithmProvider",
          "BCryptCreateHash",
          "BCryptDestroyHash",
          "BCryptFinishHash",
          "BCryptGetProperty",
          "BCryptHashData",
          "BCryptOpenAlgorithmProvider"
        ]
      },
      {
        "intent": "Can Work With The TCP Network Protocol",
        "tag": "Expert Input:IBO.0012 - Network TCP Sockets",
        "component": "Networking",
        "inputs": 15,
        "matches": 1,
        "apis": [
          "inet_ntop"
        ]
      },
      {
        "intent": "Connects Over HTTP, HTTPS To Download Content On The Target System",
        "tag": "Command And Control:T1105 - Ingress Tool Transfer",
        "component": "Networking",
        "inputs": 21,
        "matches": 4,
        "apis": [
          "WinHttpConnect",
          "WinHttpGetProxyForUrl",
          "WinHttpOpenRequest",
          "WinHttpSendRequest"
        ]
      }
    ]
  },
  "os": "win10"
}