{
  "name": "nltest.exe",
  "path": "\\\\?\\C:\\Windows\\System32\\nltest.exe",
  "size": 540672,
  "is_64": true,
  "is_lib": false,
  "is_dotnet": false,
  "has_imports": true,
  "has_exports": false,
  "subsystem": 3,
  "subsystem_caption": "The Windows Character (Console UI) Subsystem",
  "libs": [
    "advapi32.dll",
    "kernel32.dll",
    "logoncli.dll",
    "msvcrt.dll",
    "netutils.dll",
    "ntdll.dll",
    "ntdsapi.dll",
    "rpcrt4.dll",
    "user32.dll",
    "ws2_32.dll"
  ],
  "imports": [
    {
      "lib": "kernel32.dll",
      "count": 43,
      "functions": [
        "CloseHandle",
        "CreateEventW",
        "CreateFileW",
        "CreateMailslotA",
        "CreateThread",
        "DeleteCriticalSection",
        "EnterCriticalSection",
        "FreeLibrary",
        "GetComputerNameW",
        "GetConsoleOutputCP",
        "GetCurrentProcess",
        "GetCurrentProcessId",
        "GetCurrentThreadId",
        "GetLastError",
        "GetLocalTime",
        "GetModuleHandleW",
        "GetOverlappedResult",
        "GetProcAddress",
        "GetProcessHeap",
        "GetStdHandle",
        "GetSystemTimeAsFileTime",
        "GetTickCount",
        "HeapAlloc",
        "HeapFree",
        "InitializeCriticalSection",
        "LeaveCriticalSection",
        "LoadLibraryExW",
        "LocalAlloc",
        "LocalFree",
        "MultiByteToWideChar",
        "QueryPerformanceCounter",
        "ReadFile",
        "SetEvent",
        "SetMailslotInfo",
        "SetThreadUILanguage",
        "SetUnhandledExceptionFilter",
        "Sleep",
        "TerminateProcess",
        "UnhandledExceptionFilter",
        "WaitForMultipleObjects",
        "WaitForSingleObject",
        "WideCharToMultiByte",
        "WriteFile"
      ]
    },
    {
      "lib": "user32.dll",
      "count": 1,
      "functions": [
        "LoadStringW"
      ]
    },
    {
      "lib": "netutils.dll",
      "count": 3,
      "functions": [
        "NetApiBufferAllocate",
        "NetApiBufferFree",
        "NetpwNameCompare"
      ]
    },
    {
      "lib": "ws2_32.dll",
      "count": 9,
      "functions": [
        "ORDINAL 111",
        "ORDINAL 115",
        "ORDINAL 116",
        "ORDINAL 15",
        "ORDINAL 8",
        "WSAAddressToStringA",
        "WSAStringToAddressA",
        "freeaddrinfo",
        "getaddrinfo"
      ]
    },
    {
      "lib": "advapi32.dll",
      "count": 27,
      "functions": [
        "AbortSystemShutdownW",
        "AllocateAndInitializeSid",
        "CryptAcquireContextA",
        "CryptAcquireContextW",
        "CryptGenRandom",
        "CryptReleaseContext",
        "EqualSid",
        "FreeSid",
        "GetAce",
        "GetAclInformation",
        "GetSecurityDescriptorDacl",
        "InitiateSystemShutdownExW",
        "LsaClose",
        "LsaFreeMemory",
        "LsaOpenPolicy",
        "LsaQueryForestTrustInformation",
        "RegCloseKey",
        "RegConnectRegistryW",
        "RegGetKeySecurity",
        "RegOpenKeyExA",
        "RegQueryValueExA",
        "RegQueryValueExW",
        "RegSetKeySecurity",
        "RegSetValueExA",
        "SystemFunction025",
        "SystemFunction027",
        "TraceMessage"
      ]
    },
    {
      "lib": "ntdll.dll",
      "count": 17,
      "functions": [
        "RtlAllocateHeap",
        "RtlAnsiStringToUnicodeString",
        "RtlCaptureContext",
        "RtlCompareUnicodeString",
        "RtlConvertSidToUnicodeString",
        "RtlFreeHeap",
        "RtlFreeUnicodeString",
        "RtlInitAnsiString",
        "RtlInitString",
        "RtlInitUnicodeString",
        "RtlLengthSid",
        "RtlLookupFunctionEntry",
        "RtlOemStringToUnicodeString",
        "RtlSystemTimeToLocalTime",
        "RtlTimeToTimeFields",
        "RtlVirtualUnwind",
        "RtlxAnsiStringToUnicodeSize"
      ]
    },
    {
      "lib": "rpcrt4.dll",
      "count": 5,
      "functions": [
        "RpcStringFreeA",
        "RpcStringFreeW",
        "UuidFromStringA",
        "UuidToStringA",
        "UuidToStringW"
      ]
    },
    {
      "lib": "logoncli.dll",
      "count": 22,
      "functions": [
        "DsAddressToSiteNamesExA",
        "DsDeregisterDnsHostRecordsA",
        "DsEnumerateDomainTrustsA",
        "DsGetDcCloseW",
        "DsGetDcNameA",
        "DsGetDcNameW",
        "DsGetDcNameWithAccountW",
        "DsGetDcNextA",
        "DsGetDcOpenA",
        "DsGetDcSiteCoverageA",
        "DsGetForestTrustInformationW",
        "DsGetSiteNameA",
        "I_NetGetDCList",
        "I_NetLogonControl",
        "I_NetLogonControl2",
        "I_NetlogonComputeClientDigest",
        "I_NetlogonComputeClientSignature",
        "I_NetlogonComputeServerDigest",
        "I_NetlogonComputeServerSignature",
        "I_NetlogonGetTrustRid",
        "NetGetDCName",
        "NetLogonGetTimeServiceParentDomain"
      ]
    },
    {
      "lib": "ntdsapi.dll",
      "count": 4,
      "functions": [
        "DsBindW",
        "DsFreeDomainControllerInfoW",
        "DsGetDomainControllerInfoW",
        "DsUnBindW"
      ]
    },
    {
      "lib": "msvcrt.dll",
      "count": 35,
      "functions": [
        "?terminate@@YAXXZ",
        "_XcptFilter",
        "__C_specific_handler",
        "__getmainargs",
        "__iob_func",
        "__set_app_type",
        "__setusermatherr",
        "_amsg_exit",
        "_cexit",
        "_commode",
        "_exit",
        "_fmode",
        "_initterm",
        "_stricmp",
        "_strnicmp",
        "_vsnprintf",
        "_vsnwprintf",
        "_wsetlocale",
        "exit",
        "fprintf",
        "fwprintf",
        "iswctype",
        "memcpy",
        "memset",
        "printf",
        "qsort",
        "sprintf_s",
        "strcat_s",
        "strchr",
        "strcpy_s",
        "strncpy_s",
        "strtol",
        "strtoul",
        "wcscat_s",
        "wcscpy_s"
      ]
    }
  ],
  "hashes": {
    "sha2": "7b3ac2366c86c726e90c96a96f5a03c376c8a3ceba2086601e887b203a868eb9",
    "ssdeep": "6144://hd55EdduEOshYxjpOtUoieJn/n0apQQz5JndBXlqz:BipDYxjpV40WQwdBI"
  },
  "intent": {
    "intentions": 13,
    "uniq_apis_matched": 30,
    "results": [
      {
        "intent": "Can Create/Manipulate The Windows Registry",
        "tag": "Expert Input:IBO.0008 - Create/Manipulate The Windows Registry",
        "component": "Registry",
        "inputs": 33,
        "matches": 2,
        "apis": [
          "RegOpenKeyExA",
          "RegSetValueExA"
        ]
      },
      {
        "intent": "Can Delete DNS Records",
        "tag": "Expert Input:IBO.00015 - DNS Record Deletion",
        "component": "Networking",
        "inputs": 1,
        "matches": 1,
        "apis": [
          "DsDeregisterDnsHostRecordsA"
        ]
      },
      {
        "intent": "Can Be Invoked With CommandLine Arguments From a Console/Terminal",
        "tag": "Expert Input:IBO.0001 - Accepts CommandLine Arguments",
        "component": "Processes",
        "inputs": 3,
        "matches": 1,
        "apis": [
          "__getmainargs"
        ]
      },
      {
        "intent": "Can Work With The TCP Network Protocol",
        "tag": "Expert Input:IBO.00012 - Network TCP Sockets",
        "component": "Networking",
        "inputs": 15,
        "matches": 3,
        "apis": [
          "WSAAddressToStringA",
          "WSAStringToAddressA",
          "freeaddrinfo"
        ]
      },
      {
        "intent": "Can Conduct DNS Queries",
        "tag": "Expert Input:IBO.00014 - Network Layer-7 DNS Usage",
        "component": "Networking",
        "inputs": 31,
        "matches": 1,
        "apis": [
          "getaddrinfo"
        ]
      },
      {
        "intent": "Can Terminate Processes On The Target System",
        "tag": "Expert Input:IBO.0025",
        "component": "---",
        "inputs": 1,
        "matches": 1,
        "apis": [
          "TerminateProcess"
        ]
      },
      {
        "intent": "Enumerates Available Windows Domain Trusts",
        "tag": "Discovery:T1482 - Domain Trust Discovery",
        "component": "Networking",
        "inputs": 7,
        "matches": 3,
        "apis": [
          "DsEnumerateDomainTrustsA",
          "DsGetForestTrustInformationW",
          "LsaQueryForestTrustInformation"
        ]
      },
      {
        "intent": "Discovers Configuration Attributes of the Windows Enterprise Domain",
        "tag": "Reconnaissance:T1590.001 - Domain Properties (Windows Enterprise)",
        "component": "---",
        "inputs": 24,
        "matches": 9,
        "apis": [
          "DsAddressToSiteNamesExA",
          "DsGetDcNameA",
          "DsGetDcNameW",
          "DsGetDcNameWithAccountW",
          "DsGetDcNextA",
          "DsGetDomainControllerInfoW",
          "DsGetSiteNameA",
          "NetGetDCName",
          "NetLogonGetTimeServiceParentDomain"
        ]
      },
      {
        "intent": "Can Conduct Cryptographic Operations",
        "tag": "Expert Input:IBO.00022 - Windows Cryptography Facilities",
        "component": "Crypto",
        "inputs": 67,
        "matches": 4,
        "apis": [
          "CryptAcquireContextA",
          "CryptAcquireContextW",
          "CryptGenRandom",
          "CryptReleaseContext"
        ]
      },
      {
        "intent": "Coordinates System Reboots Resulting In Loss of Attack Evidence Present in System Memory",
        "tag": "Impact:T1529 - System Shutdown/Reboot",
        "component": "---",
        "inputs": 6,
        "matches": 1,
        "apis": [
          "InitiateSystemShutdownExW"
        ]
      },
      {
        "intent": "Can Remotely Connect To A Target System And Access Its Windows Registry",
        "tag": "Expert Input:IBO.00010 - Connect To Remote Windows Registry",
        "component": "Networking",
        "inputs": 2,
        "matches": 1,
        "apis": [
          "RegConnectRegistryW"
        ]
      },
      {
        "intent": "Queries And Discovers Windows Registry Configuration Settings",
        "tag": "Discovery:T1012 - Query Registry",
        "component": "Registry",
        "inputs": 11,
        "matches": 2,
        "apis": [
          "RegQueryValueExA",
          "RegQueryValueExW"
        ]
      },
      {
        "intent": "Can Communicate via MailSlots",
        "tag": "Expert Input:IBO.0005 - Implement MailSlots",
        "component": "Processes",
        "inputs": 2,
        "matches": 1,
        "apis": [
          "CreateMailslotA"
        ]
      }
    ]
  }
}