{
  "name": "wsmanhttpconfig.exe",
  "path": "\\\\?\\C:\\Windows\\System32\\WSManHTTPConfig.exe",
  "size": 43008,
  "is_64": true,
  "is_lib": false,
  "is_dotnet": false,
  "has_imports": true,
  "has_exports": true,
  "subsystem": 3,
  "subsystem_caption": "The Windows Character (Console UI) Subsystem",
  "libs": [
    "api-ms-win-core-com-l1-1-0.dll",
    "api-ms-win-core-errorhandling-l1-1-0.dll",
    "api-ms-win-core-heap-l1-1-0.dll",
    "api-ms-win-core-kernel32-legacy-l1-1-1.dll",
    "api-ms-win-core-libraryloader-l1-1-0.dll",
    "api-ms-win-core-processthreads-l1-1-0.dll",
    "api-ms-win-core-profile-l1-1-0.dll",
    "api-ms-win-core-rtlsupport-l1-1-0.dll",
    "api-ms-win-core-synch-l1-2-0.dll",
    "api-ms-win-core-sysinfo-l1-1-0.dll",
    "api-ms-win-core-sysinfo-l1-2-0.dll",
    "api-ms-win-eventing-classicprovider-l1-1-0.dll",
    "api-ms-win-service-management-l1-1-0.dll",
    "api-ms-win-service-management-l2-1-0.dll",
    "msvcrt.dll",
    "oleaut32.dll",
    "wsmsvc.dll"
  ],
  "imports": [
    {
      "lib": "api-ms-win-core-libraryloader-l1-1-0.dll",
      "count": 1,
      "functions": [
        "GetModuleHandleW"
      ]
    },
    {
      "lib": "api-ms-win-core-sysinfo-l1-2-0.dll",
      "count": 1,
      "functions": [
        "VerSetConditionMask"
      ]
    },
    {
      "lib": "wsmsvc.dll",
      "count": 16,
      "functions": [
        "??0?$AutoDeleteVector@E@@QEAA@XZ",
        "??0CErrorContext@@QEAA@_N@Z",
        "??0OnHTTPInitialize@@QEAA@XZ",
        "??1?$AutoDeleteVector@E@@QEAA@XZ",
        "??1CErrorContext@@UEAA@XZ",
        "??1CWSManCriticalSection@@QEAA@XZ",
        "??1OnHTTPInitialize@@QEAA@XZ",
        "??4?$AutoDeleteVector@E@@QEAAAEAV0@PEAE@Z",
        "?Alloc@WSManMemory@@SAPEAX_KHW4_NitsFaultMode@@@Z",
        "?Free@WSManMemory@@SAXPEAXH@Z",
        "?GetErrorCode@CErrorContext@@UEBAKXZ",
        "HandleMigration",
        "MoveSettingsToMigrationKey",
        "RemovePluginXmlNewAttrForThresholdOrGreater",
        "UninstallMigration",
        "WSManError"
      ]
    },
    {
      "lib": "api-ms-win-eventing-classicprovider-l1-1-0.dll",
      "count": 5,
      "functions": [
        "GetTraceEnableFlags",
        "GetTraceEnableLevel",
        "GetTraceLoggerHandle",
        "RegisterTraceGuidsW",
        "TraceMessage"
      ]
    },
    {
      "lib": "api-ms-win-core-synch-l1-2-0.dll",
      "count": 1,
      "functions": [
        "Sleep"
      ]
    },
    {
      "lib": "api-ms-win-core-profile-l1-1-0.dll",
      "count": 1,
      "functions": [
        "QueryPerformanceCounter"
      ]
    },
    {
      "lib": "msvcrt.dll",
      "count": 32,
      "functions": [
        "??0exception@@QEAA@AEBQEBD@Z",
        "??0exception@@QEAA@AEBQEBDH@Z",
        "??0exception@@QEAA@AEBV0@@Z",
        "??1exception@@UEAA@XZ",
        "??1type_info@@UEAA@XZ",
        "?terminate@@YAXXZ",
        "?what@exception@@UEBAPEBDXZ",
        "_CxxThrowException",
        "_XcptFilter",
        "__C_specific_handler",
        "__CxxFrameHandler3",
        "__dllonexit",
        "__iob_func",
        "__set_app_type",
        "__setusermatherr",
        "__wgetmainargs",
        "_amsg_exit",
        "_cexit",
        "_commode",
        "_exit",
        "_fmode",
        "_initterm",
        "_lock",
        "_onexit",
        "_purecall",
        "_unlock",
        "_wcsicmp",
        "exit",
        "fwprintf",
        "memcpy",
        "memmove",
        "memset"
      ]
    },
    {
      "lib": "oleaut32.dll",
      "count": 2,
      "functions": [
        "ORDINAL 2",
        "ORDINAL 6"
      ]
    },
    {
      "lib": "api-ms-win-core-heap-l1-1-0.dll",
      "count": 1,
      "functions": [
        "HeapSetInformation"
      ]
    },
    {
      "lib": "api-ms-win-service-management-l2-1-0.dll",
      "count": 2,
      "functions": [
        "ChangeServiceConfig2W",
        "QueryServiceConfigW"
      ]
    },
    {
      "lib": "api-ms-win-core-com-l1-1-0.dll",
      "count": 3,
      "functions": [
        "CoCreateInstance",
        "CoInitializeEx",
        "CoUninitialize"
      ]
    },
    {
      "lib": "api-ms-win-core-kernel32-legacy-l1-1-1.dll",
      "count": 1,
      "functions": [
        "VerifyVersionInfoW"
      ]
    },
    {
      "lib": "api-ms-win-core-processthreads-l1-1-0.dll",
      "count": 4,
      "functions": [
        "GetCurrentProcess",
        "GetCurrentProcessId",
        "GetCurrentThreadId",
        "TerminateProcess"
      ]
    },
    {
      "lib": "api-ms-win-service-management-l1-1-0.dll",
      "count": 4,
      "functions": [
        "CloseServiceHandle",
        "OpenSCManagerW",
        "OpenServiceW",
        "StartServiceW"
      ]
    },
    {
      "lib": "api-ms-win-core-sysinfo-l1-1-0.dll",
      "count": 3,
      "functions": [
        "GetSystemTimeAsFileTime",
        "GetTickCount",
        "GetVersionExW"
      ]
    },
    {
      "lib": "api-ms-win-core-rtlsupport-l1-1-0.dll",
      "count": 3,
      "functions": [
        "RtlCaptureContext",
        "RtlLookupFunctionEntry",
        "RtlVirtualUnwind"
      ]
    },
    {
      "lib": "api-ms-win-core-errorhandling-l1-1-0.dll",
      "count": 3,
      "functions": [
        "GetLastError",
        "SetUnhandledExceptionFilter",
        "UnhandledExceptionFilter"
      ]
    }
  ],
  "exports": {
    "count": 22,
    "functions": [
      "??0?$SafeMap@VKey@Locale@@KV?$SafeMap_Iterator@VKey@Locale@@K@@@@QEAA@XZ",
      "??0?$SafeMap_Iterator@VKey@Locale@@K@@QEAA@AEAV?$SafeMap@VKey@Locale@@KV?$SafeMap_Iterator@VKey@Locale@@K@@@@_N@Z",
      "??0?$SafeMap_Lock@VKey@Locale@@KV?$SafeMap_Iterator@VKey@Locale@@K@@@@QEAA@AEBV?$SafeMap@VKey@Locale@@KV?$SafeMap_Iterator@VKey@Locale@@K@@@@_N@Z",
      "??1?$SafeMap@VKey@Locale@@KV?$SafeMap_Iterator@VKey@Locale@@K@@@@QEAA@XZ",
      "??1?$SafeMap_Iterator@VKey@Locale@@K@@QEAA@XZ",
      "??1?$SafeMap_Lock@VKey@Locale@@KV?$SafeMap_Iterator@VKey@Locale@@K@@@@QEAA@XZ",
      "??1CWSManCriticalSectionWithConditionVar@@QEAA@XZ",
      "??_7?$SafeMap@VKey@Locale@@KV?$SafeMap_Iterator@VKey@Locale@@K@@@@6B@",
      "?Acquire@?$SafeMap@VKey@Locale@@KV?$SafeMap_Iterator@VKey@Locale@@K@@@@UEBAXXZ",
      "?Acquire@?$SafeMap_Lock@VKey@Locale@@KV?$SafeMap_Iterator@VKey@Locale@@K@@@@QEAAXXZ",
      "?Acquired@?$SafeMap_Lock@VKey@Locale@@KV?$SafeMap_Iterator@VKey@Locale@@K@@@@QEAA_NXZ",
      "?AsReference@?$SafeMap@VKey@Locale@@KV?$SafeMap_Iterator@VKey@Locale@@K@@@@QEAAAEAV1@XZ",
      "?Data@?$SafeMap_Iterator@VKey@Locale@@K@@IEBAAEAV?$STLMap@VKey@Locale@@K@@XZ",
      "?DeInitialize@?$SafeMap@VKey@Locale@@KV?$SafeMap_Iterator@VKey@Locale@@K@@@@UEAA_NAEAVIRequestContext@@@Z",
      "?GetInitError@CWSManCriticalSection@@QEBAKXZ",
      "?GetMap@?$SafeMap_Iterator@VKey@Locale@@K@@QEBAAEAV?$SafeMap@VKey@Locale@@KV?$SafeMap_Iterator@VKey@Locale@@K@@@@XZ",
      "?GetMap@?$SafeMap_Lock@VKey@Locale@@KV?$SafeMap_Iterator@VKey@Locale@@K@@@@QEBAAEBV?$SafeMap@VKey@Locale@@KV?$SafeMap_Iterator@VKey@Locale@@K@@@@XZ",
      "?Initialize@?$SafeMap@VKey@Locale@@KV?$SafeMap_Iterator@VKey@Locale@@K@@@@UEAA_NAEAVIRequestContext@@@Z",
      "?IsValid@?$SafeMap_Iterator@VKey@Locale@@K@@QEBA_NXZ",
      "?Release@?$SafeMap@VKey@Locale@@KV?$SafeMap_Iterator@VKey@Locale@@K@@@@UEBAXXZ",
      "?Reset@?$SafeMap_Iterator@VKey@Locale@@K@@QEAAXXZ",
      "?SkipOrphans@?$SafeMap_Iterator@VKey@Locale@@K@@IEAAXXZ"
    ]
  },
  "hashes": {
    "sha2": "e7fba9e9fec68912c184b1061fd2862e77eb3b49769f71bb314449cbefe5331b",
    "ssdeep": "768:LTWGPBcX3S58Zjth22l0cxzJ2VHfi//2PsINi:LTWH3S58M2+AzEVfi/YjNi"
  },
  "intent": {
    "intentions": 3,
    "uniq_apis_matched": 6,
    "results": [
      {
        "intent": "Can Create/Manipulate System Services",
        "tag": "Expert Input:IBO.0007 - Create/Manipulate System Services",
        "component": "Services",
        "inputs": 19,
        "matches": 2,
        "apis": [
          "CloseServiceHandle",
          "StartServiceW"
        ]
      },
      {
        "intent": "Can Enumerate/Discover System Services And Their Configuration Data",
        "tag": "Expert Input:IBO.0006 - Enumerate System Services",
        "component": "Services",
        "inputs": 28,
        "matches": 3,
        "apis": [
          "OpenSCManagerW",
          "OpenServiceW",
          "QueryServiceConfigW"
        ]
      },
      {
        "intent": "Can Be Invoked With CommandLine Arguments From a Console/Terminal",
        "tag": "Expert Input:IBO.0001 - Accepts CommandLine Arguments",
        "component": "Processes",
        "inputs": 3,
        "matches": 1,
        "apis": [
          "__wgetmainargs"
        ]
      }
    ]
  }
}