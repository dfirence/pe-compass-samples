{
  "name": "camerasettingsuihost.exe",
  "path": "\\\\?\\C:\\Windows\\SysWOW64\\CameraSettingsUIHost.exe",
  "size": 28344,
  "is_64": false,
  "is_lib": false,
  "is_dotnet": true,
  "has_imports": true,
  "has_exports": false,
  "subsystem": 2,
  "subsystem_caption": "The Windows Graphical User Interface (GUI) Subsystem",
  "libs": [
    "advapi32.dll",
    "api-ms-win-core-com-l1-1-0.dll",
    "api-ms-win-core-winrt-error-l1-1-0.dll",
    "api-ms-win-core-winrt-error-l1-1-1.dll",
    "api-ms-win-core-winrt-l1-1-0.dll",
    "api-ms-win-core-winrt-string-l1-1-0.dll",
    "dui70.dll",
    "imm32.dll",
    "kernel32.dll",
    "msvcrt.dll",
    "user32.dll"
  ],
  "imports": [
    {
      "lib": "api-ms-win-core-winrt-error-l1-1-1.dll",
      "count": 1,
      "functions": [
        "RoGetMatchingRestrictedErrorInfo"
      ]
    },
    {
      "lib": "api-ms-win-core-winrt-l1-1-0.dll",
      "count": 2,
      "functions": [
        "RoRegisterActivationFactories",
        "RoRevokeActivationFactories"
      ]
    },
    {
      "lib": "user32.dll",
      "count": 4,
      "functions": [
        "DispatchMessageW",
        "GetMessageW",
        "PostThreadMessageW",
        "TranslateMessage"
      ]
    },
    {
      "lib": "api-ms-win-core-winrt-error-l1-1-0.dll",
      "count": 3,
      "functions": [
        "RoOriginateError",
        "RoOriginateErrorW",
        "SetRestrictedErrorInfo"
      ]
    },
    {
      "lib": "api-ms-win-core-winrt-string-l1-1-0.dll",
      "count": 5,
      "functions": [
        "WindowsCreateString",
        "WindowsDeleteString",
        "WindowsGetStringRawBuffer",
        "WindowsIsStringEmpty",
        "WindowsStringHasEmbeddedNull"
      ]
    },
    {
      "lib": "api-ms-win-core-com-l1-1-0.dll",
      "count": 8,
      "functions": [
        "CoAddRefServerProcess",
        "CoCreateInstance",
        "CoInitializeEx",
        "CoRegisterClassObject",
        "CoReleaseServerProcess",
        "CoResumeClassObjects",
        "CoRevokeClassObject",
        "CoUninitialize"
      ]
    },
    {
      "lib": "dui70.dll",
      "count": 4,
      "functions": [
        "InitProcessPriv",
        "InitThread",
        "UnInitProcessPriv",
        "UnInitThread"
      ]
    },
    {
      "lib": "imm32.dll",
      "count": 1,
      "functions": [
        "ImmDisableIME"
      ]
    },
    {
      "lib": "advapi32.dll",
      "count": 6,
      "functions": [
        "GetTraceEnableFlags",
        "GetTraceEnableLevel",
        "GetTraceLoggerHandle",
        "RegisterTraceGuidsW",
        "TraceMessage",
        "UnregisterTraceGuids"
      ]
    },
    {
      "lib": "kernel32.dll",
      "count": 19,
      "functions": [
        "AcquireSRWLockExclusive",
        "AcquireSRWLockShared",
        "DecodePointer",
        "EncodePointer",
        "GetCurrentProcess",
        "GetCurrentProcessId",
        "GetCurrentThreadId",
        "GetModuleHandleW",
        "GetStartupInfoW",
        "GetSystemTimeAsFileTime",
        "GetTickCount",
        "InitOnceExecuteOnce",
        "QueryPerformanceCounter",
        "ReleaseSRWLockExclusive",
        "ReleaseSRWLockShared",
        "SetUnhandledExceptionFilter",
        "Sleep",
        "TerminateProcess",
        "UnhandledExceptionFilter"
      ]
    },
    {
      "lib": "msvcrt.dll",
      "count": 24,
      "functions": [
        "?terminate@@YAXXZ",
        "_XcptFilter",
        "__CxxFrameHandler3",
        "__dllonexit",
        "__p__commode",
        "__p__fmode",
        "__set_app_type",
        "__setusermatherr",
        "__wgetmainargs",
        "_amsg_exit",
        "_callnewh",
        "_cexit",
        "_controlfp",
        "_except_handler4_common",
        "_exit",
        "_initterm",
        "_lock",
        "_onexit",
        "_purecall",
        "_unlock",
        "_wcmdln",
        "exit",
        "free",
        "malloc"
      ]
    }
  ],
  "hashes": {
    "sha2": "5aa3bdd40080c5dc3d3b5a866935f976c0443d0798836909cc6957d8fc4497bc",
    "ssdeep": "768:s16AfQ1eXIpiCI0UyErPGcCr6wD1Pw79R3e:W6A+QfCIxPGcsPwjO"
  },
  "intent": {
    "intentions": 1,
    "uniq_apis_matched": 1,
    "results": [
      {
        "intent": "Can Be Invoked With CommandLine Arguments From a Console/Terminal",
        "tag": "Expert Input:IBO.0001 - Accepts CommandLine Arguments",
        "component": "Processes",
        "inputs": 3,
        "matches": 1,
        "apis": [
          "__wgetmainargs"
        ]
      }
    ]
  }
}