{
  "name": "imtclnwz.exe",
  "path": "\\\\?\\C:\\Windows\\System32\\IME\\IMETC\\IMTCLNWZ.EXE",
  "size": 118784,
  "type": "win-pe",
  "is_64": true,
  "is_lib": false,
  "is_dotnet": false,
  "has_imports": true,
  "has_exports": false,
  "subsystem": 2,
  "subsystem_caption": "The Windows Graphical User Interface (GUI) Subsystem",
  "libs": [
    "advapi32.dll",
    "comctl32.dll",
    "comdlg32.dll",
    "kernel32.dll",
    "msvcrt.dll",
    "ntdll.dll",
    "ole32.dll",
    "shell32.dll",
    "shlwapi.dll",
    "user32.dll"
  ],
  "imports": [
    {
      "lib": "kernel32.dll",
      "count": 68,
      "functions": [
        "AcquireSRWLockExclusive",
        "AcquireSRWLockShared",
        "CloseHandle",
        "CloseThreadpoolTimer",
        "CompareStringW",
        "CreateFileMappingW",
        "CreateFileW",
        "CreateMutexExW",
        "CreateSemaphoreExW",
        "CreateThread",
        "CreateThreadpoolTimer",
        "DebugBreak",
        "DeleteCriticalSection",
        "EnterCriticalSection",
        "FindResourceExW",
        "FormatMessageW",
        "FreeLibrary",
        "GetCurrentDirectoryW",
        "GetCurrentProcess",
        "GetCurrentProcessId",
        "GetCurrentThreadId",
        "GetExitCodeThread",
        "GetFileSize",
        "GetLastError",
        "GetModuleFileNameA",
        "GetModuleFileNameW",
        "GetModuleHandleExW",
        "GetModuleHandleW",
        "GetProcAddress",
        "GetProcessHeap",
        "GetStartupInfoW",
        "GetSystemTimeAsFileTime",
        "GetTickCount",
        "GetUserDefaultUILanguage",
        "GetVersionExW",
        "HeapAlloc",
        "HeapFree",
        "HeapReAlloc",
        "InitializeCriticalSectionEx",
        "IsDebuggerPresent",
        "LeaveCriticalSection",
        "LoadLibraryW",
        "LoadResource",
        "LocalFree",
        "LockResource",
        "MapViewOfFileEx",
        "MultiByteToWideChar",
        "OpenSemaphoreW",
        "OutputDebugStringW",
        "QueryPerformanceCounter",
        "ReleaseMutex",
        "ReleaseSRWLockExclusive",
        "ReleaseSRWLockShared",
        "ReleaseSemaphore",
        "ResumeThread",
        "SetLastError",
        "SetThreadpoolTimer",
        "SetUnhandledExceptionFilter",
        "Sleep",
        "SleepConditionVariableSRW",
        "SuspendThread",
        "TerminateProcess",
        "UnhandledExceptionFilter",
        "UnmapViewOfFile",
        "WaitForSingleObject",
        "WaitForSingleObjectEx",
        "WaitForThreadpoolTimerCallbacks",
        "WakeAllConditionVariable"
      ]
    },
    {
      "lib": "msvcrt.dll",
      "count": 59,
      "functions": [
        "??0exception@@QEAA@AEBQEBD@Z",
        "??0exception@@QEAA@AEBQEBDH@Z",
        "??0exception@@QEAA@AEBV0@@Z",
        "??0exception@@QEAA@XZ",
        "??1exception@@UEAA@XZ",
        "??1type_info@@UEAA@XZ",
        "??3@YAXPEAX@Z",
        "??_V@YAXPEAX@Z",
        "?terminate@@YAXXZ",
        "?what@exception@@UEBAPEBDXZ",
        "_CxxThrowException",
        "_XcptFilter",
        "__C_specific_handler",
        "__CxxFrameHandler3",
        "__dllonexit",
        "__getmainargs",
        "__set_app_type",
        "__setusermatherr",
        "_acmdln",
        "_amsg_exit",
        "_callnewh",
        "_cexit",
        "_commode",
        "_exit",
        "_fmode",
        "_initterm",
        "_ismbblead",
        "_lock",
        "_onexit",
        "_purecall",
        "_unlock",
        "_vsnprintf_s",
        "_vsnwprintf",
        "_vsnwprintf_s",
        "_wfopen_s",
        "_wstrdate_s",
        "_wstrtime_s",
        "atoi",
        "exit",
        "fclose",
        "ferror",
        "fflush",
        "fputws",
        "fread",
        "free",
        "fwrite",
        "isalpha",
        "isdigit",
        "malloc",
        "memcmp",
        "memcpy",
        "memcpy_s",
        "memmove",
        "memmove_s",
        "memset",
        "wcschr",
        "wcsncat_s",
        "wcsncpy_s",
        "wcsrchr"
      ]
    },
    {
      "lib": "advapi32.dll",
      "count": 10,
      "functions": [
        "ConvertSidToStringSidW",
        "ConvertStringSecurityDescriptorToSecurityDescriptorW",
        "GetSidSubAuthority",
        "GetSidSubAuthorityCount",
        "GetTokenInformation",
        "IsValidSid",
        "OpenProcessToken",
        "RegCloseKey",
        "RegOpenKeyExW",
        "RegQueryValueExW"
      ]
    },
    {
      "lib": "comdlg32.dll",
      "count": 2,
      "functions": [
        "CommDlgExtendedError",
        "GetOpenFileNameW"
      ]
    },
    {
      "lib": "comctl32.dll",
      "count": 2,
      "functions": [
        "CreatePropertySheetPageW",
        "PropertySheetW"
      ]
    },
    {
      "lib": "ole32.dll",
      "count": 3,
      "functions": [
        "CoCreateInstance",
        "CoInitialize",
        "CoUninitialize"
      ]
    },
    {
      "lib": "ntdll.dll",
      "count": 3,
      "functions": [
        "RtlCaptureContext",
        "RtlLookupFunctionEntry",
        "RtlVirtualUnwind"
      ]
    },
    {
      "lib": "shell32.dll",
      "count": 2,
      "functions": [
        "DragAcceptFiles",
        "DragQueryFileW"
      ]
    },
    {
      "lib": "user32.dll",
      "count": 31,
      "functions": [
        "CallWindowProcW",
        "DialogBoxParamW",
        "DispatchMessageW",
        "EndDialog",
        "EnumChildWindows",
        "FindWindowW",
        "GetClassNameW",
        "GetClientRect",
        "GetDesktopWindow",
        "GetDlgCtrlID",
        "GetDlgItem",
        "GetParent",
        "GetWindowDC",
        "GetWindowInfo",
        "GetWindowLongPtrW",
        "IsIconic",
        "IsWindow",
        "LoadCursorW",
        "MessageBoxW",
        "PeekMessageW",
        "PostMessageW",
        "SendDlgItemMessageW",
        "SendMessageW",
        "SetClassLongPtrW",
        "SetDlgItemTextW",
        "SetFocus",
        "SetForegroundWindow",
        "SetWindowLongPtrW",
        "SetWindowPos",
        "SetWindowTextW",
        "ShowWindow"
      ]
    },
    {
      "lib": "shlwapi.dll",
      "count": 4,
      "functions": [
        "PathCompactPathW",
        "PathFileExistsW",
        "PathFindExtensionW",
        "PathRemoveFileSpecW"
      ]
    }
  ],
  "hashes": {
    "sha2": "7e217e293d846d488c1cd3bb633fc1fe1a2d6b5f522d35c872d8e16de8ebd2b3",
    "ssdeep": "1536:pYhOSuDldiIpbk7+iNV04MxWwHb7eEJePz+0mCLwrex9rFKf55kEIxjNqcG5yObq:pUOSj7+icPH+hPz+K0Cx9rFKf7ryNqc"
  },
  "intent": {
    "intentions": 4,
    "uniq_apis_matched": 4,
    "results": [
      {
        "intent": "Can Create/Manipulate The Windows Registry",
        "tag": "Expert Input:IBO.0008 - Create/Manipulate The Windows Registry",
        "component": "Registry",
        "inputs": 33,
        "matches": 1,
        "apis": [
          "RegOpenKeyExW"
        ]
      },
      {
        "intent": "Queries And Discovers Windows Registry Configuration Settings",
        "tag": "Discovery:T1012 - Query Registry",
        "component": "Registry",
        "inputs": 11,
        "matches": 1,
        "apis": [
          "RegQueryValueExW"
        ]
      },
      {
        "intent": "Can Access And Read Windows Tokens",
        "tag": "Expert Input:IBO.00020 - Windows Token Access",
        "component": "Privileges",
        "inputs": 4,
        "matches": 1,
        "apis": [
          "OpenProcessToken"
        ]
      },
      {
        "intent": "Can Be Invoked With CommandLine Arguments From a Console/Terminal",
        "tag": "Expert Input:IBO.0001 - Accepts CommandLine Arguments",
        "component": "Processes",
        "inputs": 3,
        "matches": 1,
        "apis": [
          "__getmainargs"
        ]
      }
    ]
  }
}