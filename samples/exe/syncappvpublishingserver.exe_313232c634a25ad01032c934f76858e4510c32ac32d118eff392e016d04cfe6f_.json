{
  "name": "syncappvpublishingserver.exe",
  "path": "\\\\?\\C:\\Windows\\System32\\SyncAppvPublishingServer.exe",
  "size": 38728,
  "is_64": true,
  "is_lib": false,
  "is_dotnet": false,
  "has_imports": true,
  "has_exports": false,
  "subsystem": 2,
  "subsystem_caption": "The Windows Graphical User Interface (GUI) Subsystem",
  "libs": [
    "api-ms-win-crt-private-l1-1-0.dll",
    "api-ms-win-crt-runtime-l1-1-0.dll",
    "api-ms-win-crt-string-l1-1-0.dll",
    "kernel32.dll",
    "ntdll.dll",
    "ole32.dll",
    "shell32.dll",
    "user32.dll"
  ],
  "imports": [
    {
      "lib": "shell32.dll",
      "count": 1,
      "functions": [
        "CommandLineToArgvW"
      ]
    },
    {
      "lib": "api-ms-win-crt-runtime-l1-1-0.dll",
      "count": 4,
      "functions": [
        "_c_exit",
        "_initterm",
        "_initterm_e",
        "_register_thread_local_exe_atexit_callback"
      ]
    },
    {
      "lib": "api-ms-win-crt-private-l1-1-0.dll",
      "count": 30,
      "functions": [
        "_CxxThrowException",
        "__C_specific_handler",
        "__CxxFrameHandler4",
        "_o___p__commode",
        "_o___std_exception_copy",
        "_o___std_exception_destroy",
        "_o___stdio_common_vsnprintf_s",
        "_o___stdio_common_vswprintf",
        "_o__cexit",
        "_o__configthreadlocale",
        "_o__configure_wide_argv",
        "_o__crt_atexit",
        "_o__errno",
        "_o__exit",
        "_o__get_wide_winmain_command_line",
        "_o__initialize_onexit_table",
        "_o__initialize_wide_environment",
        "_o__invalid_parameter_noinfo",
        "_o__register_onexit_function",
        "_o__seh_filter_exe",
        "_o__set_app_type",
        "_o__set_fmode",
        "_o__set_new_mode",
        "_o__wcsicmp",
        "_o__wtoi",
        "_o_exit",
        "_o_free",
        "_o_isdigit",
        "_o_terminate",
        "memcpy"
      ]
    },
    {
      "lib": "ntdll.dll",
      "count": 3,
      "functions": [
        "RtlCaptureContext",
        "RtlLookupFunctionEntry",
        "RtlVirtualUnwind"
      ]
    },
    {
      "lib": "kernel32.dll",
      "count": 33,
      "functions": [
        "CloseHandle",
        "CreateMutexExW",
        "CreateSemaphoreExW",
        "DebugBreak",
        "FormatMessageW",
        "GetConsoleWindow",
        "GetCurrentProcess",
        "GetCurrentProcessId",
        "GetCurrentThreadId",
        "GetLastError",
        "GetModuleFileNameA",
        "GetModuleHandleExW",
        "GetModuleHandleW",
        "GetProcAddress",
        "GetProcessHeap",
        "GetStartupInfoW",
        "GetSystemTimeAsFileTime",
        "HeapAlloc",
        "HeapFree",
        "InitializeSListHead",
        "IsDebuggerPresent",
        "IsProcessorFeaturePresent",
        "OpenSemaphoreW",
        "OutputDebugStringW",
        "QueryPerformanceCounter",
        "ReleaseMutex",
        "ReleaseSemaphore",
        "SetLastError",
        "SetUnhandledExceptionFilter",
        "TerminateProcess",
        "UnhandledExceptionFilter",
        "WaitForSingleObject",
        "WaitForSingleObjectEx"
      ]
    },
    {
      "lib": "api-ms-win-crt-string-l1-1-0.dll",
      "count": 1,
      "functions": [
        "memset"
      ]
    },
    {
      "lib": "ole32.dll",
      "count": 4,
      "functions": [
        "CoCreateInstance",
        "CoInitialize",
        "CoSetProxyBlanket",
        "CoUninitialize"
      ]
    },
    {
      "lib": "user32.dll",
      "count": 1,
      "functions": [
        "ShowWindow"
      ]
    }
  ],
  "hashes": {
    "sha2": "313232c634a25ad01032c934f76858e4510c32ac32d118eff392e016d04cfe6f",
    "ssdeep": "768:d6FyyphiE9jr4jwmp3PwysQdwRCuKs27Y9U1PY88z:d6t9jrN8P3sQOCwSmkPY8m"
  },
  "intent": {
    "intentions": 1,
    "uniq_apis_matched": 1,
    "results": [
      {
        "intent": "Has Ability To Be Invoked With CommandLine Arguments From a Console/Terminal",
        "tag": "Expert Input:IBO.0001 - Accepts CommandLine Arguments",
        "component": "Processes",
        "inputs": 3,
        "matches": 1,
        "apis": [
          "CommandLineToArgvW"
        ]
      }
    ]
  }
}