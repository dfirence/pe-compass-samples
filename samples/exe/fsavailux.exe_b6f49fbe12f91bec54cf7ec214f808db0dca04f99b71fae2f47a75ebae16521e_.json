{
  "name": "fsavailux.exe",
  "path": "\\\\?\\C:\\Windows\\System32\\fsavailux.exe",
  "size": 17408,
  "is_64": true,
  "is_lib": false,
  "is_dotnet": false,
  "has_imports": true,
  "has_exports": false,
  "subsystem": 2,
  "subsystem_caption": "The Windows Graphical User Interface (GUI) Subsystem",
  "libs": [
    "advapi32.dll",
    "api-ms-win-core-com-l1-1-0.dll",
    "comctl32.dll",
    "ifsutil.dll",
    "kernel32.dll",
    "msvcrt.dll",
    "ntdll.dll",
    "ulib.dll",
    "user32.dll"
  ],
  "imports": [
    {
      "lib": "msvcrt.dll",
      "count": 17,
      "functions": [
        "?terminate@@YAXXZ",
        "_XcptFilter",
        "__C_specific_handler",
        "__set_app_type",
        "__setusermatherr",
        "__wgetmainargs",
        "_amsg_exit",
        "_cexit",
        "_commode",
        "_exit",
        "_fmode",
        "_initterm",
        "_wcmdln",
        "exit",
        "free",
        "memset",
        "realloc"
      ]
    },
    {
      "lib": "kernel32.dll",
      "count": 19,
      "functions": [
        "CloseHandle",
        "CreateFileW",
        "DeviceIoControl",
        "FreeLibrary",
        "GetCurrentProcess",
        "GetCurrentProcessId",
        "GetCurrentThreadId",
        "GetLastError",
        "GetModuleHandleW",
        "GetProcAddress",
        "GetStartupInfoW",
        "GetSystemTimeAsFileTime",
        "GetTickCount",
        "LoadLibraryW",
        "QueryPerformanceCounter",
        "SetUnhandledExceptionFilter",
        "Sleep",
        "TerminateProcess",
        "UnhandledExceptionFilter"
      ]
    },
    {
      "lib": "ifsutil.dll",
      "count": 2,
      "functions": [
        "?IsEntryPresent@AUTOREG@@SAEPEBVWSTRING@@@Z",
        "?PushEntry@AUTOREG@@SAEPEBVWSTRING@@@Z"
      ]
    },
    {
      "lib": "comctl32.dll",
      "count": 1,
      "functions": [
        "ORDINAL 345"
      ]
    },
    {
      "lib": "user32.dll",
      "count": 1,
      "functions": [
        "ExitWindowsEx"
      ]
    },
    {
      "lib": "ulib.dll",
      "count": 23,
      "functions": [
        "??0ARGUMENT_LEXEMIZER@@QEAA@XZ",
        "??0ARRAY@@QEAA@XZ",
        "??0DSTRING@@QEAA@XZ",
        "??0FLAG_ARGUMENT@@QEAA@XZ",
        "??0STRING_ARGUMENT@@QEAA@XZ",
        "??1ARGUMENT_LEXEMIZER@@UEAA@XZ",
        "??1ARRAY@@UEAA@XZ",
        "??1DSTRING@@UEAA@XZ",
        "??1OBJECT@@UEAA@XZ",
        "??1STRING_ARGUMENT@@UEAA@XZ",
        "?DoParsing@ARGUMENT_LEXEMIZER@@QEAAEPEAVARRAY@@@Z",
        "?Initialize@ARGUMENT_LEXEMIZER@@QEAAEPEAVARRAY@@@Z",
        "?Initialize@ARRAY@@QEAAEKK@Z",
        "?Initialize@FLAG_ARGUMENT@@QEAAEPEAD@Z",
        "?Initialize@STRING_ARGUMENT@@QEAAEPEAD@Z",
        "?Initialize@WSTRING@@QEAAEPEBDK@Z",
        "?IsValueSet@ARGUMENT@@QEAAEXZ",
        "?PrepareToParse@ARGUMENT_LEXEMIZER@@QEAAEPEAVWSTRING@@@Z",
        "?Put@ARRAY@@UEAAEPEAVOBJECT@@@Z",
        "?PutSeparators@ARGUMENT_LEXEMIZER@@QEAAXPEBD@Z",
        "?PutSwitches@ARGUMENT_LEXEMIZER@@QEAAXPEBD@Z",
        "?SetCaseSensitive@ARGUMENT_LEXEMIZER@@QEAAXE@Z",
        "?Strcat@WSTRING@@QEAAEPEBG@Z"
      ]
    },
    {
      "lib": "api-ms-win-core-com-l1-1-0.dll",
      "count": 1,
      "functions": [
        "CoInitializeEx"
      ]
    },
    {
      "lib": "advapi32.dll",
      "count": 3,
      "functions": [
        "AdjustTokenPrivileges",
        "LookupPrivilegeValueW",
        "OpenProcessToken"
      ]
    },
    {
      "lib": "ntdll.dll",
      "count": 3,
      "functions": [
        "RtlCaptureContext",
        "RtlLookupFunctionEntry",
        "RtlVirtualUnwind"
      ]
    }
  ],
  "hashes": {
    "sha2": "b6f49fbe12f91bec54cf7ec214f808db0dca04f99b71fae2f47a75ebae16521e",
    "ssdeep": "384:YvcJm6/P7HHt8Bp6PVCK1ub9Sj1RWgmWW:hJ3/P7ntgp6tOm1G"
  },
  "intent": {
    "intentions": 4,
    "uniq_apis_matched": 4,
    "results": [
      {
        "intent": "Can Terminate Processes On The Target System",
        "tag": "Expert Input:IBO.0025",
        "component": "Processes",
        "inputs": 1,
        "matches": 1,
        "apis": [
          "TerminateProcess"
        ]
      },
      {
        "intent": "Can Access And Read Windows Tokens",
        "tag": "Expert Input:IBO.0020 - Windows Token Access",
        "component": "Privileges",
        "inputs": 4,
        "matches": 1,
        "apis": [
          "OpenProcessToken"
        ]
      },
      {
        "intent": "Can Be Invoked With CommandLine Arguments From a Console/Terminal",
        "tag": "Expert Input:IBO.001 - Accepts CommandLine Arguments",
        "component": "Processes",
        "inputs": 3,
        "matches": 1,
        "apis": [
          "__wgetmainargs"
        ]
      },
      {
        "intent": "Manipulates Windows Tokens",
        "tag": "Defense Evasion:T1134 - Access Token Manipulation",
        "component": "Privileges",
        "inputs": 4,
        "matches": 1,
        "apis": [
          "AdjustTokenPrivileges"
        ]
      }
    ]
  }
}