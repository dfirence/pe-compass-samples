{
  "name": "imecfmui.exe",
  "path": "\\\\?\\C:\\Windows\\System32\\IME\\SHARED\\imecfmui.exe",
  "size": 315904,
  "is_64": true,
  "is_lib": false,
  "is_dotnet": false,
  "has_imports": true,
  "has_exports": false,
  "subsystem": 2,
  "subsystem_caption": "The Windows Graphical User Interface (GUI) Subsystem",
  "libs": [
    "advapi32.dll",
    "gdi32.dll",
    "kernel32.dll",
    "msvcrt.dll",
    "ole32.dll",
    "oleaut32.dll",
    "shell32.dll",
    "user32.dll",
    "wer.dll"
  ],
  "imports": [
    {
      "lib": "ole32.dll",
      "count": 2,
      "functions": [
        "CoCreateInstance",
        "CoInitialize"
      ]
    },
    {
      "lib": "wer.dll",
      "count": 5,
      "functions": [
        "WerReportAddFile",
        "WerReportCloseHandle",
        "WerReportCreate",
        "WerReportSetParameter",
        "WerReportSubmit"
      ]
    },
    {
      "lib": "gdi32.dll",
      "count": 6,
      "functions": [
        "CreateFontIndirectW",
        "GetDeviceCaps",
        "GetObjectW",
        "GetStockObject",
        "GetTextExtentPoint32W",
        "SelectObject"
      ]
    },
    {
      "lib": "shell32.dll",
      "count": 3,
      "functions": [
        "SHGetFolderPathW",
        "ShellExecuteW",
        "Shell_NotifyIconW"
      ]
    },
    {
      "lib": "msvcrt.dll",
      "count": 69,
      "functions": [
        "??0bad_cast@@QEAA@AEBV0@@Z",
        "??0bad_cast@@QEAA@PEBD@Z",
        "??0exception@@QEAA@AEBQEBD@Z",
        "??0exception@@QEAA@AEBQEBDH@Z",
        "??0exception@@QEAA@AEBV0@@Z",
        "??0exception@@QEAA@XZ",
        "??1bad_cast@@UEAA@XZ",
        "??1exception@@UEAA@XZ",
        "??1type_info@@UEAA@XZ",
        "??3@YAXPEAX@Z",
        "??_V@YAXPEAX@Z",
        "?terminate@@YAXXZ",
        "?what@exception@@UEBAPEBDXZ",
        "_CxxThrowException",
        "_XcptFilter",
        "__C_specific_handler",
        "__CxxFrameHandler3",
        "___lc_codepage_func",
        "___lc_collate_cp_func",
        "___lc_handle_func",
        "___mb_cur_max_func",
        "__crtCompareStringW",
        "__crtLCMapStringW",
        "__dllonexit",
        "__pctype_func",
        "__set_app_type",
        "__setusermatherr",
        "__wgetmainargs",
        "_amsg_exit",
        "_callnewh",
        "_cexit",
        "_commode",
        "_errno",
        "_exit",
        "_fmode",
        "_initterm",
        "_ismbblead",
        "_lock",
        "_onexit",
        "_purecall",
        "_unlock",
        "_vsnprintf_s",
        "_vsnwprintf",
        "_vsnwprintf_s",
        "_wcmdln",
        "_wcsdup",
        "_wcsicmp",
        "_wcstoi64",
        "_wsetlocale",
        "_wtoi",
        "abort",
        "calloc",
        "exit",
        "free",
        "malloc",
        "memcmp",
        "memcpy",
        "memcpy_s",
        "memmove",
        "memmove_s",
        "memset",
        "realloc",
        "setlocale",
        "strchr",
        "wcschr",
        "wcscmp",
        "wcsncat_s",
        "wcsncpy_s",
        "wcsnlen"
      ]
    },
    {
      "lib": "oleaut32.dll",
      "count": 3,
      "functions": [
        "ORDINAL 2",
        "ORDINAL 6",
        "ORDINAL 9"
      ]
    },
    {
      "lib": "kernel32.dll",
      "count": 77,
      "functions": [
        "AcquireSRWLockExclusive",
        "AcquireSRWLockShared",
        "CloseHandle",
        "CloseThreadpoolTimer",
        "CompareStringW",
        "CreateFileW",
        "CreateMutexExW",
        "CreateSemaphoreExW",
        "CreateThreadpoolTimer",
        "DebugBreak",
        "DecodePointer",
        "DelayLoadFailureHook",
        "DeleteCriticalSection",
        "DeleteFileW",
        "EncodePointer",
        "EnterCriticalSection",
        "ExpandEnvironmentStringsW",
        "FindClose",
        "FindFirstFileW",
        "FindNextFileW",
        "FindResourceExW",
        "FormatMessageW",
        "FreeLibrary",
        "GetCurrentProcess",
        "GetCurrentProcessId",
        "GetCurrentThreadId",
        "GetLastError",
        "GetModuleFileNameA",
        "GetModuleHandleExW",
        "GetModuleHandleW",
        "GetProcAddress",
        "GetProcessHeap",
        "GetStartupInfoW",
        "GetStringTypeW",
        "GetSystemTimeAsFileTime",
        "GetTempPathW",
        "GetTickCount",
        "GetVersionExW",
        "HeapAlloc",
        "HeapFree",
        "InitOnceBeginInitialize",
        "InitOnceComplete",
        "InitializeCriticalSectionEx",
        "IsDebuggerPresent",
        "LeaveCriticalSection",
        "LoadLibraryExW",
        "LoadResource",
        "LocalAlloc",
        "LocalFree",
        "LockResource",
        "MultiByteToWideChar",
        "OpenSemaphoreW",
        "OutputDebugStringW",
        "QueryPerformanceCounter",
        "ReleaseMutex",
        "ReleaseSRWLockExclusive",
        "ReleaseSRWLockShared",
        "ReleaseSemaphore",
        "ResolveDelayLoadedAPI",
        "RtlCaptureContext",
        "RtlLookupFunctionEntry",
        "RtlVirtualUnwind",
        "SetLastError",
        "SetThreadpoolTimer",
        "SetUnhandledExceptionFilter",
        "Sleep",
        "SleepConditionVariableSRW",
        "TerminateProcess",
        "UnhandledExceptionFilter",
        "VerSetConditionMask",
        "VerifyVersionInfoW",
        "WaitForSingleObject",
        "WaitForSingleObjectEx",
        "WaitForThreadpoolTimerCallbacks",
        "WakeAllConditionVariable",
        "WideCharToMultiByte",
        "WriteFile"
      ]
    },
    {
      "lib": "user32.dll",
      "count": 60,
      "functions": [
        "AllowSetForegroundWindow",
        "CheckDlgButton",
        "CreateDialogIndirectParamW",
        "CreateWindowExW",
        "DefWindowProcW",
        "DestroyIcon",
        "DestroyMenu",
        "DestroyWindow",
        "DialogBoxIndirectParamW",
        "DispatchMessageW",
        "DrawEdge",
        "DrawStateW",
        "EnableWindow",
        "EndDialog",
        "EnumWindows",
        "GetClassInfoExW",
        "GetClassNameW",
        "GetClientRect",
        "GetCursor",
        "GetCursorPos",
        "GetDC",
        "GetDlgItem",
        "GetDlgItemTextW",
        "GetKeyState",
        "GetLastActivePopup",
        "GetMessageW",
        "GetSubMenu",
        "GetSystemMetrics",
        "GetWindowLongPtrW",
        "GetWindowLongW",
        "GetWindowRect",
        "GetWindowTextW",
        "GetWindowThreadProcessId",
        "InvalidateRect",
        "IsDialogMessageW",
        "LoadCursorW",
        "LoadImageW",
        "LoadMenuIndirectW",
        "MapDialogRect",
        "MapWindowPoints",
        "MessageBoxW",
        "PostMessageW",
        "PostQuitMessage",
        "RegisterClassExW",
        "RegisterWindowMessageW",
        "ReleaseDC",
        "SendDlgItemMessageW",
        "SendMessageW",
        "SetCursor",
        "SetDlgItemTextW",
        "SetForegroundWindow",
        "SetProcessDPIAware",
        "SetWindowLongPtrW",
        "SetWindowPos",
        "SetWindowTextW",
        "ShowWindow",
        "TrackPopupMenuEx",
        "TranslateMessage",
        "UnregisterClassW",
        "UpdateWindow"
      ]
    },
    {
      "lib": "advapi32.dll",
      "count": 19,
      "functions": [
        "CheckTokenMembership",
        "ConvertSidToStringSidW",
        "CreateWellKnownSid",
        "EventRegister",
        "EventSetInformation",
        "EventUnregister",
        "EventWriteTransfer",
        "GetSidSubAuthority",
        "GetSidSubAuthorityCount",
        "GetTokenInformation",
        "IsValidSid",
        "OpenProcessToken",
        "RegCloseKey",
        "RegCreateKeyExW",
        "RegGetValueW",
        "RegOpenCurrentUser",
        "RegOpenKeyExW",
        "RegQueryValueExW",
        "RegSetValueExW"
      ]
    }
  ],
  "hashes": {
    "sha2": "e9725ee1872c91076b6e5228c015f23bd9dd987f17d973cd6c8cbd9793bf5a8d",
    "ssdeep": "6144:+E39bx1XJjVdXirjQZnEo6Alm0l6XTZgBk8SK1A:79bbt6r8a9Alm0dS"
  },
  "intent": {
    "intentions": 9,
    "uniq_apis_matched": 15,
    "results": [
      {
        "intent": "Can Execute or Spawn New Processes On The Target System",
        "tag": "Expert Input:IBO.002 - Spawn New Process",
        "component": "Processes",
        "inputs": 7,
        "matches": 1,
        "apis": [
          "ShellExecuteW"
        ]
      },
      {
        "intent": "Can Delay Loading of DLLs Until Runtime/Process Execution",
        "tag": "Expert Input:IBO.005 - Load DLL Resources With Delay During Runtime",
        "component": "Memory",
        "inputs": 2,
        "matches": 2,
        "apis": [
          "DelayLoadFailureHook",
          "ResolveDelayLoadedAPI"
        ]
      },
      {
        "intent": "Enumerates Files or Directories on the Target System",
        "tag": "Discovery:T1083 - File and Directory Discovery",
        "component": "Filesystem",
        "inputs": 5,
        "matches": 1,
        "apis": [
          "FindFirstFileW"
        ]
      },
      {
        "intent": "Can Access And Read Windows Tokens",
        "tag": "Expert Input:IBO.0020 - Windows Token Access",
        "component": "Privileges",
        "inputs": 4,
        "matches": 2,
        "apis": [
          "CheckTokenMembership",
          "OpenProcessToken"
        ]
      },
      {
        "intent": "Deletes Files From Disk Potentially Erasing Important Evidence To Cover Attack Activity",
        "tag": "Defense Evasion:T1070.004 - File Deletion",
        "component": "Filesystem",
        "inputs": 2,
        "matches": 1,
        "apis": [
          "DeleteFileW"
        ]
      },
      {
        "intent": "Can Create/Manipulate The Windows Registry",
        "tag": "Expert Input:IBO.008 - Create/Manipulate The Windows Registry",
        "component": "Registry",
        "inputs": 33,
        "matches": 4,
        "apis": [
          "RegCreateKeyExW",
          "RegOpenCurrentUser",
          "RegOpenKeyExW",
          "RegSetValueExW"
        ]
      },
      {
        "intent": "Can Terminate Processes On The Target System",
        "tag": "Expert Input:IBO.0025",
        "component": "Processes",
        "inputs": 1,
        "matches": 1,
        "apis": [
          "TerminateProcess"
        ]
      },
      {
        "intent": "Queries And Discovers Windows Registry Configuration Settings",
        "tag": "Discovery:T1012 - Query Registry",
        "component": "Registry",
        "inputs": 11,
        "matches": 2,
        "apis": [
          "RegGetValueW",
          "RegQueryValueExW"
        ]
      },
      {
        "intent": "Can Be Invoked With CommandLine Arguments From a Console/Terminal",
        "tag": "Expert Input:IBO.001 - Accepts CommandLine Arguments",
        "component": "Processes",
        "inputs": 3,
        "matches": 1,
        "apis": [
          "__wgetmainargs"
        ]
      }
    ]
  },
  "os": "win10"
}