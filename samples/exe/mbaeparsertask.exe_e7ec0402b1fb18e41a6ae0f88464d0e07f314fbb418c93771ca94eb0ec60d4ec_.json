{
  "name": "mbaeparsertask.exe",
  "path": "\\\\?\\C:\\Windows\\System32\\MbaeParserTask.exe",
  "size": 119296,
  "is_64": true,
  "is_lib": false,
  "is_dotnet": false,
  "has_imports": true,
  "has_exports": false,
  "subsystem": 3,
  "subsystem_caption": "The Windows Character (Console UI) Subsystem",
  "libs": [
    "advapi32.dll",
    "api-ms-win-core-path-l1-1-0.dll",
    "api-ms-win-devices-query-l1-1-0.dll",
    "crypt32.dll",
    "kernel32.dll",
    "mbaexmlparser.dll",
    "mobilenetworking.dll",
    "msvcrt.dll",
    "ntdll.dll",
    "ole32.dll",
    "oleaut32.dll",
    "shlwapi.dll",
    "wevtapi.dll",
    "wintrust.dll"
  ],
  "imports": [
    {
      "lib": "mbaexmlparser.dll",
      "count": 1,
      "functions": [
        "?Create@MbaeXmlParser@@SAJPEAPEAV1@@Z"
      ]
    },
    {
      "lib": "kernel32.dll",
      "count": 33,
      "functions": [
        "AcquireSRWLockExclusive",
        "CloseHandle",
        "CreateFileW",
        "ExpandEnvironmentStringsW",
        "FindClose",
        "FindFirstFileW",
        "FormatMessageW",
        "GetCurrentProcess",
        "GetCurrentProcessId",
        "GetCurrentThreadId",
        "GetFileAttributesW",
        "GetFileInformationByHandle",
        "GetFullPathNameW",
        "GetLastError",
        "GetModuleFileNameA",
        "GetModuleHandleW",
        "GetSystemTimeAsFileTime",
        "GetTickCount",
        "InitOnceExecuteOnce",
        "LocalAlloc",
        "LocalFree",
        "OutputDebugStringA",
        "QueryPerformanceCounter",
        "ReadFile",
        "ReleaseSRWLockExclusive",
        "SetFilePointerEx",
        "SetThreadPreferredUILanguages",
        "SetUnhandledExceptionFilter",
        "Sleep",
        "SleepConditionVariableSRW",
        "TerminateProcess",
        "UnhandledExceptionFilter",
        "WakeAllConditionVariable"
      ]
    },
    {
      "lib": "msvcrt.dll",
      "count": 37,
      "functions": [
        "??0exception@@QEAA@AEBQEBDH@Z",
        "??0exception@@QEAA@AEBV0@@Z",
        "??1exception@@UEAA@XZ",
        "??1type_info@@UEAA@XZ",
        "?terminate@@YAXXZ",
        "?what@exception@@UEBAPEBDXZ",
        "_CxxThrowException",
        "_XcptFilter",
        "__C_specific_handler",
        "__CxxFrameHandler3",
        "__set_app_type",
        "__setusermatherr",
        "__wgetmainargs",
        "_amsg_exit",
        "_callnewh",
        "_cexit",
        "_commode",
        "_errno",
        "_exit",
        "_fmode",
        "_initterm",
        "_purecall",
        "_vsnwprintf",
        "_wcsicmp",
        "_wcsnicmp",
        "calloc",
        "exit",
        "free",
        "isalpha",
        "malloc",
        "memcpy",
        "memcpy_s",
        "memmove",
        "memmove_s",
        "memset",
        "realloc",
        "toupper"
      ]
    },
    {
      "lib": "ole32.dll",
      "count": 8,
      "functions": [
        "CLSIDFromString",
        "CoCreateInstance",
        "CoInitializeEx",
        "CoTaskMemAlloc",
        "CoTaskMemFree",
        "CoUninitialize",
        "OleRun",
        "StringFromGUID2"
      ]
    },
    {
      "lib": "mobilenetworking.dll",
      "count": 1,
      "functions": [
        "GetPersistentRegPath"
      ]
    },
    {
      "lib": "api-ms-win-devices-query-l1-1-0.dll",
      "count": 4,
      "functions": [
        "DevFreeObjectProperties",
        "DevFreeObjects",
        "DevGetObjectProperties",
        "DevGetObjects"
      ]
    },
    {
      "lib": "oleaut32.dll",
      "count": 14,
      "functions": [
        "ORDINAL 149",
        "ORDINAL 150",
        "ORDINAL 16",
        "ORDINAL 19",
        "ORDINAL 2",
        "ORDINAL 20",
        "ORDINAL 200",
        "ORDINAL 25",
        "ORDINAL 313",
        "ORDINAL 4",
        "ORDINAL 5",
        "ORDINAL 6",
        "ORDINAL 7",
        "ORDINAL 9"
      ]
    },
    {
      "lib": "wevtapi.dll",
      "count": 5,
      "functions": [
        "EvtClose",
        "EvtCreateRenderContext",
        "EvtNext",
        "EvtQuery",
        "EvtRender"
      ]
    },
    {
      "lib": "advapi32.dll",
      "count": 19,
      "functions": [
        "AdjustTokenPrivileges",
        "EventProviderEnabled",
        "EventRegister",
        "EventSetInformation",
        "EventUnregister",
        "EventWriteTransfer",
        "GetTokenInformation",
        "GetTraceEnableFlags",
        "GetTraceEnableLevel",
        "GetTraceLoggerHandle",
        "OpenProcessToken",
        "RegCloseKey",
        "RegCreateKeyExW",
        "RegGetValueW",
        "RegOpenKeyExW",
        "RegSetValueExW",
        "RegisterTraceGuidsW",
        "TraceMessage",
        "UnregisterTraceGuids"
      ]
    },
    {
      "lib": "shlwapi.dll",
      "count": 1,
      "functions": [
        "PathFileExistsW"
      ]
    },
    {
      "lib": "api-ms-win-core-path-l1-1-0.dll",
      "count": 1,
      "functions": [
        "PathCchAppend"
      ]
    },
    {
      "lib": "ntdll.dll",
      "count": 6,
      "functions": [
        "NtQueryKey",
        "NtQuerySystemInformation",
        "RtlCaptureContext",
        "RtlLookupFunctionEntry",
        "RtlPublishWnfStateData",
        "RtlVirtualUnwind"
      ]
    },
    {
      "lib": "crypt32.dll",
      "count": 3,
      "functions": [
        "CertVerifyCertificateChainPolicy",
        "CryptProtectData",
        "CryptUnprotectData"
      ]
    },
    {
      "lib": "wintrust.dll",
      "count": 4,
      "functions": [
        "CryptCATAdminCalcHashFromFileHandle",
        "WTHelperGetProvSignerFromChain",
        "WTHelperProvDataFromStateData",
        "WinVerifyTrustEx"
      ]
    }
  ],
  "hashes": {
    "sha2": "e7ec0402b1fb18e41a6ae0f88464d0e07f314fbb418c93771ca94eb0ec60d4ec",
    "ssdeep": "3072:bvedGi1Cmn8lDj0CUuE2u9RkPhE85H13dTGR:bve42CNDIfF2ub0Fld"
  },
  "intent": {
    "intentions": 6,
    "uniq_apis_matched": 8,
    "results": [
      {
        "intent": "Manipulates Windows Tokens",
        "tag": "Defense Evasion:T1134 - Access Token Manipulation",
        "component": "Privileges",
        "inputs": 4,
        "matches": 1,
        "apis": [
          "AdjustTokenPrivileges"
        ]
      },
      {
        "intent": "Enumerates Files or Directories on the Target System",
        "tag": "Discovery:T1083 - File and Directory Discovery",
        "component": "Filesystem",
        "inputs": 5,
        "matches": 1,
        "apis": [
          "FindFirstFileW"
        ]
      },
      {
        "intent": "Can Be Invoked With CommandLine Arguments From a Console/Terminal",
        "tag": "Expert Input:IBO.0001 - Accepts CommandLine Arguments",
        "component": "Processes",
        "inputs": 3,
        "matches": 1,
        "apis": [
          "__wgetmainargs"
        ]
      },
      {
        "intent": "Queries And Discovers Windows Registry Configuration Settings",
        "tag": "Discovery:T1012 - Query Registry",
        "component": "Registry",
        "inputs": 11,
        "matches": 1,
        "apis": [
          "RegGetValueW"
        ]
      },
      {
        "intent": "Can Create/Manipulate The Windows Registry",
        "tag": "Expert Input:IBO.0008 - Create/Manipulate The Windows Registry",
        "component": "Registry",
        "inputs": 33,
        "matches": 3,
        "apis": [
          "RegCreateKeyExW",
          "RegOpenKeyExW",
          "RegSetValueExW"
        ]
      },
      {
        "intent": "Can Access And Read Windows Tokens",
        "tag": "Expert Input:IBO.00020 - Windows Token Access",
        "component": "Privileges",
        "inputs": 4,
        "matches": 1,
        "apis": [
          "OpenProcessToken"
        ]
      }
    ]
  }
}