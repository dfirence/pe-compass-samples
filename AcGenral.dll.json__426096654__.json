{
  "pe_name": "AcGenral.dll",
  "pe_type": 267,
  "pe_size": 2431488,
  "pe_subsystem": 3,
  "pe_subsystem_caption": "The Windows character (Cosole UI) subsystem",
  "pe_path": "c:\\Windows\\WinSxS\\wow64_microsoft-windows-a..ence-mitigations-c3_31bf3856ad364e35_10.0.19041.1620_none_8b0ffe6ddc002741\\AcGenral.dll",
  "pe_timedate_stamp": 1722401991,
  "pe_timedate_human": "2024-07-31T04:59:51.000Z",
  "ImageDLLImports": [
    {
      "name": "apphelp.dll",
      "imports": 17,
      "functions": [
        "SE_CALLBACK_AddHook",
        "SE_CALLBACK_Lookup",
        "SE_COM_AddHook",
        "SE_COM_AddServer",
        "SE_COM_HookInterface",
        "SE_COM_HookObject",
        "SE_COM_Lookup",
        "SE_GetShimId",
        "SE_ShimDPF",
        "SdbFindFirstTag",
        "SdbFindNextTag",
        "SdbGetPDBFromGUID",
        "SdbGetStringTagPtr",
        "SdbInitDatabase",
        "SdbOpenLocalDatabase",
        "SdbReleaseDatabase",
        "SdbResolveDatabase"
      ]
    },
    {
      "name": "msvcrt.dll",
      "imports": 68,
      "functions": [
        "??0exception@@QAE@ABV0@@Z",
        "??0exception@@QAE@XZ",
        "??1exception@@UAE@XZ",
        "??1type_info@@UAE@XZ",
        "?terminate@@YAXXZ",
        "_CxxThrowException",
        "_XcptFilter",
        "__CxxFrameHandler3",
        "__dllonexit",
        "_amsg_exit",
        "_errno",
        "_except_handler4_common",
        "_initterm",
        "_local_unwind4",
        "_lock",
        "_onexit",
        "_purecall",
        "_stricmp",
        "_strnicmp",
        "_tempnam",
        "_unlock",
        "_vscprintf",
        "_vscwprintf",
        "_vsnprintf",
        "_vsnprintf_s",
        "_vsnwprintf",
        "_wcsicmp",
        "_wcslwr",
        "_wcslwr_s",
        "_wcsnicmp",
        "_wcsupr",
        "_wsplitpath_s",
        "_wtoi",
        "atoi",
        "atol",
        "free",
        "iswctype",
        "iswspace",
        "malloc",
        "memcmp",
        "memcpy",
        "memcpy_s",
        "memmove",
        "memmove_s",
        "memset",
        "qsort",
        "strchr",
        "strncmp",
        "strrchr",
        "strstr",
        "strtok",
        "strtoul",
        "swscanf_s",
        "toupper",
        "towlower",
        "towupper",
        "wcscat_s",
        "wcschr",
        "wcscpy_s",
        "wcsncmp",
        "wcspbrk",
        "wcsrchr",
        "wcsspn",
        "wcsstr",
        "wcstok_s",
        "wcstol",
        "wcstoul",
        "wprintf"
      ]
    },
    {
      "name": "ntdll.dll",
      "imports": 47,
      "functions": [
        "DbgPrint",
        "NtClose",
        "NtConnectPort",
        "NtCreateKey",
        "NtOpenFile",
        "NtOpenKey",
        "NtOpenProcessToken",
        "NtOpenThreadToken",
        "NtProtectVirtualMemory",
        "NtQueryInformationProcess",
        "NtQueryInformationThread",
        "NtQueryInformationToken",
        "NtQueryObject",
        "NtQuerySecurityObject",
        "NtQueryValueKey",
        "NtQueryVirtualMemory",
        "NtQueryVolumeInformationFile",
        "NtRequestWaitReplyPort",
        "NtSetInformationProcess",
        "NtSetValueKey",
        "RtlAllocateHeap",
        "RtlAnsiStringToUnicodeString",
        "RtlCreateServiceSid",
        "RtlDosPathNameToNtPathName_U",
        "RtlEqualSid",
        "RtlFormatCurrentUserKeyPath",
        "RtlFreeHeap",
        "RtlFreeUnicodeString",
        "RtlGUIDFromString",
        "RtlGetDaclSecurityDescriptor",
        "RtlGetNtSystemRoot",
        "RtlGetOwnerSecurityDescriptor",
        "RtlIdentifierAuthoritySid",
        "RtlImageNtHeader",
        "RtlInitAnsiString",
        "RtlInitUnicodeString",
        "RtlInitializeCriticalSection",
        "RtlInitializeSid",
        "RtlIsDosDeviceName_U",
        "RtlIsNameInExpression",
        "RtlLengthRequiredSid",
        "RtlNtStatusToDosError",
        "RtlOemStringToUnicodeString",
        "RtlReAllocateHeap",
        "RtlSubAuthorityCountSid",
        "RtlSubAuthoritySid",
        "RtlUnicodeStringToInteger"
      ]
    },
    {
      "name": "api-ms-win-service-core-l1-1-1.dll",
      "imports": 1,
      "functions": [
        "EnumDependentServicesW"
      ]
    },
    {
      "name": "api-ms-win-service-winsvc-l1-1-0.dll",
      "imports": 1,
      "functions": [
        "ControlService"
      ]
    },
    {
      "name": "api-ms-win-service-management-l1-1-0.dll",
      "imports": 6,
      "functions": [
        "CloseServiceHandle",
        "CreateServiceW",
        "DeleteService",
        "OpenSCManagerW",
        "OpenServiceW",
        "StartServiceW"
      ]
    },
    {
      "name": "api-ms-win-service-management-l2-1-0.dll",
      "imports": 2,
      "functions": [
        "ChangeServiceConfigW",
        "QueryServiceStatusEx"
      ]
    },
    {
      "name": "api-ms-win-eventing-provider-l1-1-0.dll",
      "imports": 1,
      "functions": [
        "EventWriteTransfer"
      ]
    },
    {
      "name": "shlwapi.dll",
      "imports": 2,
      "functions": [
        "SHDeleteKeyW",
        "SHGetValueW"
      ]
    },
    {
      "name": "uxtheme.dll",
      "imports": 1,
      "functions": [
        "SetThemeAppProperties"
      ]
    },
    {
      "name": "user32.dll",
      "imports": 80,
      "functions": [
        "AllowSetForegroundWindow",
        "CallNextHookEx",
        "CallWindowProcA",
        "ChangeDisplaySettingsA",
        "ChangeWindowMessageFilterEx",
        "CharNextA",
        "CharUpperW",
        "CloseDesktop",
        "CopyIcon",
        "CreateIconIndirect",
        "DefWindowProcA",
        "DestroyCursor",
        "DestroyIcon",
        "DispatchMessageW",
        "EmptyClipboard",
        "EnumDesktopWindows",
        "EnumDisplayDevicesW",
        "EnumDisplaySettingsA",
        "EnumDisplaySettingsW",
        "GetActiveWindow",
        "GetAncestor",
        "GetClassNameW",
        "GetClientRect",
        "GetDC",
        "GetDesktopWindow",
        "GetForegroundWindow",
        "GetGUIThreadInfo",
        "GetIconInfo",
        "GetKeyState",
        "GetMessageW",
        "GetMonitorInfoW",
        "GetParent",
        "GetPropW",
        "GetShellWindow",
        "GetSystemMetrics",
        "GetUpdateRgn",
        "GetWindow",
        "GetWindowInfo",
        "GetWindowLongA",
        "GetWindowLongW",
        "GetWindowRect",
        "GetWindowTextA",
        "GetWindowTextLengthA",
        "GetWindowThreadProcessId",
        "InvalidateRect",
        "IsCharAlphaA",
        "IsChild",
        "IsWindow",
        "IsWindowVisible",
        "LoadCursorW",
        "MonitorFromRect",
        "MsgWaitForMultipleObjects",
        "OpenInputDesktop",
        "PeekMessageW",
        "PostMessageW",
        "PostQuitMessage",
        "RegisterSuspendResumeNotification",
        "RegisterWindowMessageA",
        "ReleaseDC",
        "RemovePropW",
        "ScreenToClient",
        "SendMessageW",
        "SetCursor",
        "SetDlgItemTextA",
        "SetForegroundWindow",
        "SetPropW",
        "SetRect",
        "SetSystemCursor",
        "SetThreadDesktop",
        "SetWindowPos",
        "SetWindowsHookExA",
        "SetWindowsHookExAW",
        "ShowCursor",
        "ShowWindow",
        "SystemParametersInfoA",
        "SystemParametersInfoW",
        "TranslateMessage",
        "WindowFromDC",
        "mouse_event",
        "wvsprintfA"
      ]
    },
    {
      "name": "gdi32.dll",
      "imports": 23,
      "functions": [
        "BitBlt",
        "CombineRgn",
        "CreateCompatibleDC",
        "CreateDCW",
        "CreateDIBSection",
        "CreatePalette",
        "CreateRectRgn",
        "CreateRectRgnIndirect",
        "DeleteDC",
        "DeleteObject",
        "GetClipBox",
        "GetCurrentObject",
        "GetDeviceCaps",
        "GetObjectW",
        "GetPaletteEntries",
        "GetRgnBox",
        "GetStockObject",
        "RealizePalette",
        "SelectObject",
        "SelectPalette",
        "SetRectRgn",
        "SetSystemPaletteUse",
        "SetViewportOrgEx"
      ]
    },
    {
      "name": "winmm.dll",
      "imports": 0,
      "functions": []
    },
    {
      "name": "samcli.dll",
      "imports": 2,
      "functions": [
        "NetLocalGroupAdd",
        "NetLocalGroupAddMembers"
      ]
    },
    {
      "name": "ole32.dll",
      "imports": 7,
      "functions": [
        "CoCreateInstance",
        "CoGetObject",
        "CoInitialize",
        "CoTaskMemFree",
        "CoUninitialize",
        "StringFromCLSID",
        "StringFromGUID2"
      ]
    },
    {
      "name": "oleaut32.dll",
      "imports": 0,
      "functions": []
    },
    {
      "name": "msacm32.dll",
      "imports": 1,
      "functions": [
        "acmStreamOpen"
      ]
    },
    {
      "name": "version.dll",
      "imports": 4,
      "functions": [
        "GetFileVersionInfoExW",
        "GetFileVersionInfoSizeW",
        "GetFileVersionInfoW",
        "VerQueryValueW"
      ]
    },
    {
      "name": "shell32.dll",
      "imports": 8,
      "functions": [
        "SHChangeNotify",
        "SHCreateDirectoryExW",
        "SHGetFolderPathEx",
        "SHGetFolderPathW",
        "SHGetSpecialFolderPathA",
        "SHGetSpecialFolderPathW",
        "ShellExecuteExA",
        "ShellExecuteExW"
      ]
    },
    {
      "name": "userenv.dll",
      "imports": 2,
      "functions": [
        "GetAllUsersProfileDirectoryW",
        "GetUserProfileDirectoryA"
      ]
    },
    {
      "name": "dwmapi.dll",
      "imports": 1,
      "functions": [
        "DwmIsCompositionEnabled"
      ]
    },
    {
      "name": "urlmon.dll",
      "imports": 1,
      "functions": [
        "CoInternetSetFeatureEnabled"
      ]
    },
    {
      "name": "kernel32.dll",
      "imports": 201,
      "functions": [
        "AcquireSRWLockExclusive",
        "AcquireSRWLockShared",
        "AddDllDirectory",
        "CheckElevationEnabled",
        "CloseHandle",
        "CloseThreadpoolTimer",
        "CompareStringA",
        "CompareStringEx",
        "CompareStringOrdinal",
        "CompareStringW",
        "CopyFileA",
        "CopyFileW",
        "CreateActCtxW",
        "CreateEventW",
        "CreateFileA",
        "CreateFileMappingA",
        "CreateFileMappingW",
        "CreateFileW",
        "CreateMutexExW",
        "CreateMutexW",
        "CreateProcessA",
        "CreateProcessW",
        "CreateSemaphoreExW",
        "CreateThread",
        "CreateThreadpoolTimer",
        "CreateToolhelp32Snapshot",
        "DebugBreak",
        "DelayLoadFailureHook",
        "DeleteCriticalSection",
        "DeleteFileA",
        "DeleteFileW",
        "DeviceIoControl",
        "DuplicateHandle",
        "EnterCriticalSection",
        "ExitProcess",
        "ExpandEnvironmentStringsW",
        "FindClose",
        "FindFirstFileW",
        "FindNLSStringEx",
        "FindNextFileA",
        "FindNextFileW",
        "FindResourceA",
        "FindResourceW",
        "FlushFileBuffers",
        "FormatMessageW",
        "FreeEnvironmentStringsW",
        "FreeLibrary",
        "FreeResource",
        "GetBinaryTypeW",
        "GetCommandLineA",
        "GetCommandLineW",
        "GetCurrentDirectoryW",
        "GetCurrentProcess",
        "GetCurrentProcessId",
        "GetCurrentProcessorNumberEx",
        "GetCurrentThread",
        "GetCurrentThreadId",
        "GetDiskFreeSpaceExA",
        "GetDiskFreeSpaceExW",
        "GetDriveTypeA",
        "GetDriveTypeW",
        "GetEnvironmentStringsW",
        "GetEnvironmentVariableA",
        "GetEnvironmentVariableW",
        "GetExitCodeProcess",
        "GetFileAttributesA",
        "GetFileAttributesW",
        "GetFileSize",
        "GetFullPathNameW",
        "GetLastError",
        "GetLocaleInfoEx",
        "GetLocaleInfoW",
        "GetLogicalDrives",
        "GetLogicalProcessorInformationEx",
        "GetLongPathNameW",
        "GetModuleFileNameA",
        "GetModuleFileNameW",
        "GetModuleHandleA",
        "GetModuleHandleExW",
        "GetModuleHandleW",
        "GetPrivateProfileStringW",
        "GetProcAddress",
        "GetProcessHeap",
        "GetShortPathNameA",
        "GetShortPathNameW",
        "GetSystemDirectoryA",
        "GetSystemDirectoryW",
        "GetSystemInfo",
        "GetSystemTime",
        "GetSystemTimeAsFileTime",
        "GetSystemWindowsDirectoryW",
        "GetTempFileNameA",
        "GetTempFileNameW",
        "GetTempPathA",
        "GetTempPathW",
        "GetTickCount",
        "GetTickCount64",
        "GetUserDefaultLCID",
        "GetUserDefaultUILanguage",
        "GetVersionExW",
        "GetVolumeInformationW",
        "GetWindowsDirectoryW",
        "GlobalAlloc",
        "GlobalFree",
        "GlobalMemoryStatusEx",
        "HeapAlloc",
        "HeapFree",
        "HeapReAlloc",
        "HeapSize",
        "HeapValidate",
        "InitializeCriticalSection",
        "InitializeCriticalSectionAndSpinCount",
        "InitializeCriticalSectionEx",
        "IsBadReadPtr",
        "IsBadStringPtrA",
        "IsBadStringPtrW",
        "IsBadWritePtr",
        "IsDBCSLeadByte",
        "IsDBCSLeadByteEx",
        "IsDebuggerPresent",
        "IsNLSDefinedString",
        "IsValidLocale",
        "IsWow64Process",
        "LCIDToLocaleName",
        "LCMapStringEx",
        "LeaveCriticalSection",
        "LoadLibraryA",
        "LoadLibraryExW",
        "LoadLibraryW",
        "LoadResource",
        "LocalAlloc",
        "LocalFree",
        "LockResource",
        "MapViewOfFile",
        "Module32First",
        "MoveFileA",
        "MoveFileExW",
        "MultiByteToWideChar",
        "OpenMutexW",
        "OpenProcess",
        "OpenSemaphoreW",
        "OutputDebugStringA",
        "OutputDebugStringW",
        "ProcessIdToSessionId",
        "QueryActCtxSettingsW",
        "QueryActCtxW",
        "QueryPerformanceCounter",
        "QueryPerformanceFrequency",
        "RaiseException",
        "ReadFile",
        "ReadProcessMemory",
        "ReleaseActCtx",
        "ReleaseMutex",
        "ReleaseSRWLockExclusive",
        "ReleaseSRWLockShared",
        "ReleaseSemaphore",
        "ResetEvent",
        "ResolveDelayLoadedAPI",
        "ResumeThread",
        "SearchPathA",
        "SearchPathW",
        "SetEnvironmentVariableA",
        "SetEnvironmentVariableW",
        "SetErrorMode",
        "SetEvent",
        "SetFileAttributesA",
        "SetFileAttributesW",
        "SetLastError",
        "SetProcessAffinityMask",
        "SetProcessInformation",
        "SetThreadPriority",
        "SetThreadPriorityBoost",
        "SetThreadpoolTimer",
        "SetUnhandledExceptionFilter",
        "SizeofResource",
        "Sleep",
        "SleepConditionVariableSRW",
        "TerminateProcess",
        "UnhandledExceptionFilter",
        "UnmapViewOfFile",
        "VirtualAlloc",
        "VirtualAllocEx",
        "VirtualFree",
        "VirtualProtect",
        "VirtualQuery",
        "WaitForMultipleObjects",
        "WaitForSingleObject",
        "WaitForSingleObjectEx",
        "WaitForThreadpoolTimerCallbacks",
        "WakeAllConditionVariable",
        "WideCharToMultiByte",
        "Wow64DisableWow64FsRedirection",
        "Wow64RevertWow64FsRedirection",
        "WriteFile",
        "WritePrivateProfileStringW",
        "WriteProcessMemory",
        "lstrcmpA",
        "lstrcmpW",
        "lstrcmpiW",
        "lstrlenA",
        "lstrlenW"
      ]
    },
    {
      "name": "advapi32.dll",
      "imports": 49,
      "functions": [
        "AddAccessAllowedAce",
        "AdjustTokenPrivileges",
        "AllocateAndInitializeSid",
        "CheckTokenMembership",
        "ConvertStringSecurityDescriptorToSecurityDescriptorW",
        "ConvertStringSidToSidW",
        "CreateWellKnownSid",
        "EqualSid",
        "FreeSid",
        "GetAce",
        "GetAclInformation",
        "GetExplicitEntriesFromAclW",
        "GetLengthSid",
        "GetNamedSecurityInfoW",
        "GetSecurityDescriptorControl",
        "GetSecurityDescriptorDacl",
        "GetSecurityDescriptorLength",
        "GetTokenInformation",
        "InitializeAcl",
        "InitializeSecurityDescriptor",
        "LookupAccountSidW",
        "LookupPrivilegeValueW",
        "LsaAddAccountRights",
        "LsaClose",
        "LsaNtStatusToWinError",
        "LsaOpenPolicy",
        "OpenProcessToken",
        "QueryServiceStatus",
        "RegCloseKey",
        "RegCreateKeyExW",
        "RegDeleteKeyExW",
        "RegDeleteValueW",
        "RegEnumKeyExW",
        "RegEnumValueW",
        "RegGetKeySecurity",
        "RegGetValueW",
        "RegLoadKeyW",
        "RegOpenKeyExA",
        "RegOpenKeyExW",
        "RegQueryInfoKeyW",
        "RegQueryValueExA",
        "RegQueryValueExW",
        "RegSetKeySecurity",
        "RegSetValueExA",
        "RegSetValueExW",
        "RegUnLoadKeyW",
        "SetEntriesInAclW",
        "SetNamedSecurityInfoW",
        "SetSecurityDescriptorDacl"
      ]
    },
    {
      "name": "winspool.dll",
      "imports": 4,
      "functions": [
        "ClosePrinter",
        "EnumPrintersA",
        "GetPrinterA",
        "OpenPrinterA"
      ]
    },
    {
      "name": "rpcrt4.dll",
      "imports": 10,
      "functions": [
        "I_RpcExceptionFilter",
        "NdrAsyncClientCall",
        "RpcAsyncCancelCall",
        "RpcAsyncCompleteCall",
        "RpcAsyncInitializeHandle",
        "RpcBindingFree",
        "RpcBindingFromStringBindingW",
        "RpcBindingSetAuthInfoExW",
        "RpcStringBindingComposeW",
        "RpcStringFreeW"
      ]
    },
    {
      "name": "mpr.dll",
      "imports": 1,
      "functions": [
        "WNetGetConnectionW"
      ]
    },
    {
      "name": "sspicli.dll",
      "imports": 1,
      "functions": [
        "GetUserNameExW"
      ]
    },
    {
      "name": "api-ms-win-core-apiquery-l1-1-0.dll",
      "imports": 1,
      "functions": [
        "ApiSetQueryApiSetPresence"
      ]
    }
  ],
  "ImageDLLExports": {
    "exports": 2,
    "functions": [
      "GetHookAPIs",
      "NotifyShims"
    ]
  },
  "ImageHashSignatures": {
    "sha2": "1e63f46e4a7363323fad39be712d6dfe9f70b82feb50115294b2f83398b3e431"
  },
  "scan": {
    "intentions": 13,
    "uniq_apis_matched": 41,
    "results": [
      {
        "intent": "Implements Features To Create/Manipulate System Services",
        "tag": "Expert Input:IBO.0007 - Create/Manipulate System Services",
        "component": "Services",
        "inputs": 19,
        "matches": 5,
        "apis": [
          "CloseServiceHandle",
          "ControlService",
          "CreateServiceW",
          "DeleteService",
          "StartServiceW"
        ]
      },
      {
        "intent": "Inject malicious code into hijacked processes in order to evade process-based defenses",
        "tag": "Defense Evasion:T1055.002 - Thread Execution Hijacking",
        "component": "Processes",
        "inputs": 3,
        "matches": 1,
        "apis": [
          "ResumeThread"
        ]
      },
      {
        "intent": "Implements Features To Create/Manipulate The Windows Registry",
        "tag": "Expert Input:IBO.0008 - Create/Manipulate The Windows Registry",
        "component": "Registry",
        "inputs": 33,
        "matches": 7,
        "apis": [
          "RegCreateKeyExW",
          "RegDeleteKeyExW",
          "RegDeleteValueW",
          "RegOpenKeyExA",
          "RegOpenKeyExW",
          "RegSetValueExA",
          "RegSetValueExW"
        ]
      },
      {
        "intent": "Implements Features To Enumerate The Windows Registry",
        "tag": "Expert Input:IBO.0009 - Enumerate The Windows Registry",
        "component": "Registry",
        "inputs": 6,
        "matches": 2,
        "apis": [
          "RegEnumKeyExW",
          "RegEnumValueW"
        ]
      },
      {
        "intent": "Implements Features To Execute or Spawn New Processes On The Target System",
        "tag": "Expert Input:IBO.0002 - Spawn New Process",
        "component": "Processes",
        "inputs": 7,
        "matches": 4,
        "apis": [
          "CreateProcessA",
          "CreateProcessw",
          "ShellExecuteExA",
          "ShellExecuteExW"
        ]
      },
      {
        "intent": "Query And Discover Windows Registry Configuration Settings",
        "tag": "Discovery:T1012 - Query Registry",
        "component": "Registry",
        "inputs": 11,
        "matches": 4,
        "apis": [
          "RegGetValueW",
          "RegQueryInfoKeyW",
          "RegQueryValueExA",
          "RegQueryValueExW"
        ]
      },
      {
        "intent": "Implements Features To Enumerate/Discover System Services And Their Configuration Data",
        "tag": "Expert Input:IBO.0006 - Enumerate System Services",
        "component": "Services",
        "inputs": 28,
        "matches": 5,
        "apis": [
          "EnumDependentServicesW",
          "OpenSCManagerW",
          "OpenServiceW",
          "QueryServiceStatus",
          "QueryServiceStatusEx"
        ]
      },
      {
        "intent": "Implements Delayed Loads of DLL Resources",
        "tag": "Expert Input:IBO.0005 - Load DLL Resources With Delay During Runtime",
        "component": "---",
        "inputs": 2,
        "matches": 2,
        "apis": [
          "DelayLoadFailureHook",
          "ResolveDelayLoadedAPI"
        ]
      },
      {
        "intent": "Enumerate Files or Directories on the Target System",
        "tag": "Discovery:T1083 - File and Directory Discovery",
        "component": "Filesystem",
        "inputs": 5,
        "matches": 1,
        "apis": [
          "FindFirstFileW"
        ]
      },
      {
        "intent": "Inject DLLs into Processes to evade defenses",
        "tag": "Defense Evasion:T1055 - Dynamic-Link Library Injection",
        "component": "Processes",
        "inputs": 4,
        "matches": 3,
        "apis": [
          "VirtualAlloc",
          "VirtualAllocEx",
          "WriteProcessMemory"
        ]
      },
      {
        "intent": "Enumerate Running Processes/Applications",
        "tag": "Discovery:T1057 - Process Discovery",
        "component": "Processes",
        "inputs": 4,
        "matches": 1,
        "apis": [
          "CreateToolHelp32Snapshot"
        ]
      },
      {
        "intent": "Manipulate Windows Tokens",
        "tag": "Defense Evasion:T1134 - Access Token Manipulation",
        "component": "Privileges",
        "inputs": 10,
        "matches": 4,
        "apis": [
          "AdjustTokenPrivileges",
          "CheckTokenMembership",
          "NtOpenProcessToken",
          "OpenProcessToken"
        ]
      },
      {
        "intent": "Delete Files From Disk Potentially Erasing Important Evidence To Cover Attack Activity",
        "tag": "Defense Evasion:T1070.004 - File Deletion",
        "component": "Filesystem",
        "inputs": 2,
        "matches": 2,
        "apis": [
          "DeleteFileA",
          "DeleteFileW"
        ]
      }
    ]
  }
}