{
  "pe_name": "deviceregistration.dll",
  "pe_type": 523,
  "pe_size": 231936,
  "pe_subsystem": 3,
  "pe_subsystem_caption": "The Windows character (Cosole UI) subsystem",
  "pe_path": "c:\\Windows\\System32\\deviceregistration.dll",
  "pe_timedate_stamp": 1401069652,
  "pe_timedate_human": "2014-05-26T02:00:52.000Z",
  "ImageDLLImports": [
    {
      "name": "msvcrt.dll",
      "imports": 35,
      "functions": [
        "??0exception@@QEAA@AEBQEBD@Z",
        "??0exception@@QEAA@AEBQEBDH@Z",
        "??0exception@@QEAA@AEBV0@@Z",
        "??1exception@@UEAA@XZ",
        "??1type_info@@UEAA@XZ",
        "??3@YAXPEAX@Z",
        "?what@exception@@UEBAPEBDXZ",
        "_CxxThrowException",
        "_XcptFilter",
        "__C_specific_handler",
        "__CxxFrameHandler3",
        "__dllonexit",
        "_amsg_exit",
        "_callnewh",
        "_initterm",
        "_lock",
        "_onexit",
        "_snwprintf_s",
        "_unlock",
        "_vsnwprintf",
        "_wcsicmp",
        "_wcsnicmp",
        "_wtof",
        "_wtoi",
        "free",
        "ldiv",
        "malloc",
        "memcpy",
        "memmove",
        "memset",
        "wcschr",
        "wcscmp",
        "wcsncmp",
        "wcsstr",
        "wcstok_s"
      ]
    },
    {
      "name": "advapi32.dll",
      "imports": 17,
      "functions": [
        "ConvertSidToStringSidW",
        "EventRegister",
        "EventUnregister",
        "EventWriteTransfer",
        "GetTokenInformation",
        "GetTraceEnableFlags",
        "GetTraceEnableLevel",
        "GetTraceLoggerHandle",
        "OpenProcessToken",
        "OpenThreadToken",
        "RegCloseKey",
        "RegCreateKeyExW",
        "RegDeleteKeyW",
        "RegSetValueExW",
        "RegisterTraceGuidsW",
        "TraceMessage",
        "UnregisterTraceGuids"
      ]
    },
    {
      "name": "crypt32.dll",
      "imports": 13,
      "functions": [
        "CertAddCertificateContextToStore",
        "CertCloseStore",
        "CertCreateCertificateContext",
        "CertDeleteCertificateFromStore",
        "CertFindCertificateInStore",
        "CertFreeCertificateContext",
        "CertGetCertificateContextProperty",
        "CertGetNameStringW",
        "CertOpenStore",
        "CertSetCertificateContextProperty",
        "CryptEncodeObjectEx",
        "CryptExportPublicKeyInfo",
        "CryptSignAndEncodeCertificate"
      ]
    },
    {
      "name": "kernel32.dll",
      "imports": 42,
      "functions": [
        "ActivateActCtx",
        "CloseHandle",
        "CreateActCtxW",
        "DeactivateActCtx",
        "FileTimeToSystemTime",
        "FindActCtxSectionStringW",
        "FormatMessageW",
        "FreeLibrary",
        "GetComputerNameExW",
        "GetCurrentProcess",
        "GetCurrentProcessId",
        "GetCurrentThread",
        "GetCurrentThreadId",
        "GetLastError",
        "GetModuleFileNameW",
        "GetModuleHandleExW",
        "GetProcAddress",
        "GetProcessHeap",
        "GetProcessMitigationPolicy",
        "GetSystemTimeAsFileTime",
        "GetTickCount",
        "GetVersionExW",
        "HeapAlloc",
        "HeapFree",
        "LoadLibraryExW",
        "LoadLibraryW",
        "LocalAlloc",
        "LocalFree",
        "MultiByteToWideChar",
        "OutputDebugStringA",
        "QueryActCtxW",
        "QueryPerformanceCounter",
        "RaiseException",
        "RtlCaptureContext",
        "RtlLookupFunctionEntry",
        "RtlVirtualUnwind",
        "SetLastError",
        "SetUnhandledExceptionFilter",
        "Sleep",
        "TerminateProcess",
        "UnhandledExceptionFilter",
        "WideCharToMultiByte"
      ]
    },
    {
      "name": "ncrypt.dll",
      "imports": 5,
      "functions": [
        "NCryptCreatePersistedKey",
        "NCryptFinalizeKey",
        "NCryptFreeObject",
        "NCryptOpenStorageProvider",
        "NCryptSetProperty"
      ]
    },
    {
      "name": "ole32.dll",
      "imports": 4,
      "functions": [
        "CoCreateInstance",
        "CoInitializeEx",
        "CoUninitialize",
        "StringFromCLSID"
      ]
    },
    {
      "name": "oleaut32.dll",
      "imports": 0,
      "functions": []
    },
    {
      "name": "rpcrt4.dll",
      "imports": 10,
      "functions": [
        "I_RpcExceptionFilter",
        "I_RpcMapWin32Status",
        "NdrClientCall3",
        "RpcBindingBind",
        "RpcBindingCreateW",
        "RpcBindingFree",
        "RpcBindingFromStringBindingW",
        "RpcStringBindingComposeW",
        "RpcStringFreeW",
        "UuidCreate"
      ]
    },
    {
      "name": "shlwapi.dll",
      "imports": 0,
      "functions": []
    },
    {
      "name": "wininet.dll",
      "imports": 10,
      "functions": [
        "HttpAddRequestHeadersW",
        "HttpOpenRequestW",
        "HttpQueryInfoW",
        "HttpSendRequestW",
        "InternetCloseHandle",
        "InternetConnectW",
        "InternetOpenW",
        "InternetReadFile",
        "InternetSetOptionW",
        "InternetSetStatusCallbackW"
      ]
    },
    {
      "name": "xmllite.dll",
      "imports": 1,
      "functions": [
        "CreateXmlReader"
      ]
    },
    {
      "name": "api-ms-win-core-winrt-l1-1-0.dll",
      "imports": 3,
      "functions": [
        "RoGetActivationFactory",
        "RoInitialize",
        "RoUninitialize"
      ]
    },
    {
      "name": "api-ms-win-core-winrt-string-l1-1-0.dll",
      "imports": 4,
      "functions": [
        "WindowsCreateString",
        "WindowsCreateStringReference",
        "WindowsDeleteString",
        "WindowsGetStringRawBuffer"
      ]
    }
  ],
  "ImageDLLExports": {
    "exports": 6,
    "functions": [
      "ConfigureRegistrationIEZoneMappings",
      "DiscoverRegistrationService",
      "GetRegistrationInfo",
      "IsRegistrationAvailable",
      "RegisterDevice",
      "UnRegisterDevice"
    ]
  },
  "ImageHashSignatures": {
    "sha2": "7448a134f8f2bb33d5d5415901874519290475e3a5532d730392a81a9a44f62d"
  },
  "scan": {
    "intentions": 3,
    "uniq_apis_matched": 9,
    "results": [
      {
        "intent": "Initiate Network Connections Over HTTP, HTTPS To Download Content On The Target System",
        "tag": "Command And Control:T1105 - Ingress Tool Transfer",
        "component": "Networking",
        "inputs": 21,
        "matches": 4,
        "apis": [
          "HttpAddRequestHeadersW",
          "HttpOpenRequestW",
          "HttpSendRequestW",
          "InternetConnectW"
        ]
      },
      {
        "intent": "Implements Features To Create/Manipulate The Windows Registry",
        "tag": "Expert Input:IBO.0008 - Create/Manipulate The Windows Registry",
        "component": "Registry",
        "inputs": 33,
        "matches": 3,
        "apis": [
          "RegCreateKeyExW",
          "RegDeleteKeyW",
          "RegSetValueExW"
        ]
      },
      {
        "intent": "Manipulate Windows Tokens",
        "tag": "Defense Evasion:T1134 - Access Token Manipulation",
        "component": "Privileges",
        "inputs": 10,
        "matches": 2,
        "apis": [
          "OpenProcessToken",
          "OpenThreadToken"
        ]
      }
    ]
  }
}